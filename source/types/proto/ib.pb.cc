// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ib.proto

#include "ib.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ib_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComboLeg_ib_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ib_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeltaNeutralContract_ib_2eproto;
namespace Jde {
namespace Markets {
namespace Proto {
class ComboLegDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComboLeg> _instance;
} _ComboLeg_default_instance_;
class DeltaNeutralContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeltaNeutralContract> _instance;
} _DeltaNeutralContract_default_instance_;
class ContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Contract> _instance;
} _Contract_default_instance_;
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde
static void InitDefaultsscc_info_ComboLeg_ib_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::_ComboLeg_default_instance_;
    new (ptr) ::Jde::Markets::Proto::ComboLeg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::ComboLeg::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComboLeg_ib_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ComboLeg_ib_2eproto}, {}};

static void InitDefaultsscc_info_Contract_ib_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::_Contract_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Contract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Contract::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Contract_ib_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Contract_ib_2eproto}, {
      &scc_info_ComboLeg_ib_2eproto.base,
      &scc_info_DeltaNeutralContract_ib_2eproto.base,}};

static void InitDefaultsscc_info_DeltaNeutralContract_ib_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::_DeltaNeutralContract_default_instance_;
    new (ptr) ::Jde::Markets::Proto::DeltaNeutralContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::DeltaNeutralContract::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeltaNeutralContract_ib_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeltaNeutralContract_ib_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ib_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ib_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ib_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ib_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, conid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, ratio_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, action_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, exchange_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, openclose_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, shortsaleslot_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, designatedlocation_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::ComboLeg, exemptcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::DeltaNeutralContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::DeltaNeutralContract, id_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::DeltaNeutralContract, delta_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::DeltaNeutralContract, price_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, id_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, symbol_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, sectype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, lasttradedateorcontractmonth_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, strike_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, right_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, multiplier_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, exchange_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, primaryexchange_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, currency_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, localsymbol_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, tradingclass_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, includeexpired_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, secidtype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, secid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, combolegsdescrip_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, combolegs_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, deltaneutral_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, name_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Contract, flags_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Jde::Markets::Proto::ComboLeg)},
  { 13, -1, sizeof(::Jde::Markets::Proto::DeltaNeutralContract)},
  { 21, -1, sizeof(::Jde::Markets::Proto::Contract)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::_ComboLeg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::_DeltaNeutralContract_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::_Contract_default_instance_),
};

const char descriptor_table_protodef_ib_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\010ib.proto\022\021Jde.Markets.Proto\"\244\001\n\010ComboL"
  "eg\022\r\n\005ConId\030\001 \001(\r\022\r\n\005Ratio\030\002 \001(\005\022\016\n\006Acti"
  "on\030\003 \001(\t\022\020\n\010Exchange\030\004 \001(\t\022\021\n\tOpenClose\030"
  "\005 \001(\005\022\025\n\rShortSaleSlot\030\006 \001(\005\022\032\n\022Designat"
  "edLocation\030\007 \001(\t\022\022\n\nExemptCode\030\010 \001(\005\"@\n\024"
  "DeltaNeutralContract\022\n\n\002Id\030\001 \001(\005\022\r\n\005Delt"
  "a\030\002 \001(\001\022\r\n\005Price\030\003 \001(\001\"\330\003\n\010Contract\022\n\n\002I"
  "d\030\001 \001(\r\022\016\n\006Symbol\030\002 \001(\t\022\017\n\007SecType\030\003 \001(\t"
  "\022$\n\034LastTradeDateOrContractMonth\030\004 \001(\t\022\016"
  "\n\006Strike\030\005 \001(\001\022\r\n\005Right\030\006 \001(\t\022\022\n\nMultipl"
  "ier\030\007 \001(\t\022\020\n\010Exchange\030\010 \001(\t\022\027\n\017PrimaryEx"
  "change\030\t \001(\t\022\020\n\010Currency\030\n \001(\t\022\023\n\013LocalS"
  "ymbol\030\013 \001(\t\022\024\n\014TradingClass\030\014 \001(\t\022\026\n\016Inc"
  "ludeExpired\030\r \001(\010\022\021\n\tSecIdType\030\016 \001(\t\022\r\n\005"
  "SecId\030\017 \001(\t\022\030\n\020ComboLegsDescrip\030\020 \001(\t\022.\n"
  "\tComboLegs\030\021 \003(\0132\033.Jde.Markets.Proto.Com"
  "boLeg\022=\n\014DeltaNeutral\030\022 \001(\0132\'.Jde.Market"
  "s.Proto.DeltaNeutralContract\022\014\n\004Name\030\023 \001"
  "(\t\022\r\n\005Flags\030\024 \001(\rb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ib_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ib_2eproto_sccs[3] = {
  &scc_info_ComboLeg_ib_2eproto.base,
  &scc_info_Contract_ib_2eproto.base,
  &scc_info_DeltaNeutralContract_ib_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ib_2eproto_once;
static bool descriptor_table_ib_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ib_2eproto = {
  &descriptor_table_ib_2eproto_initialized, descriptor_table_protodef_ib_2eproto, "ib.proto", 745,
  &descriptor_table_ib_2eproto_once, descriptor_table_ib_2eproto_sccs, descriptor_table_ib_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_ib_2eproto::offsets,
  file_level_metadata_ib_2eproto, 3, file_level_enum_descriptors_ib_2eproto, file_level_service_descriptors_ib_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ib_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ib_2eproto), true);
namespace Jde {
namespace Markets {
namespace Proto {

// ===================================================================

void ComboLeg::InitAsDefaultInstance() {
}
class ComboLeg::_Internal {
 public:
};

ComboLeg::ComboLeg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.ComboLeg)
}
ComboLeg::ComboLeg(const ComboLeg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  exchange_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_exchange().empty()) {
    exchange_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  designatedlocation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_designatedlocation().empty()) {
    designatedlocation_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.designatedlocation_);
  }
  ::memcpy(&conid_, &from.conid_,
    static_cast<size_t>(reinterpret_cast<char*>(&exemptcode_) -
    reinterpret_cast<char*>(&conid_)) + sizeof(exemptcode_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.ComboLeg)
}

void ComboLeg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ComboLeg_ib_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  designatedlocation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&conid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exemptcode_) -
      reinterpret_cast<char*>(&conid_)) + sizeof(exemptcode_));
}

ComboLeg::~ComboLeg() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.ComboLeg)
  SharedDtor();
}

void ComboLeg::SharedDtor() {
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  designatedlocation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ComboLeg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComboLeg& ComboLeg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComboLeg_ib_2eproto.base);
  return *internal_default_instance();
}


void ComboLeg::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.ComboLeg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  designatedlocation_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&conid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exemptcode_) -
      reinterpret_cast<char*>(&conid_)) + sizeof(exemptcode_));
  _internal_metadata_.Clear();
}

const char* ComboLeg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 ConId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          conid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Ratio = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Action = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_action(), ptr, ctx, "Jde.Markets.Proto.ComboLeg.Action");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Exchange = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_exchange(), ptr, ctx, "Jde.Markets.Proto.ComboLeg.Exchange");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 OpenClose = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          openclose_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ShortSaleSlot = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          shortsaleslot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string DesignatedLocation = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_designatedlocation(), ptr, ctx, "Jde.Markets.Proto.ComboLeg.DesignatedLocation");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ExemptCode = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          exemptcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComboLeg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.ComboLeg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ConId = 1;
  if (this->conid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_conid(), target);
  }

  // int32 Ratio = 2;
  if (this->ratio() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_ratio(), target);
  }

  // string Action = 3;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.ComboLeg.Action");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_action(), target);
  }

  // string Exchange = 4;
  if (this->exchange().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_exchange().data(), static_cast<int>(this->_internal_exchange().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.ComboLeg.Exchange");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_exchange(), target);
  }

  // int32 OpenClose = 5;
  if (this->openclose() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_openclose(), target);
  }

  // int32 ShortSaleSlot = 6;
  if (this->shortsaleslot() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_shortsaleslot(), target);
  }

  // string DesignatedLocation = 7;
  if (this->designatedlocation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_designatedlocation().data(), static_cast<int>(this->_internal_designatedlocation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.ComboLeg.DesignatedLocation");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_designatedlocation(), target);
  }

  // int32 ExemptCode = 8;
  if (this->exemptcode() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_exemptcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.ComboLeg)
  return target;
}

size_t ComboLeg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.ComboLeg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Action = 3;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  // string Exchange = 4;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_exchange());
  }

  // string DesignatedLocation = 7;
  if (this->designatedlocation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_designatedlocation());
  }

  // uint32 ConId = 1;
  if (this->conid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_conid());
  }

  // int32 Ratio = 2;
  if (this->ratio() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ratio());
  }

  // int32 OpenClose = 5;
  if (this->openclose() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_openclose());
  }

  // int32 ShortSaleSlot = 6;
  if (this->shortsaleslot() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shortsaleslot());
  }

  // int32 ExemptCode = 8;
  if (this->exemptcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_exemptcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComboLeg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.ComboLeg)
  GOOGLE_DCHECK_NE(&from, this);
  const ComboLeg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComboLeg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.ComboLeg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.ComboLeg)
    MergeFrom(*source);
  }
}

void ComboLeg::MergeFrom(const ComboLeg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.ComboLeg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {

    action_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.action_);
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.designatedlocation().size() > 0) {

    designatedlocation_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.designatedlocation_);
  }
  if (from.conid() != 0) {
    _internal_set_conid(from._internal_conid());
  }
  if (from.ratio() != 0) {
    _internal_set_ratio(from._internal_ratio());
  }
  if (from.openclose() != 0) {
    _internal_set_openclose(from._internal_openclose());
  }
  if (from.shortsaleslot() != 0) {
    _internal_set_shortsaleslot(from._internal_shortsaleslot());
  }
  if (from.exemptcode() != 0) {
    _internal_set_exemptcode(from._internal_exemptcode());
  }
}

void ComboLeg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.ComboLeg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComboLeg::CopyFrom(const ComboLeg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.ComboLeg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComboLeg::IsInitialized() const {
  return true;
}

void ComboLeg::InternalSwap(ComboLeg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_.Swap(&other->exchange_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  designatedlocation_.Swap(&other->designatedlocation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(conid_, other->conid_);
  swap(ratio_, other->ratio_);
  swap(openclose_, other->openclose_);
  swap(shortsaleslot_, other->shortsaleslot_);
  swap(exemptcode_, other->exemptcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComboLeg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeltaNeutralContract::InitAsDefaultInstance() {
}
class DeltaNeutralContract::_Internal {
 public:
};

DeltaNeutralContract::DeltaNeutralContract()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.DeltaNeutralContract)
}
DeltaNeutralContract::DeltaNeutralContract(const DeltaNeutralContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&delta_, &from.delta_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&delta_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.DeltaNeutralContract)
}

void DeltaNeutralContract::SharedCtor() {
  ::memset(&delta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&delta_)) + sizeof(id_));
}

DeltaNeutralContract::~DeltaNeutralContract() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.DeltaNeutralContract)
  SharedDtor();
}

void DeltaNeutralContract::SharedDtor() {
}

void DeltaNeutralContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeltaNeutralContract& DeltaNeutralContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeltaNeutralContract_ib_2eproto.base);
  return *internal_default_instance();
}


void DeltaNeutralContract::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.DeltaNeutralContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&delta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&delta_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

const char* DeltaNeutralContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double Delta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          delta_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Price = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeltaNeutralContract::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.DeltaNeutralContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // double Delta = 2;
  if (!(this->delta() <= 0 && this->delta() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_delta(), target);
  }

  // double Price = 3;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_price(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.DeltaNeutralContract)
  return target;
}

size_t DeltaNeutralContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.DeltaNeutralContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double Delta = 2;
  if (!(this->delta() <= 0 && this->delta() >= 0)) {
    total_size += 1 + 8;
  }

  // double Price = 3;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeltaNeutralContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.DeltaNeutralContract)
  GOOGLE_DCHECK_NE(&from, this);
  const DeltaNeutralContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeltaNeutralContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.DeltaNeutralContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.DeltaNeutralContract)
    MergeFrom(*source);
  }
}

void DeltaNeutralContract::MergeFrom(const DeltaNeutralContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.DeltaNeutralContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.delta() <= 0 && from.delta() >= 0)) {
    _internal_set_delta(from._internal_delta());
  }
  if (!(from.price() <= 0 && from.price() >= 0)) {
    _internal_set_price(from._internal_price());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeltaNeutralContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.DeltaNeutralContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeltaNeutralContract::CopyFrom(const DeltaNeutralContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.DeltaNeutralContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeltaNeutralContract::IsInitialized() const {
  return true;
}

void DeltaNeutralContract::InternalSwap(DeltaNeutralContract* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(delta_, other->delta_);
  swap(price_, other->price_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeltaNeutralContract::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Contract::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::_Contract_default_instance_._instance.get_mutable()->deltaneutral_ = const_cast< ::Jde::Markets::Proto::DeltaNeutralContract*>(
      ::Jde::Markets::Proto::DeltaNeutralContract::internal_default_instance());
}
class Contract::_Internal {
 public:
  static const ::Jde::Markets::Proto::DeltaNeutralContract& deltaneutral(const Contract* msg);
};

const ::Jde::Markets::Proto::DeltaNeutralContract&
Contract::_Internal::deltaneutral(const Contract* msg) {
  return *msg->deltaneutral_;
}
Contract::Contract()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Contract)
}
Contract::Contract(const Contract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      combolegs_(from.combolegs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_symbol().empty()) {
    symbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  sectype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sectype().empty()) {
    sectype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sectype_);
  }
  lasttradedateorcontractmonth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lasttradedateorcontractmonth().empty()) {
    lasttradedateorcontractmonth_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.lasttradedateorcontractmonth_);
  }
  right_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_right().empty()) {
    right_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.right_);
  }
  multiplier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_multiplier().empty()) {
    multiplier_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.multiplier_);
  }
  exchange_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_exchange().empty()) {
    exchange_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  primaryexchange_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_primaryexchange().empty()) {
    primaryexchange_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.primaryexchange_);
  }
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency().empty()) {
    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  localsymbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_localsymbol().empty()) {
    localsymbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.localsymbol_);
  }
  tradingclass_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tradingclass().empty()) {
    tradingclass_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tradingclass_);
  }
  secidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_secidtype().empty()) {
    secidtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secidtype_);
  }
  secid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_secid().empty()) {
    secid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secid_);
  }
  combolegsdescrip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_combolegsdescrip().empty()) {
    combolegsdescrip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.combolegsdescrip_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from._internal_has_deltaneutral()) {
    deltaneutral_ = new ::Jde::Markets::Proto::DeltaNeutralContract(*from.deltaneutral_);
  } else {
    deltaneutral_ = nullptr;
  }
  ::memcpy(&strike_, &from.strike_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&strike_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Contract)
}

void Contract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Contract_ib_2eproto.base);
  symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sectype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lasttradedateorcontractmonth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  right_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  multiplier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  primaryexchange_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localsymbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradingclass_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  combolegsdescrip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&deltaneutral_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&deltaneutral_)) + sizeof(flags_));
}

Contract::~Contract() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Contract)
  SharedDtor();
}

void Contract::SharedDtor() {
  symbol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sectype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lasttradedateorcontractmonth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  right_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  multiplier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  primaryexchange_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localsymbol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradingclass_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secidtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  combolegsdescrip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete deltaneutral_;
}

void Contract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Contract& Contract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Contract_ib_2eproto.base);
  return *internal_default_instance();
}


void Contract::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Contract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  combolegs_.Clear();
  symbol_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sectype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lasttradedateorcontractmonth_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  right_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  multiplier_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  exchange_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  primaryexchange_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localsymbol_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradingclass_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secidtype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  combolegsdescrip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && deltaneutral_ != nullptr) {
    delete deltaneutral_;
  }
  deltaneutral_ = nullptr;
  ::memset(&strike_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&strike_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

const char* Contract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Symbol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_symbol(), ptr, ctx, "Jde.Markets.Proto.Contract.Symbol");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SecType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_sectype(), ptr, ctx, "Jde.Markets.Proto.Contract.SecType");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string LastTradeDateOrContractMonth = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_lasttradedateorcontractmonth(), ptr, ctx, "Jde.Markets.Proto.Contract.LastTradeDateOrContractMonth");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double Strike = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          strike_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string Right = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_right(), ptr, ctx, "Jde.Markets.Proto.Contract.Right");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Multiplier = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_multiplier(), ptr, ctx, "Jde.Markets.Proto.Contract.Multiplier");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Exchange = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_exchange(), ptr, ctx, "Jde.Markets.Proto.Contract.Exchange");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string PrimaryExchange = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_primaryexchange(), ptr, ctx, "Jde.Markets.Proto.Contract.PrimaryExchange");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Currency = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_currency(), ptr, ctx, "Jde.Markets.Proto.Contract.Currency");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string LocalSymbol = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_localsymbol(), ptr, ctx, "Jde.Markets.Proto.Contract.LocalSymbol");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TradingClass = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_tradingclass(), ptr, ctx, "Jde.Markets.Proto.Contract.TradingClass");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool IncludeExpired = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          includeexpired_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SecIdType = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_secidtype(), ptr, ctx, "Jde.Markets.Proto.Contract.SecIdType");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SecId = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_secid(), ptr, ctx, "Jde.Markets.Proto.Contract.SecId");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ComboLegsDescrip = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_combolegsdescrip(), ptr, ctx, "Jde.Markets.Proto.Contract.ComboLegsDescrip");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.ComboLeg ComboLegs = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_combolegs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.DeltaNeutralContract DeltaNeutral = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_deltaneutral(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "Jde.Markets.Proto.Contract.Name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Flags = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Contract::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Contract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string Symbol = 2;
  if (this->symbol().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_symbol().data(), static_cast<int>(this->_internal_symbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.Symbol");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_symbol(), target);
  }

  // string SecType = 3;
  if (this->sectype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sectype().data(), static_cast<int>(this->_internal_sectype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.SecType");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_sectype(), target);
  }

  // string LastTradeDateOrContractMonth = 4;
  if (this->lasttradedateorcontractmonth().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lasttradedateorcontractmonth().data(), static_cast<int>(this->_internal_lasttradedateorcontractmonth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.LastTradeDateOrContractMonth");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_lasttradedateorcontractmonth(), target);
  }

  // double Strike = 5;
  if (!(this->strike() <= 0 && this->strike() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_strike(), target);
  }

  // string Right = 6;
  if (this->right().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_right().data(), static_cast<int>(this->_internal_right().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.Right");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_right(), target);
  }

  // string Multiplier = 7;
  if (this->multiplier().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_multiplier().data(), static_cast<int>(this->_internal_multiplier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.Multiplier");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_multiplier(), target);
  }

  // string Exchange = 8;
  if (this->exchange().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_exchange().data(), static_cast<int>(this->_internal_exchange().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.Exchange");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_exchange(), target);
  }

  // string PrimaryExchange = 9;
  if (this->primaryexchange().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primaryexchange().data(), static_cast<int>(this->_internal_primaryexchange().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.PrimaryExchange");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_primaryexchange(), target);
  }

  // string Currency = 10;
  if (this->currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency().data(), static_cast<int>(this->_internal_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.Currency");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_currency(), target);
  }

  // string LocalSymbol = 11;
  if (this->localsymbol().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_localsymbol().data(), static_cast<int>(this->_internal_localsymbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.LocalSymbol");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_localsymbol(), target);
  }

  // string TradingClass = 12;
  if (this->tradingclass().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tradingclass().data(), static_cast<int>(this->_internal_tradingclass().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.TradingClass");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_tradingclass(), target);
  }

  // bool IncludeExpired = 13;
  if (this->includeexpired() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->_internal_includeexpired(), target);
  }

  // string SecIdType = 14;
  if (this->secidtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secidtype().data(), static_cast<int>(this->_internal_secidtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.SecIdType");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_secidtype(), target);
  }

  // string SecId = 15;
  if (this->secid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secid().data(), static_cast<int>(this->_internal_secid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.SecId");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_secid(), target);
  }

  // string ComboLegsDescrip = 16;
  if (this->combolegsdescrip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_combolegsdescrip().data(), static_cast<int>(this->_internal_combolegsdescrip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.ComboLegsDescrip");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_combolegsdescrip(), target);
  }

  // repeated .Jde.Markets.Proto.ComboLeg ComboLegs = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_combolegs_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(17, this->_internal_combolegs(i), target, stream);
  }

  // .Jde.Markets.Proto.DeltaNeutralContract DeltaNeutral = 18;
  if (this->has_deltaneutral()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, _Internal::deltaneutral(this), target, stream);
  }

  // string Name = 19;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Contract.Name");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_name(), target);
  }

  // uint32 Flags = 20;
  if (this->flags() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Contract)
  return target;
}

size_t Contract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Contract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.ComboLeg ComboLegs = 17;
  total_size += 2UL * this->_internal_combolegs_size();
  for (const auto& msg : this->combolegs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Symbol = 2;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_symbol());
  }

  // string SecType = 3;
  if (this->sectype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sectype());
  }

  // string LastTradeDateOrContractMonth = 4;
  if (this->lasttradedateorcontractmonth().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lasttradedateorcontractmonth());
  }

  // string Right = 6;
  if (this->right().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_right());
  }

  // string Multiplier = 7;
  if (this->multiplier().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_multiplier());
  }

  // string Exchange = 8;
  if (this->exchange().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_exchange());
  }

  // string PrimaryExchange = 9;
  if (this->primaryexchange().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_primaryexchange());
  }

  // string Currency = 10;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency());
  }

  // string LocalSymbol = 11;
  if (this->localsymbol().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_localsymbol());
  }

  // string TradingClass = 12;
  if (this->tradingclass().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tradingclass());
  }

  // string SecIdType = 14;
  if (this->secidtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secidtype());
  }

  // string SecId = 15;
  if (this->secid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secid());
  }

  // string ComboLegsDescrip = 16;
  if (this->combolegsdescrip().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_combolegsdescrip());
  }

  // string Name = 19;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .Jde.Markets.Proto.DeltaNeutralContract DeltaNeutral = 18;
  if (this->has_deltaneutral()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deltaneutral_);
  }

  // double Strike = 5;
  if (!(this->strike() <= 0 && this->strike() >= 0)) {
    total_size += 1 + 8;
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // bool IncludeExpired = 13;
  if (this->includeexpired() != 0) {
    total_size += 1 + 1;
  }

  // uint32 Flags = 20;
  if (this->flags() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Contract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Contract)
  GOOGLE_DCHECK_NE(&from, this);
  const Contract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Contract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Contract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Contract)
    MergeFrom(*source);
  }
}

void Contract::MergeFrom(const Contract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Contract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  combolegs_.MergeFrom(from.combolegs_);
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.sectype().size() > 0) {

    sectype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.sectype_);
  }
  if (from.lasttradedateorcontractmonth().size() > 0) {

    lasttradedateorcontractmonth_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.lasttradedateorcontractmonth_);
  }
  if (from.right().size() > 0) {

    right_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.right_);
  }
  if (from.multiplier().size() > 0) {

    multiplier_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.multiplier_);
  }
  if (from.exchange().size() > 0) {

    exchange_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.exchange_);
  }
  if (from.primaryexchange().size() > 0) {

    primaryexchange_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.primaryexchange_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.localsymbol().size() > 0) {

    localsymbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.localsymbol_);
  }
  if (from.tradingclass().size() > 0) {

    tradingclass_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tradingclass_);
  }
  if (from.secidtype().size() > 0) {

    secidtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secidtype_);
  }
  if (from.secid().size() > 0) {

    secid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secid_);
  }
  if (from.combolegsdescrip().size() > 0) {

    combolegsdescrip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.combolegsdescrip_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_deltaneutral()) {
    _internal_mutable_deltaneutral()->::Jde::Markets::Proto::DeltaNeutralContract::MergeFrom(from._internal_deltaneutral());
  }
  if (!(from.strike() <= 0 && from.strike() >= 0)) {
    _internal_set_strike(from._internal_strike());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.includeexpired() != 0) {
    _internal_set_includeexpired(from._internal_includeexpired());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void Contract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contract::CopyFrom(const Contract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contract::IsInitialized() const {
  return true;
}

void Contract::InternalSwap(Contract* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  combolegs_.InternalSwap(&other->combolegs_);
  symbol_.Swap(&other->symbol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sectype_.Swap(&other->sectype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lasttradedateorcontractmonth_.Swap(&other->lasttradedateorcontractmonth_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  right_.Swap(&other->right_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  multiplier_.Swap(&other->multiplier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exchange_.Swap(&other->exchange_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  primaryexchange_.Swap(&other->primaryexchange_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_.Swap(&other->currency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  localsymbol_.Swap(&other->localsymbol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tradingclass_.Swap(&other->tradingclass_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  secidtype_.Swap(&other->secidtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  secid_.Swap(&other->secid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  combolegsdescrip_.Swap(&other->combolegsdescrip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(deltaneutral_, other->deltaneutral_);
  swap(strike_, other->strike_);
  swap(id_, other->id_);
  swap(includeexpired_, other->includeexpired_);
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Contract::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::ComboLeg* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::ComboLeg >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::ComboLeg >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::DeltaNeutralContract* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::DeltaNeutralContract >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::DeltaNeutralContract >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Contract* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Contract >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Contract >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
