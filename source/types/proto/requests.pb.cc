// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: requests.proto

#include "requests.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ib_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Contract_ib_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FlexExecutions_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenericRequest_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestAccountUpdates_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestAccountUpdatesMulti_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestContractDetails_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestHistoricalData_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestMrkDataSmart_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestOptions_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_requests_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_RequestUnion_requests_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace Jde {
namespace Markets {
namespace Proto {
namespace Requests {
class GenericRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenericRequest> _instance;
} _GenericRequest_default_instance_;
class RequestAccountUpdatesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestAccountUpdates> _instance;
} _RequestAccountUpdates_default_instance_;
class RequestAccountUpdatesMultiDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestAccountUpdatesMulti> _instance;
} _RequestAccountUpdatesMulti_default_instance_;
class RequestHistoricalDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestHistoricalData> _instance;
} _RequestHistoricalData_default_instance_;
class RequestMrkDataSmartDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestMrkDataSmart> _instance;
} _RequestMrkDataSmart_default_instance_;
class RequestContractDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestContractDetails> _instance;
} _RequestContractDetails_default_instance_;
class RequestOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestOptions> _instance;
} _RequestOptions_default_instance_;
class FlexExecutionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FlexExecutions> _instance;
} _FlexExecutions_default_instance_;
class RequestUnionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestUnion> _instance;
  const ::Jde::Markets::Proto::Requests::GenericRequest* genericrequest_;
  const ::Jde::Markets::Proto::Requests::RequestAccountUpdates* accountupdates_;
  const ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* accountupdatesmulti_;
  const ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* mrkdatasmart_;
  const ::Jde::Markets::Proto::Requests::RequestContractDetails* contractdetails_;
  const ::Jde::Markets::Proto::Requests::RequestOptions* options_;
  const ::Jde::Markets::Proto::Requests::RequestHistoricalData* historicaldata_;
  const ::Jde::Markets::Proto::Requests::FlexExecutions* flexexecutions_;
} _RequestUnion_default_instance_;
class RequestTransmissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestTransmission> _instance;
} _RequestTransmission_default_instance_;
}  // namespace Requests
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde
static void InitDefaultsscc_info_FlexExecutions_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_FlexExecutions_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::FlexExecutions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::FlexExecutions::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FlexExecutions_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FlexExecutions_requests_2eproto}, {}};

static void InitDefaultsscc_info_GenericRequest_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_GenericRequest_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::GenericRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::GenericRequest::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenericRequest_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenericRequest_requests_2eproto}, {}};

static void InitDefaultsscc_info_RequestAccountUpdates_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_RequestAccountUpdates_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::RequestAccountUpdates();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::RequestAccountUpdates::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestAccountUpdates_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RequestAccountUpdates_requests_2eproto}, {}};

static void InitDefaultsscc_info_RequestAccountUpdatesMulti_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_RequestAccountUpdatesMulti_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestAccountUpdatesMulti_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RequestAccountUpdatesMulti_requests_2eproto}, {}};

static void InitDefaultsscc_info_RequestContractDetails_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_RequestContractDetails_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::RequestContractDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::RequestContractDetails::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestContractDetails_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RequestContractDetails_requests_2eproto}, {
      &scc_info_Contract_ib_2eproto.base,}};

static void InitDefaultsscc_info_RequestHistoricalData_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_RequestHistoricalData_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::RequestHistoricalData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::RequestHistoricalData::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RequestHistoricalData_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RequestHistoricalData_requests_2eproto}, {
      &scc_info_Contract_ib_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_RequestMrkDataSmart_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_RequestMrkDataSmart_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::RequestMrkDataSmart();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::RequestMrkDataSmart::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestMrkDataSmart_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RequestMrkDataSmart_requests_2eproto}, {}};

static void InitDefaultsscc_info_RequestOptions_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_RequestOptions_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::RequestOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::RequestOptions::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestOptions_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RequestOptions_requests_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_RequestTransmission_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_RequestTransmission_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::RequestTransmission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::RequestTransmission::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestTransmission_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RequestTransmission_requests_2eproto}, {
      &scc_info_RequestUnion_requests_2eproto.base,}};

static void InitDefaultsscc_info_RequestUnion_requests_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Requests::RequestUnion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Requests::RequestUnion::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_RequestUnion_requests_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 8, 0, InitDefaultsscc_info_RequestUnion_requests_2eproto}, {
      &scc_info_GenericRequest_requests_2eproto.base,
      &scc_info_RequestAccountUpdates_requests_2eproto.base,
      &scc_info_RequestAccountUpdatesMulti_requests_2eproto.base,
      &scc_info_RequestMrkDataSmart_requests_2eproto.base,
      &scc_info_RequestContractDetails_requests_2eproto.base,
      &scc_info_RequestOptions_requests_2eproto.base,
      &scc_info_RequestHistoricalData_requests_2eproto.base,
      &scc_info_FlexExecutions_requests_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_requests_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_requests_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_requests_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_requests_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::GenericRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::GenericRequest, type_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::GenericRequest, requestid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestAccountUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestAccountUpdates, subscribe_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestAccountUpdates, accountnumber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti, accountnumber_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti, modelcode_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti, ledgerandnlv_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, contract_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, date_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, days_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, barsize_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, display_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, userth_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestHistoricalData, keepuptodate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestMrkDataSmart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestMrkDataSmart, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestMrkDataSmart, contractid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestMrkDataSmart, ticklist_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestMrkDataSmart, snapshot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestContractDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestContractDetails, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestContractDetails, contracts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestOptions, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestOptions, contractid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestOptions, iscall_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestOptions, date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::FlexExecutions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::FlexExecutions, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::FlexExecutions, accountnumber_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::FlexExecutions, date_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestUnion, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::Jde::Markets::Proto::Requests::RequestUnionDefaultTypeInternal, genericrequest_),
  offsetof(::Jde::Markets::Proto::Requests::RequestUnionDefaultTypeInternal, accountupdates_),
  offsetof(::Jde::Markets::Proto::Requests::RequestUnionDefaultTypeInternal, accountupdatesmulti_),
  offsetof(::Jde::Markets::Proto::Requests::RequestUnionDefaultTypeInternal, mrkdatasmart_),
  offsetof(::Jde::Markets::Proto::Requests::RequestUnionDefaultTypeInternal, contractdetails_),
  offsetof(::Jde::Markets::Proto::Requests::RequestUnionDefaultTypeInternal, options_),
  offsetof(::Jde::Markets::Proto::Requests::RequestUnionDefaultTypeInternal, historicaldata_),
  offsetof(::Jde::Markets::Proto::Requests::RequestUnionDefaultTypeInternal, flexexecutions_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestUnion, Value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestTransmission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Requests::RequestTransmission, messages_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Jde::Markets::Proto::Requests::GenericRequest)},
  { 7, -1, sizeof(::Jde::Markets::Proto::Requests::RequestAccountUpdates)},
  { 14, -1, sizeof(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti)},
  { 23, -1, sizeof(::Jde::Markets::Proto::Requests::RequestHistoricalData)},
  { 36, -1, sizeof(::Jde::Markets::Proto::Requests::RequestMrkDataSmart)},
  { 45, -1, sizeof(::Jde::Markets::Proto::Requests::RequestContractDetails)},
  { 52, -1, sizeof(::Jde::Markets::Proto::Requests::RequestOptions)},
  { 61, -1, sizeof(::Jde::Markets::Proto::Requests::FlexExecutions)},
  { 69, -1, sizeof(::Jde::Markets::Proto::Requests::RequestUnion)},
  { 83, -1, sizeof(::Jde::Markets::Proto::Requests::RequestTransmission)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_GenericRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_RequestAccountUpdates_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_RequestAccountUpdatesMulti_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_RequestHistoricalData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_RequestMrkDataSmart_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_RequestContractDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_RequestOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_FlexExecutions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Requests::_RequestTransmission_default_instance_),
};

const char descriptor_table_protodef_requests_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016requests.proto\022\032Jde.Markets.Proto.Requ"
  "ests\032\037google/protobuf/timestamp.proto\032\010i"
  "b.proto\"X\n\016GenericRequest\0223\n\004Type\030\001 \001(\0162"
  "%.Jde.Markets.Proto.Requests.ERequests\022\021"
  "\n\tRequestId\030\002 \001(\005\"A\n\025RequestAccountUpdat"
  "es\022\021\n\tSubscribe\030\001 \001(\010\022\025\n\rAccountNumber\030\002"
  " \001(\t\"o\n\032RequestAccountUpdatesMulti\022\021\n\tRe"
  "questId\030\001 \001(\005\022\025\n\rAccountNumber\030\002 \001(\t\022\021\n\t"
  "ModelCode\030\003 \001(\t\022\024\n\014LedgerAndNlv\030\004 \001(\010\"\243\002"
  "\n\025RequestHistoricalData\022\021\n\tRequestId\030\001 \001"
  "(\005\022-\n\010Contract\030\002 \001(\0132\033.Jde.Markets.Proto"
  ".Contract\022(\n\004Date\030\003 \001(\0132\032.google.protobu"
  "f.Timestamp\022\014\n\004Days\030\004 \001(\r\0224\n\007BarSize\030\005 \001"
  "(\0162#.Jde.Markets.Proto.Requests.BarSize\022"
  "4\n\007Display\030\006 \001(\0162#.Jde.Markets.Proto.Req"
  "uests.Display\022\016\n\006UseRth\030\007 \001(\010\022\024\n\014KeepUpT"
  "oDate\030\010 \001(\010\"\207\001\n\023RequestMrkDataSmart\022\021\n\tR"
  "equestId\030\001 \001(\005\022\022\n\nContractId\030\002 \001(\005\0227\n\010Ti"
  "ckList\030\003 \003(\0162%.Jde.Markets.Proto.Request"
  "s.ETickList\022\020\n\010Snapshot\030\004 \001(\010\"[\n\026Request"
  "ContractDetails\022\021\n\tRequestId\030\001 \001(\005\022.\n\tCo"
  "ntracts\030\002 \003(\0132\033.Jde.Markets.Proto.Contra"
  "ct\"q\n\016RequestOptions\022\021\n\tRequestId\030\001 \001(\005\022"
  "\022\n\nContractId\030\002 \001(\005\022\016\n\006IsCall\030\003 \001(\005\022(\n\004D"
  "ate\030\004 \001(\0132\032.google.protobuf.Timestamp\"H\n"
  "\016FlexExecutions\022\021\n\tRequestId\030\001 \001(\005\022\025\n\rAc"
  "countNumber\030\002 \001(\t\022\014\n\004Date\030\003 \001(\r\"\353\004\n\014Requ"
  "estUnion\022D\n\016GenericRequest\030\001 \001(\0132*.Jde.M"
  "arkets.Proto.Requests.GenericRequestH\000\022K"
  "\n\016AccountUpdates\030\002 \001(\01321.Jde.Markets.Pro"
  "to.Requests.RequestAccountUpdatesH\000\022U\n\023A"
  "ccountUpdatesMulti\030\003 \001(\01326.Jde.Markets.P"
  "roto.Requests.RequestAccountUpdatesMulti"
  "H\000\022G\n\014MrkDataSmart\030\004 \001(\0132/.Jde.Markets.P"
  "roto.Requests.RequestMrkDataSmartH\000\022M\n\017C"
  "ontractDetails\030\005 \001(\01322.Jde.Markets.Proto"
  ".Requests.RequestContractDetailsH\000\022=\n\007Op"
  "tions\030\006 \001(\0132*.Jde.Markets.Proto.Requests"
  ".RequestOptionsH\000\022K\n\016HistoricalData\030\007 \001("
  "\01321.Jde.Markets.Proto.Requests.RequestHi"
  "storicalDataH\000\022D\n\016FlexExecutions\030\010 \001(\0132*"
  ".Jde.Markets.Proto.Requests.FlexExecutio"
  "nsH\000B\007\n\005Value\"Q\n\023RequestTransmission\022:\n\010"
  "Messages\030\n \003(\0132(.Jde.Markets.Proto.Reque"
  "sts.RequestUnion*\322\t\n\tETickList\022\020\n\014TickLi"
  "stNone\020\000\022\020\n\014OptionVolume\020d\022\026\n\022OptionOpen"
  "Interest\020e\022\024\n\020AverageOptVolume\020i\022\014\n\010Impv"
  "olat\020j\022\014\n\010Climpvlt\020k\022\024\n\020Bondanalyticdata"
  "\020}\022\016\n\tMiscStats\020\245\001\022\014\n\007CScreen\020\246\001\022\027\n\022Cred"
  "itmanMarkPrice\020\335\001\022\014\n\007Auction\020\341\001\022\014\n\007PlPri"
  "ce\020\350\001\022\r\n\010RTVolume\020\351\001\022\016\n\tInventory\020\354\001\022\021\n\014"
  "Fundamentals\020\202\002\022\014\n\007Ivclose\020\243\002\022\r\n\010WideNew"
  "s\020\244\002\022\017\n\nTradeCount\020\245\002\022\016\n\tTradeRate\020\246\002\022\017\n"
  "\nVolumeRate\020\247\002\022\021\n\014LastRTHTrade\020\276\002\022\031\n\024Par"
  "ticipationMonitor\020\362\002\022\020\n\013RTTrdVolume\020\367\002\022\017"
  "\n\nCttTickTag\020\371\002\022\013\n\006IBRate\020\375\002\022\023\n\016RfqTickR"
  "espTag\020\200\003\022\010\n\003DMM\020\203\003\022\027\n\022IssuerFundamental"
  "s\020\204\003\022\037\n\032IBWarrantImpVolCompeteTick\020\207\003\022\026\n"
  "\021IndexCapabilities\020\225\003\022\023\n\016FuturesMargins\020"
  "\227\003\022\016\n\trthistvol\020\233\003\022\023\n\016MonitorTickTag\020\267\003\022"
  "\014\n\007RTCLOSE\020\313\003\022\031\n\024BondFactorMultiplier\020\314\003"
  "\022\025\n\020FeeandRebateRate\020\363\003\022\014\n\007midptiv\020\372\003\022\032\n"
  "\025hvolrt10perUnderlying\020\377\003\022\032\n\025hvolrt30per"
  "Underlying\020\200\004\022\032\n\025hvolrt50perUnderlying\020\201"
  "\004\022\032\n\025hvolrt75perUnderlying\020\202\004\022\033\n\026hvolrt1"
  "00perUnderlying\020\203\004\022\033\n\026hvolrt150perUnderl"
  "ying\020\204\004\022\033\n\026hvolrt200perUnderlying\020\205\004\022\016\n\t"
  "fzmidptiv\020\211\004\022\t\n\004vsiv\020\241\004\022\032\n\025EtfNavBidAskn"
  "avbidask\020\300\004\022\026\n\021EtfNavLastnavlast\020\301\004\022\030\n\023E"
  "tfNavClosenavclose\020\302\004\022\026\n\021AverageOpeningV"
  "ol\020\310\004\022\026\n\021AverageClosingVol\020\311\004\022\023\n\016PlPrice"
  "Delayed\020\313\004\022\030\n\023FuturesOpenInterest\020\314\004\022\t\n\004"
  "EMAN\020\340\004\022\027\n\022EtfNavMischightLow\020\346\004\022\033\n\026Cred"
  "itmanSlowMarkPrice\020\353\004\022\036\n\031EtfFrozenNavLas"
  "tfznavlast\020\357\004\022\027\n\022MonetaryClosePrice\020\205\005\022\r"
  "\n\010Avgv1Min\020\222\005*\225\001\n\007Display\022\n\n\006Trades\020\000\022\014\n"
  "\010Midpoint\020\001\022\007\n\003Bid\020\003\022\007\n\003Ask\020\004\022\n\n\006BidAsk\020"
  "\005\022\030\n\024HistoricalVolatility\020\006\022\033\n\027OptionImp"
  "liedVolatility\020\007\022\013\n\007FeeRate\020\010\022\016\n\nRebateR"
  "ate\020\t*\325\001\n\007BarSize\022\010\n\004None\020\000\022\n\n\006Second\020\001\022"
  "\013\n\007Second5\020\002\022\014\n\010Second15\020\003\022\014\n\010Second30\020\004"
  "\022\n\n\006Minute\020\005\022\013\n\007Minute2\020\006\022\013\n\007Minute3\020\020\022\013"
  "\n\007Minute5\020\007\022\014\n\010Minute15\020\010\022\014\n\010Minute30\020\t\022"
  "\010\n\004Hour\020\n\022\007\n\003Day\020\013\022\010\n\004Week\020\014\022\t\n\005Month\020\r\022"
  "\n\n\006Month3\020\016\022\010\n\004Year\020\017*\221\016\n\tERequests\022\010\n\004P"
  "ing\020\000\022\016\n\nMarketData\020\001\022\023\n\017CANCEL_MKT_DATA"
  "\020\002\022\016\n\nPlaceOrder\020\003\022\017\n\013CancelOrder\020\004\022\023\n\017R"
  "EQ_OPEN_ORDERS\020\005\022\021\n\rREQ_ACCT_DATA\020\006\022\022\n\016R"
  "EQ_EXECUTIONS\020\007\022\016\n\nRequestIds\020\010\022\025\n\021REQ_C"
  "ONTRACT_DATA\020\t\022\021\n\rREQ_MKT_DEPTH\020\n\022\024\n\020CAN"
  "CEL_MKT_DEPTH\020\013\022\026\n\022REQ_NEWS_BULLETINS\020\014\022"
  "\031\n\025CANCEL_NEWS_BULLETINS\020\r\022\027\n\023SET_SERVER"
  "_LOGLEVEL\020\016\022\030\n\024REQ_AUTO_OPEN_ORDERS\020\017\022\027\n"
  "\023REQ_ALL_OPEN_ORDERS\020\020\022\023\n\017ManagedAccount"
  "s\020\021\022\n\n\006REQ_FA\020\022\022\016\n\nREPLACE_FA\020\023\022\027\n\023REQ_H"
  "ISTORICAL_DATA\020\024\022\024\n\020EXERCISE_OPTIONS\020\025\022\034"
  "\n\030REQ_SCANNER_SUBSCRIPTION\020\026\022\037\n\033CANCEL_S"
  "CANNER_SUBSCRIPTION\020\027\022\032\n\026REQ_SCANNER_PAR"
  "AMETERS\020\030\022\032\n\026CANCEL_HISTORICAL_DATA\020\031\022\017\n"
  "\013CurrentTime\0201\022\027\n\023RequestRealTimeBars\0202\022"
  "\031\n\025CANCEL_REAL_TIME_BARS\0203\022\030\n\024REQ_FUNDAM"
  "ENTAL_DATA\0204\022\033\n\027CANCEL_FUNDAMENTAL_DATA\020"
  "5\022\032\n\026REQ_CALC_IMPLIED_VOLAT\0206\022\031\n\025REQ_CAL"
  "C_OPTION_PRICE\0207\022\035\n\031CANCEL_CALC_IMPLIED_"
  "VOLAT\0208\022\034\n\030CANCEL_CALC_OPTION_PRICE\0209\022\025\n"
  "\021REQ_GLOBAL_CANCEL\020:\022\030\n\024REQ_MARKET_DATA_"
  "TYPE\020;\022\r\n\tPositions\020=\022\027\n\023REQ_ACCOUNT_SUM"
  "MARY\020>\022\032\n\026CANCEL_ACCOUNT_SUMMARY\020\?\022\024\n\020CA"
  "NCEL_POSITIONS\020@\022\022\n\016VERIFY_REQUEST\020A\022\022\n\016"
  "VERIFY_MESSAGE\020B\022\030\n\024QUERY_DISPLAY_GROUPS"
  "\020C\022\035\n\031SUBSCRIBE_TO_GROUP_EVENTS\020D\022\030\n\024UPD"
  "ATE_DISPLAY_GROUP\020E\022!\n\035UNSUBSCRIBE_FROM_"
  "GROUP_EVENTS\020F\022\014\n\010StartApi\020G\022\033\n\027VERIFY_A"
  "ND_AUTH_REQUEST\020H\022\033\n\027VERIFY_AND_AUTH_MES"
  "SAGE\020I\022\027\n\023REQ_POSITIONS_MULTI\020J\022\032\n\026CANCE"
  "L_POSITIONS_MULTI\020K\022\037\n\033RequestAccountUpd"
  "atesMulti_\020L\022 \n\034CANCEL_ACCOUNT_UPDATES_M"
  "ULTI\020M\022\032\n\026REQ_SEC_DEF_OPT_PARAMS\020N\022\031\n\025RE"
  "Q_SOFT_DOLLAR_TIERS\020O\022\024\n\020REQ_FAMILY_CODE"
  "S\020P\022\030\n\024REQ_MATCHING_SYMBOLS\020Q\022\033\n\027REQ_MKT"
  "_DEPTH_EXCHANGES\020R\022\030\n\024REQ_SMART_COMPONEN"
  "TS\020S\022\024\n\020REQ_NEWS_ARTICLE\020T\022\026\n\022REQ_NEWS_P"
  "ROVIDERS\020U\022\027\n\023REQ_HISTORICAL_NEWS\020V\022\026\n\022R"
  "EQ_HEAD_TIMESTAMP\020W\022\026\n\022REQ_HISTOGRAM_DAT"
  "A\020X\022\031\n\025CANCEL_HISTOGRAM_DATA\020Y\022\031\n\025CANCEL"
  "_HEAD_TIMESTAMP\020Z\022\023\n\017REQ_MARKET_RULE\020[\022\013"
  "\n\007REQ_PNL\020\\\022\016\n\nCANCEL_PNL\020]\022\022\n\016REQ_PNL_S"
  "INGLE\020^\022\025\n\021CANCEL_PNL_SINGLE\020_\022\030\n\024REQ_HI"
  "STORICAL_TICKS\020`\022\031\n\025REQ_TICK_BY_TICK_DAT"
  "A\020a\022\034\n\030CANCEL_TICK_BY_TICK_DATA\020bb\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_requests_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_ib_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_requests_2eproto_sccs[10] = {
  &scc_info_FlexExecutions_requests_2eproto.base,
  &scc_info_GenericRequest_requests_2eproto.base,
  &scc_info_RequestAccountUpdates_requests_2eproto.base,
  &scc_info_RequestAccountUpdatesMulti_requests_2eproto.base,
  &scc_info_RequestContractDetails_requests_2eproto.base,
  &scc_info_RequestHistoricalData_requests_2eproto.base,
  &scc_info_RequestMrkDataSmart_requests_2eproto.base,
  &scc_info_RequestOptions_requests_2eproto.base,
  &scc_info_RequestTransmission_requests_2eproto.base,
  &scc_info_RequestUnion_requests_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_requests_2eproto_once;
static bool descriptor_table_requests_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_requests_2eproto = {
  &descriptor_table_requests_2eproto_initialized, descriptor_table_protodef_requests_2eproto, "requests.proto", 5201,
  &descriptor_table_requests_2eproto_once, descriptor_table_requests_2eproto_sccs, descriptor_table_requests_2eproto_deps, 10, 2,
  schemas, file_default_instances, TableStruct_requests_2eproto::offsets,
  file_level_metadata_requests_2eproto, 10, file_level_enum_descriptors_requests_2eproto, file_level_service_descriptors_requests_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_requests_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_requests_2eproto), true);
namespace Jde {
namespace Markets {
namespace Proto {
namespace Requests {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETickList_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_requests_2eproto);
  return file_level_enum_descriptors_requests_2eproto[0];
}
bool ETickList_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 105:
    case 106:
    case 107:
    case 125:
    case 165:
    case 166:
    case 221:
    case 225:
    case 232:
    case 233:
    case 236:
    case 258:
    case 291:
    case 292:
    case 293:
    case 294:
    case 295:
    case 318:
    case 370:
    case 375:
    case 377:
    case 381:
    case 384:
    case 387:
    case 388:
    case 391:
    case 405:
    case 407:
    case 411:
    case 439:
    case 459:
    case 460:
    case 499:
    case 506:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 521:
    case 545:
    case 576:
    case 577:
    case 578:
    case 584:
    case 585:
    case 587:
    case 588:
    case 608:
    case 614:
    case 619:
    case 623:
    case 645:
    case 658:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Display_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_requests_2eproto);
  return file_level_enum_descriptors_requests_2eproto[1];
}
bool Display_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BarSize_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_requests_2eproto);
  return file_level_enum_descriptors_requests_2eproto[2];
}
bool BarSize_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERequests_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_requests_2eproto);
  return file_level_enum_descriptors_requests_2eproto[3];
}
bool ERequests_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GenericRequest::InitAsDefaultInstance() {
}
class GenericRequest::_Internal {
 public:
};

GenericRequest::GenericRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.GenericRequest)
}
GenericRequest::GenericRequest(const GenericRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(requestid_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.GenericRequest)
}

void GenericRequest::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(requestid_));
}

GenericRequest::~GenericRequest() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.GenericRequest)
  SharedDtor();
}

void GenericRequest::SharedDtor() {
}

void GenericRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenericRequest& GenericRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenericRequest_requests_2eproto.base);
  return *internal_default_instance();
}


void GenericRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.GenericRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(requestid_));
  _internal_metadata_.Clear();
}

const char* GenericRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Markets.Proto.Requests.ERequests Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::Jde::Markets::Proto::Requests::ERequests>(val));
        } else goto handle_unusual;
        continue;
      // int32 RequestId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenericRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.GenericRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Requests.ERequests Type = 1;
  if (this->type() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // int32 RequestId = 2;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_requestid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.GenericRequest)
  return target;
}

size_t GenericRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.GenericRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Requests.ERequests Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // int32 RequestId = 2;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.GenericRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenericRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.GenericRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.GenericRequest)
    MergeFrom(*source);
  }
}

void GenericRequest::MergeFrom(const GenericRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.GenericRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
}

void GenericRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.GenericRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericRequest::CopyFrom(const GenericRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.GenericRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericRequest::IsInitialized() const {
  return true;
}

void GenericRequest::InternalSwap(GenericRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(requestid_, other->requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenericRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestAccountUpdates::InitAsDefaultInstance() {
}
class RequestAccountUpdates::_Internal {
 public:
};

RequestAccountUpdates::RequestAccountUpdates()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.RequestAccountUpdates)
}
RequestAccountUpdates::RequestAccountUpdates(const RequestAccountUpdates& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountnumber().empty()) {
    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  subscribe_ = from.subscribe_;
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.RequestAccountUpdates)
}

void RequestAccountUpdates::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestAccountUpdates_requests_2eproto.base);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscribe_ = false;
}

RequestAccountUpdates::~RequestAccountUpdates() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  SharedDtor();
}

void RequestAccountUpdates::SharedDtor() {
  accountnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestAccountUpdates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestAccountUpdates& RequestAccountUpdates::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestAccountUpdates_requests_2eproto.base);
  return *internal_default_instance();
}


void RequestAccountUpdates::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountnumber_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscribe_ = false;
  _internal_metadata_.Clear();
}

const char* RequestAccountUpdates::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool Subscribe = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscribe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string AccountNumber = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_accountnumber(), ptr, ctx, "Jde.Markets.Proto.Requests.RequestAccountUpdates.AccountNumber");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestAccountUpdates::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Subscribe = 1;
  if (this->subscribe() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_subscribe(), target);
  }

  // string AccountNumber = 2;
  if (this->accountnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountnumber().data(), static_cast<int>(this->_internal_accountnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Requests.RequestAccountUpdates.AccountNumber");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountnumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  return target;
}

size_t RequestAccountUpdates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AccountNumber = 2;
  if (this->accountnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountnumber());
  }

  // bool Subscribe = 1;
  if (this->subscribe() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestAccountUpdates::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestAccountUpdates* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestAccountUpdates>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.RequestAccountUpdates)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.RequestAccountUpdates)
    MergeFrom(*source);
  }
}

void RequestAccountUpdates::MergeFrom(const RequestAccountUpdates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountnumber().size() > 0) {

    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  if (from.subscribe() != 0) {
    _internal_set_subscribe(from._internal_subscribe());
  }
}

void RequestAccountUpdates::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestAccountUpdates::CopyFrom(const RequestAccountUpdates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.RequestAccountUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestAccountUpdates::IsInitialized() const {
  return true;
}

void RequestAccountUpdates::InternalSwap(RequestAccountUpdates* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accountnumber_.Swap(&other->accountnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(subscribe_, other->subscribe_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestAccountUpdates::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestAccountUpdatesMulti::InitAsDefaultInstance() {
}
class RequestAccountUpdatesMulti::_Internal {
 public:
};

RequestAccountUpdatesMulti::RequestAccountUpdatesMulti()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
}
RequestAccountUpdatesMulti::RequestAccountUpdatesMulti(const RequestAccountUpdatesMulti& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountnumber().empty()) {
    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  modelcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modelcode().empty()) {
    modelcode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.modelcode_);
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ledgerandnlv_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(ledgerandnlv_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
}

void RequestAccountUpdatesMulti::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestAccountUpdatesMulti_requests_2eproto.base);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ledgerandnlv_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(ledgerandnlv_));
}

RequestAccountUpdatesMulti::~RequestAccountUpdatesMulti() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  SharedDtor();
}

void RequestAccountUpdatesMulti::SharedDtor() {
  accountnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestAccountUpdatesMulti::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestAccountUpdatesMulti& RequestAccountUpdatesMulti::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestAccountUpdatesMulti_requests_2eproto.base);
  return *internal_default_instance();
}


void RequestAccountUpdatesMulti::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountnumber_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelcode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ledgerandnlv_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(ledgerandnlv_));
  _internal_metadata_.Clear();
}

const char* RequestAccountUpdatesMulti::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string AccountNumber = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_accountnumber(), ptr, ctx, "Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.AccountNumber");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ModelCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_modelcode(), ptr, ctx, "Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.ModelCode");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool LedgerAndNlv = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ledgerandnlv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestAccountUpdatesMulti::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // string AccountNumber = 2;
  if (this->accountnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountnumber().data(), static_cast<int>(this->_internal_accountnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.AccountNumber");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountnumber(), target);
  }

  // string ModelCode = 3;
  if (this->modelcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modelcode().data(), static_cast<int>(this->_internal_modelcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.ModelCode");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_modelcode(), target);
  }

  // bool LedgerAndNlv = 4;
  if (this->ledgerandnlv() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_ledgerandnlv(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  return target;
}

size_t RequestAccountUpdatesMulti::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AccountNumber = 2;
  if (this->accountnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountnumber());
  }

  // string ModelCode = 3;
  if (this->modelcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modelcode());
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // bool LedgerAndNlv = 4;
  if (this->ledgerandnlv() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestAccountUpdatesMulti::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestAccountUpdatesMulti* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestAccountUpdatesMulti>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
    MergeFrom(*source);
  }
}

void RequestAccountUpdatesMulti::MergeFrom(const RequestAccountUpdatesMulti& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountnumber().size() > 0) {

    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  if (from.modelcode().size() > 0) {

    modelcode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.modelcode_);
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.ledgerandnlv() != 0) {
    _internal_set_ledgerandnlv(from._internal_ledgerandnlv());
  }
}

void RequestAccountUpdatesMulti::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestAccountUpdatesMulti::CopyFrom(const RequestAccountUpdatesMulti& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestAccountUpdatesMulti::IsInitialized() const {
  return true;
}

void RequestAccountUpdatesMulti::InternalSwap(RequestAccountUpdatesMulti* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accountnumber_.Swap(&other->accountnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modelcode_.Swap(&other->modelcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requestid_, other->requestid_);
  swap(ledgerandnlv_, other->ledgerandnlv_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestAccountUpdatesMulti::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestHistoricalData::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Requests::_RequestHistoricalData_default_instance_._instance.get_mutable()->contract_ = const_cast< ::Jde::Markets::Proto::Contract*>(
      ::Jde::Markets::Proto::Contract::internal_default_instance());
  ::Jde::Markets::Proto::Requests::_RequestHistoricalData_default_instance_._instance.get_mutable()->date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class RequestHistoricalData::_Internal {
 public:
  static const ::Jde::Markets::Proto::Contract& contract(const RequestHistoricalData* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& date(const RequestHistoricalData* msg);
};

const ::Jde::Markets::Proto::Contract&
RequestHistoricalData::_Internal::contract(const RequestHistoricalData* msg) {
  return *msg->contract_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
RequestHistoricalData::_Internal::date(const RequestHistoricalData* msg) {
  return *msg->date_;
}
void RequestHistoricalData::clear_contract() {
  if (GetArenaNoVirtual() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
}
void RequestHistoricalData::clear_date() {
  if (GetArenaNoVirtual() == nullptr && date_ != nullptr) {
    delete date_;
  }
  date_ = nullptr;
}
RequestHistoricalData::RequestHistoricalData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.RequestHistoricalData)
}
RequestHistoricalData::RequestHistoricalData(const RequestHistoricalData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_contract()) {
    contract_ = new ::Jde::Markets::Proto::Contract(*from.contract_);
  } else {
    contract_ = nullptr;
  }
  if (from._internal_has_date()) {
    date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.date_);
  } else {
    date_ = nullptr;
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&keepuptodate_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(keepuptodate_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.RequestHistoricalData)
}

void RequestHistoricalData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestHistoricalData_requests_2eproto.base);
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keepuptodate_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(keepuptodate_));
}

RequestHistoricalData::~RequestHistoricalData() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.RequestHistoricalData)
  SharedDtor();
}

void RequestHistoricalData::SharedDtor() {
  if (this != internal_default_instance()) delete contract_;
  if (this != internal_default_instance()) delete date_;
}

void RequestHistoricalData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestHistoricalData& RequestHistoricalData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestHistoricalData_requests_2eproto.base);
  return *internal_default_instance();
}


void RequestHistoricalData::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.RequestHistoricalData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && date_ != nullptr) {
    delete date_;
  }
  date_ = nullptr;
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&keepuptodate_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(keepuptodate_));
  _internal_metadata_.Clear();
}

const char* RequestHistoricalData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Contract Contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp Date = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Days = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          days_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.BarSize BarSize = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_barsize(static_cast<::Jde::Markets::Proto::Requests::BarSize>(val));
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.Display Display = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_display(static_cast<::Jde::Markets::Proto::Requests::Display>(val));
        } else goto handle_unusual;
        continue;
      // bool UseRth = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          userth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool KeepUpToDate = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          keepuptodate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestHistoricalData::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.RequestHistoricalData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // .Jde.Markets.Proto.Contract Contract = 2;
  if (this->has_contract()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::contract(this), target, stream);
  }

  // .google.protobuf.Timestamp Date = 3;
  if (this->has_date()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::date(this), target, stream);
  }

  // uint32 Days = 4;
  if (this->days() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_days(), target);
  }

  // .Jde.Markets.Proto.Requests.BarSize BarSize = 5;
  if (this->barsize() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_barsize(), target);
  }

  // .Jde.Markets.Proto.Requests.Display Display = 6;
  if (this->display() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_display(), target);
  }

  // bool UseRth = 7;
  if (this->userth() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_userth(), target);
  }

  // bool KeepUpToDate = 8;
  if (this->keepuptodate() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_keepuptodate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.RequestHistoricalData)
  return target;
}

size_t RequestHistoricalData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.RequestHistoricalData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Contract Contract = 2;
  if (this->has_contract()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // .google.protobuf.Timestamp Date = 3;
  if (this->has_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *date_);
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // uint32 Days = 4;
  if (this->days() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_days());
  }

  // .Jde.Markets.Proto.Requests.BarSize BarSize = 5;
  if (this->barsize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_barsize());
  }

  // .Jde.Markets.Proto.Requests.Display Display = 6;
  if (this->display() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_display());
  }

  // bool UseRth = 7;
  if (this->userth() != 0) {
    total_size += 1 + 1;
  }

  // bool KeepUpToDate = 8;
  if (this->keepuptodate() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestHistoricalData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.RequestHistoricalData)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestHistoricalData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestHistoricalData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.RequestHistoricalData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.RequestHistoricalData)
    MergeFrom(*source);
  }
}

void RequestHistoricalData::MergeFrom(const RequestHistoricalData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.RequestHistoricalData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_contract()) {
    _internal_mutable_contract()->::Jde::Markets::Proto::Contract::MergeFrom(from._internal_contract());
  }
  if (from.has_date()) {
    _internal_mutable_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_date());
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.days() != 0) {
    _internal_set_days(from._internal_days());
  }
  if (from.barsize() != 0) {
    _internal_set_barsize(from._internal_barsize());
  }
  if (from.display() != 0) {
    _internal_set_display(from._internal_display());
  }
  if (from.userth() != 0) {
    _internal_set_userth(from._internal_userth());
  }
  if (from.keepuptodate() != 0) {
    _internal_set_keepuptodate(from._internal_keepuptodate());
  }
}

void RequestHistoricalData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.RequestHistoricalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestHistoricalData::CopyFrom(const RequestHistoricalData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.RequestHistoricalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestHistoricalData::IsInitialized() const {
  return true;
}

void RequestHistoricalData::InternalSwap(RequestHistoricalData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(contract_, other->contract_);
  swap(date_, other->date_);
  swap(requestid_, other->requestid_);
  swap(days_, other->days_);
  swap(barsize_, other->barsize_);
  swap(display_, other->display_);
  swap(userth_, other->userth_);
  swap(keepuptodate_, other->keepuptodate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestHistoricalData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestMrkDataSmart::InitAsDefaultInstance() {
}
class RequestMrkDataSmart::_Internal {
 public:
};

RequestMrkDataSmart::RequestMrkDataSmart()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
}
RequestMrkDataSmart::RequestMrkDataSmart(const RequestMrkDataSmart& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      ticklist_(from.ticklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&snapshot_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(snapshot_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
}

void RequestMrkDataSmart::SharedCtor() {
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&snapshot_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(snapshot_));
}

RequestMrkDataSmart::~RequestMrkDataSmart() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  SharedDtor();
}

void RequestMrkDataSmart::SharedDtor() {
}

void RequestMrkDataSmart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestMrkDataSmart& RequestMrkDataSmart::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestMrkDataSmart_requests_2eproto.base);
  return *internal_default_instance();
}


void RequestMrkDataSmart::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticklist_.Clear();
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&snapshot_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(snapshot_));
  _internal_metadata_.Clear();
}

const char* RequestMrkDataSmart::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ContractId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          contractid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.Requests.ETickList TickList = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_ticklist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_add_ticklist(static_cast<::Jde::Markets::Proto::Requests::ETickList>(val));
        } else goto handle_unusual;
        continue;
      // bool Snapshot = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          snapshot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestMrkDataSmart::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // int32 ContractId = 2;
  if (this->contractid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_contractid(), target);
  }

  // repeated .Jde.Markets.Proto.Requests.ETickList TickList = 3;
  {
    int byte_size = _ticklist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, ticklist_, byte_size, target);
    }
  }

  // bool Snapshot = 4;
  if (this->snapshot() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_snapshot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  return target;
}

size_t RequestMrkDataSmart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Requests.ETickList TickList = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_ticklist_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_ticklist(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _ticklist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // int32 ContractId = 2;
  if (this->contractid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_contractid());
  }

  // bool Snapshot = 4;
  if (this->snapshot() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestMrkDataSmart::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestMrkDataSmart* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestMrkDataSmart>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
    MergeFrom(*source);
  }
}

void RequestMrkDataSmart::MergeFrom(const RequestMrkDataSmart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ticklist_.MergeFrom(from.ticklist_);
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.contractid() != 0) {
    _internal_set_contractid(from._internal_contractid());
  }
  if (from.snapshot() != 0) {
    _internal_set_snapshot(from._internal_snapshot());
  }
}

void RequestMrkDataSmart::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMrkDataSmart::CopyFrom(const RequestMrkDataSmart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMrkDataSmart::IsInitialized() const {
  return true;
}

void RequestMrkDataSmart::InternalSwap(RequestMrkDataSmart* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ticklist_.InternalSwap(&other->ticklist_);
  swap(requestid_, other->requestid_);
  swap(contractid_, other->contractid_);
  swap(snapshot_, other->snapshot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestMrkDataSmart::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestContractDetails::InitAsDefaultInstance() {
}
class RequestContractDetails::_Internal {
 public:
};

void RequestContractDetails::clear_contracts() {
  contracts_.Clear();
}
RequestContractDetails::RequestContractDetails()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.RequestContractDetails)
}
RequestContractDetails::RequestContractDetails(const RequestContractDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      contracts_(from.contracts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.RequestContractDetails)
}

void RequestContractDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestContractDetails_requests_2eproto.base);
  requestid_ = 0;
}

RequestContractDetails::~RequestContractDetails() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.RequestContractDetails)
  SharedDtor();
}

void RequestContractDetails::SharedDtor() {
}

void RequestContractDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestContractDetails& RequestContractDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestContractDetails_requests_2eproto.base);
  return *internal_default_instance();
}


void RequestContractDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.RequestContractDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contracts_.Clear();
  requestid_ = 0;
  _internal_metadata_.Clear();
}

const char* RequestContractDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.Contract Contracts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contracts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestContractDetails::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.RequestContractDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // repeated .Jde.Markets.Proto.Contract Contracts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_contracts_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_contracts(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.RequestContractDetails)
  return target;
}

size_t RequestContractDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.RequestContractDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Contract Contracts = 2;
  total_size += 1UL * this->_internal_contracts_size();
  for (const auto& msg : this->contracts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestContractDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.RequestContractDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestContractDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestContractDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.RequestContractDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.RequestContractDetails)
    MergeFrom(*source);
  }
}

void RequestContractDetails::MergeFrom(const RequestContractDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.RequestContractDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contracts_.MergeFrom(from.contracts_);
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
}

void RequestContractDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.RequestContractDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestContractDetails::CopyFrom(const RequestContractDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.RequestContractDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestContractDetails::IsInitialized() const {
  return true;
}

void RequestContractDetails::InternalSwap(RequestContractDetails* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  contracts_.InternalSwap(&other->contracts_);
  swap(requestid_, other->requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestContractDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestOptions::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Requests::_RequestOptions_default_instance_._instance.get_mutable()->date_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class RequestOptions::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& date(const RequestOptions* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
RequestOptions::_Internal::date(const RequestOptions* msg) {
  return *msg->date_;
}
void RequestOptions::clear_date() {
  if (GetArenaNoVirtual() == nullptr && date_ != nullptr) {
    delete date_;
  }
  date_ = nullptr;
}
RequestOptions::RequestOptions()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.RequestOptions)
}
RequestOptions::RequestOptions(const RequestOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_date()) {
    date_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.date_);
  } else {
    date_ = nullptr;
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&iscall_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(iscall_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.RequestOptions)
}

void RequestOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestOptions_requests_2eproto.base);
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iscall_) -
      reinterpret_cast<char*>(&date_)) + sizeof(iscall_));
}

RequestOptions::~RequestOptions() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.RequestOptions)
  SharedDtor();
}

void RequestOptions::SharedDtor() {
  if (this != internal_default_instance()) delete date_;
}

void RequestOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestOptions& RequestOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestOptions_requests_2eproto.base);
  return *internal_default_instance();
}


void RequestOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.RequestOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && date_ != nullptr) {
    delete date_;
  }
  date_ = nullptr;
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iscall_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(iscall_));
  _internal_metadata_.Clear();
}

const char* RequestOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ContractId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          contractid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 IsCall = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          iscall_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp Date = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestOptions::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.RequestOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // int32 ContractId = 2;
  if (this->contractid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_contractid(), target);
  }

  // int32 IsCall = 3;
  if (this->iscall() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_iscall(), target);
  }

  // .google.protobuf.Timestamp Date = 4;
  if (this->has_date()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::date(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.RequestOptions)
  return target;
}

size_t RequestOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.RequestOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp Date = 4;
  if (this->has_date()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *date_);
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // int32 ContractId = 2;
  if (this->contractid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_contractid());
  }

  // int32 IsCall = 3;
  if (this->iscall() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iscall());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.RequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.RequestOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.RequestOptions)
    MergeFrom(*source);
  }
}

void RequestOptions::MergeFrom(const RequestOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.RequestOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_date()) {
    _internal_mutable_date()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_date());
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.contractid() != 0) {
    _internal_set_contractid(from._internal_contractid());
  }
  if (from.iscall() != 0) {
    _internal_set_iscall(from._internal_iscall());
  }
}

void RequestOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.RequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestOptions::CopyFrom(const RequestOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.RequestOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestOptions::IsInitialized() const {
  return true;
}

void RequestOptions::InternalSwap(RequestOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(date_, other->date_);
  swap(requestid_, other->requestid_);
  swap(contractid_, other->contractid_);
  swap(iscall_, other->iscall_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FlexExecutions::InitAsDefaultInstance() {
}
class FlexExecutions::_Internal {
 public:
};

FlexExecutions::FlexExecutions()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.FlexExecutions)
}
FlexExecutions::FlexExecutions(const FlexExecutions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountnumber().empty()) {
    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&date_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(date_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.FlexExecutions)
}

void FlexExecutions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FlexExecutions_requests_2eproto.base);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(date_));
}

FlexExecutions::~FlexExecutions() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.FlexExecutions)
  SharedDtor();
}

void FlexExecutions::SharedDtor() {
  accountnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FlexExecutions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FlexExecutions& FlexExecutions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FlexExecutions_requests_2eproto.base);
  return *internal_default_instance();
}


void FlexExecutions::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.FlexExecutions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountnumber_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(date_));
  _internal_metadata_.Clear();
}

const char* FlexExecutions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string AccountNumber = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_accountnumber(), ptr, ctx, "Jde.Markets.Proto.Requests.FlexExecutions.AccountNumber");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Date = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FlexExecutions::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.FlexExecutions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // string AccountNumber = 2;
  if (this->accountnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountnumber().data(), static_cast<int>(this->_internal_accountnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Requests.FlexExecutions.AccountNumber");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountnumber(), target);
  }

  // uint32 Date = 3;
  if (this->date() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_date(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.FlexExecutions)
  return target;
}

size_t FlexExecutions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.FlexExecutions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AccountNumber = 2;
  if (this->accountnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountnumber());
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // uint32 Date = 3;
  if (this->date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_date());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FlexExecutions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.FlexExecutions)
  GOOGLE_DCHECK_NE(&from, this);
  const FlexExecutions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FlexExecutions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.FlexExecutions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.FlexExecutions)
    MergeFrom(*source);
  }
}

void FlexExecutions::MergeFrom(const FlexExecutions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.FlexExecutions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountnumber().size() > 0) {

    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.date() != 0) {
    _internal_set_date(from._internal_date());
  }
}

void FlexExecutions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.FlexExecutions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlexExecutions::CopyFrom(const FlexExecutions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.FlexExecutions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlexExecutions::IsInitialized() const {
  return true;
}

void FlexExecutions::InternalSwap(FlexExecutions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accountnumber_.Swap(&other->accountnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requestid_, other->requestid_);
  swap(date_, other->date_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FlexExecutions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestUnion::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_.genericrequest_ = const_cast< ::Jde::Markets::Proto::Requests::GenericRequest*>(
      ::Jde::Markets::Proto::Requests::GenericRequest::internal_default_instance());
  ::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_.accountupdates_ = const_cast< ::Jde::Markets::Proto::Requests::RequestAccountUpdates*>(
      ::Jde::Markets::Proto::Requests::RequestAccountUpdates::internal_default_instance());
  ::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_.accountupdatesmulti_ = const_cast< ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti*>(
      ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti::internal_default_instance());
  ::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_.mrkdatasmart_ = const_cast< ::Jde::Markets::Proto::Requests::RequestMrkDataSmart*>(
      ::Jde::Markets::Proto::Requests::RequestMrkDataSmart::internal_default_instance());
  ::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_.contractdetails_ = const_cast< ::Jde::Markets::Proto::Requests::RequestContractDetails*>(
      ::Jde::Markets::Proto::Requests::RequestContractDetails::internal_default_instance());
  ::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_.options_ = const_cast< ::Jde::Markets::Proto::Requests::RequestOptions*>(
      ::Jde::Markets::Proto::Requests::RequestOptions::internal_default_instance());
  ::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_.historicaldata_ = const_cast< ::Jde::Markets::Proto::Requests::RequestHistoricalData*>(
      ::Jde::Markets::Proto::Requests::RequestHistoricalData::internal_default_instance());
  ::Jde::Markets::Proto::Requests::_RequestUnion_default_instance_.flexexecutions_ = const_cast< ::Jde::Markets::Proto::Requests::FlexExecutions*>(
      ::Jde::Markets::Proto::Requests::FlexExecutions::internal_default_instance());
}
class RequestUnion::_Internal {
 public:
  static const ::Jde::Markets::Proto::Requests::GenericRequest& genericrequest(const RequestUnion* msg);
  static const ::Jde::Markets::Proto::Requests::RequestAccountUpdates& accountupdates(const RequestUnion* msg);
  static const ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti& accountupdatesmulti(const RequestUnion* msg);
  static const ::Jde::Markets::Proto::Requests::RequestMrkDataSmart& mrkdatasmart(const RequestUnion* msg);
  static const ::Jde::Markets::Proto::Requests::RequestContractDetails& contractdetails(const RequestUnion* msg);
  static const ::Jde::Markets::Proto::Requests::RequestOptions& options(const RequestUnion* msg);
  static const ::Jde::Markets::Proto::Requests::RequestHistoricalData& historicaldata(const RequestUnion* msg);
  static const ::Jde::Markets::Proto::Requests::FlexExecutions& flexexecutions(const RequestUnion* msg);
};

const ::Jde::Markets::Proto::Requests::GenericRequest&
RequestUnion::_Internal::genericrequest(const RequestUnion* msg) {
  return *msg->Value_.genericrequest_;
}
const ::Jde::Markets::Proto::Requests::RequestAccountUpdates&
RequestUnion::_Internal::accountupdates(const RequestUnion* msg) {
  return *msg->Value_.accountupdates_;
}
const ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti&
RequestUnion::_Internal::accountupdatesmulti(const RequestUnion* msg) {
  return *msg->Value_.accountupdatesmulti_;
}
const ::Jde::Markets::Proto::Requests::RequestMrkDataSmart&
RequestUnion::_Internal::mrkdatasmart(const RequestUnion* msg) {
  return *msg->Value_.mrkdatasmart_;
}
const ::Jde::Markets::Proto::Requests::RequestContractDetails&
RequestUnion::_Internal::contractdetails(const RequestUnion* msg) {
  return *msg->Value_.contractdetails_;
}
const ::Jde::Markets::Proto::Requests::RequestOptions&
RequestUnion::_Internal::options(const RequestUnion* msg) {
  return *msg->Value_.options_;
}
const ::Jde::Markets::Proto::Requests::RequestHistoricalData&
RequestUnion::_Internal::historicaldata(const RequestUnion* msg) {
  return *msg->Value_.historicaldata_;
}
const ::Jde::Markets::Proto::Requests::FlexExecutions&
RequestUnion::_Internal::flexexecutions(const RequestUnion* msg) {
  return *msg->Value_.flexexecutions_;
}
void RequestUnion::set_allocated_genericrequest(::Jde::Markets::Proto::Requests::GenericRequest* genericrequest) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (genericrequest) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      genericrequest = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, genericrequest, submessage_arena);
    }
    set_has_genericrequest();
    Value_.genericrequest_ = genericrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.GenericRequest)
}
void RequestUnion::set_allocated_accountupdates(::Jde::Markets::Proto::Requests::RequestAccountUpdates* accountupdates) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (accountupdates) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      accountupdates = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accountupdates, submessage_arena);
    }
    set_has_accountupdates();
    Value_.accountupdates_ = accountupdates;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.AccountUpdates)
}
void RequestUnion::set_allocated_accountupdatesmulti(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* accountupdatesmulti) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (accountupdatesmulti) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      accountupdatesmulti = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accountupdatesmulti, submessage_arena);
    }
    set_has_accountupdatesmulti();
    Value_.accountupdatesmulti_ = accountupdatesmulti;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.AccountUpdatesMulti)
}
void RequestUnion::set_allocated_mrkdatasmart(::Jde::Markets::Proto::Requests::RequestMrkDataSmart* mrkdatasmart) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (mrkdatasmart) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mrkdatasmart = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mrkdatasmart, submessage_arena);
    }
    set_has_mrkdatasmart();
    Value_.mrkdatasmart_ = mrkdatasmart;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.MrkDataSmart)
}
void RequestUnion::set_allocated_contractdetails(::Jde::Markets::Proto::Requests::RequestContractDetails* contractdetails) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (contractdetails) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      contractdetails = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contractdetails, submessage_arena);
    }
    set_has_contractdetails();
    Value_.contractdetails_ = contractdetails;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.ContractDetails)
}
void RequestUnion::set_allocated_options(::Jde::Markets::Proto::Requests::RequestOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    set_has_options();
    Value_.options_ = options;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.Options)
}
void RequestUnion::set_allocated_historicaldata(::Jde::Markets::Proto::Requests::RequestHistoricalData* historicaldata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (historicaldata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      historicaldata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, historicaldata, submessage_arena);
    }
    set_has_historicaldata();
    Value_.historicaldata_ = historicaldata;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.HistoricalData)
}
void RequestUnion::set_allocated_flexexecutions(::Jde::Markets::Proto::Requests::FlexExecutions* flexexecutions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (flexexecutions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      flexexecutions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, flexexecutions, submessage_arena);
    }
    set_has_flexexecutions();
    Value_.flexexecutions_ = flexexecutions;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.FlexExecutions)
}
RequestUnion::RequestUnion()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.RequestUnion)
}
RequestUnion::RequestUnion(const RequestUnion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_Value();
  switch (from.Value_case()) {
    case kGenericRequest: {
      _internal_mutable_genericrequest()->::Jde::Markets::Proto::Requests::GenericRequest::MergeFrom(from._internal_genericrequest());
      break;
    }
    case kAccountUpdates: {
      _internal_mutable_accountupdates()->::Jde::Markets::Proto::Requests::RequestAccountUpdates::MergeFrom(from._internal_accountupdates());
      break;
    }
    case kAccountUpdatesMulti: {
      _internal_mutable_accountupdatesmulti()->::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti::MergeFrom(from._internal_accountupdatesmulti());
      break;
    }
    case kMrkDataSmart: {
      _internal_mutable_mrkdatasmart()->::Jde::Markets::Proto::Requests::RequestMrkDataSmart::MergeFrom(from._internal_mrkdatasmart());
      break;
    }
    case kContractDetails: {
      _internal_mutable_contractdetails()->::Jde::Markets::Proto::Requests::RequestContractDetails::MergeFrom(from._internal_contractdetails());
      break;
    }
    case kOptions: {
      _internal_mutable_options()->::Jde::Markets::Proto::Requests::RequestOptions::MergeFrom(from._internal_options());
      break;
    }
    case kHistoricalData: {
      _internal_mutable_historicaldata()->::Jde::Markets::Proto::Requests::RequestHistoricalData::MergeFrom(from._internal_historicaldata());
      break;
    }
    case kFlexExecutions: {
      _internal_mutable_flexexecutions()->::Jde::Markets::Proto::Requests::FlexExecutions::MergeFrom(from._internal_flexexecutions());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.RequestUnion)
}

void RequestUnion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestUnion_requests_2eproto.base);
  clear_has_Value();
}

RequestUnion::~RequestUnion() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.RequestUnion)
  SharedDtor();
}

void RequestUnion::SharedDtor() {
  if (has_Value()) {
    clear_Value();
  }
}

void RequestUnion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestUnion& RequestUnion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestUnion_requests_2eproto.base);
  return *internal_default_instance();
}


void RequestUnion::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:Jde.Markets.Proto.Requests.RequestUnion)
  switch (Value_case()) {
    case kGenericRequest: {
      delete Value_.genericrequest_;
      break;
    }
    case kAccountUpdates: {
      delete Value_.accountupdates_;
      break;
    }
    case kAccountUpdatesMulti: {
      delete Value_.accountupdatesmulti_;
      break;
    }
    case kMrkDataSmart: {
      delete Value_.mrkdatasmart_;
      break;
    }
    case kContractDetails: {
      delete Value_.contractdetails_;
      break;
    }
    case kOptions: {
      delete Value_.options_;
      break;
    }
    case kHistoricalData: {
      delete Value_.historicaldata_;
      break;
    }
    case kFlexExecutions: {
      delete Value_.flexexecutions_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void RequestUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.RequestUnion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Value();
  _internal_metadata_.Clear();
}

const char* RequestUnion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Markets.Proto.Requests.GenericRequest GenericRequest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_genericrequest(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.RequestAccountUpdates AccountUpdates = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_accountupdates(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti AccountUpdatesMulti = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_accountupdatesmulti(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.RequestMrkDataSmart MrkDataSmart = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_mrkdatasmart(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.RequestContractDetails ContractDetails = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_contractdetails(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.RequestOptions Options = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.RequestHistoricalData HistoricalData = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_historicaldata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Requests.FlexExecutions FlexExecutions = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_flexexecutions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestUnion::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.RequestUnion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Requests.GenericRequest GenericRequest = 1;
  if (_internal_has_genericrequest()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::genericrequest(this), target, stream);
  }

  // .Jde.Markets.Proto.Requests.RequestAccountUpdates AccountUpdates = 2;
  if (_internal_has_accountupdates()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::accountupdates(this), target, stream);
  }

  // .Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti AccountUpdatesMulti = 3;
  if (_internal_has_accountupdatesmulti()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::accountupdatesmulti(this), target, stream);
  }

  // .Jde.Markets.Proto.Requests.RequestMrkDataSmart MrkDataSmart = 4;
  if (_internal_has_mrkdatasmart()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::mrkdatasmart(this), target, stream);
  }

  // .Jde.Markets.Proto.Requests.RequestContractDetails ContractDetails = 5;
  if (_internal_has_contractdetails()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::contractdetails(this), target, stream);
  }

  // .Jde.Markets.Proto.Requests.RequestOptions Options = 6;
  if (_internal_has_options()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::options(this), target, stream);
  }

  // .Jde.Markets.Proto.Requests.RequestHistoricalData HistoricalData = 7;
  if (_internal_has_historicaldata()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::historicaldata(this), target, stream);
  }

  // .Jde.Markets.Proto.Requests.FlexExecutions FlexExecutions = 8;
  if (_internal_has_flexexecutions()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::flexexecutions(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.RequestUnion)
  return target;
}

size_t RequestUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.RequestUnion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Value_case()) {
    // .Jde.Markets.Proto.Requests.GenericRequest GenericRequest = 1;
    case kGenericRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.genericrequest_);
      break;
    }
    // .Jde.Markets.Proto.Requests.RequestAccountUpdates AccountUpdates = 2;
    case kAccountUpdates: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.accountupdates_);
      break;
    }
    // .Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti AccountUpdatesMulti = 3;
    case kAccountUpdatesMulti: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.accountupdatesmulti_);
      break;
    }
    // .Jde.Markets.Proto.Requests.RequestMrkDataSmart MrkDataSmart = 4;
    case kMrkDataSmart: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.mrkdatasmart_);
      break;
    }
    // .Jde.Markets.Proto.Requests.RequestContractDetails ContractDetails = 5;
    case kContractDetails: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.contractdetails_);
      break;
    }
    // .Jde.Markets.Proto.Requests.RequestOptions Options = 6;
    case kOptions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.options_);
      break;
    }
    // .Jde.Markets.Proto.Requests.RequestHistoricalData HistoricalData = 7;
    case kHistoricalData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.historicaldata_);
      break;
    }
    // .Jde.Markets.Proto.Requests.FlexExecutions FlexExecutions = 8;
    case kFlexExecutions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.flexexecutions_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestUnion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.RequestUnion)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestUnion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestUnion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.RequestUnion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.RequestUnion)
    MergeFrom(*source);
  }
}

void RequestUnion::MergeFrom(const RequestUnion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.RequestUnion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Value_case()) {
    case kGenericRequest: {
      _internal_mutable_genericrequest()->::Jde::Markets::Proto::Requests::GenericRequest::MergeFrom(from._internal_genericrequest());
      break;
    }
    case kAccountUpdates: {
      _internal_mutable_accountupdates()->::Jde::Markets::Proto::Requests::RequestAccountUpdates::MergeFrom(from._internal_accountupdates());
      break;
    }
    case kAccountUpdatesMulti: {
      _internal_mutable_accountupdatesmulti()->::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti::MergeFrom(from._internal_accountupdatesmulti());
      break;
    }
    case kMrkDataSmart: {
      _internal_mutable_mrkdatasmart()->::Jde::Markets::Proto::Requests::RequestMrkDataSmart::MergeFrom(from._internal_mrkdatasmart());
      break;
    }
    case kContractDetails: {
      _internal_mutable_contractdetails()->::Jde::Markets::Proto::Requests::RequestContractDetails::MergeFrom(from._internal_contractdetails());
      break;
    }
    case kOptions: {
      _internal_mutable_options()->::Jde::Markets::Proto::Requests::RequestOptions::MergeFrom(from._internal_options());
      break;
    }
    case kHistoricalData: {
      _internal_mutable_historicaldata()->::Jde::Markets::Proto::Requests::RequestHistoricalData::MergeFrom(from._internal_historicaldata());
      break;
    }
    case kFlexExecutions: {
      _internal_mutable_flexexecutions()->::Jde::Markets::Proto::Requests::FlexExecutions::MergeFrom(from._internal_flexexecutions());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void RequestUnion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.RequestUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestUnion::CopyFrom(const RequestUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.RequestUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestUnion::IsInitialized() const {
  return true;
}

void RequestUnion::InternalSwap(RequestUnion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(Value_, other->Value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestUnion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RequestTransmission::InitAsDefaultInstance() {
}
class RequestTransmission::_Internal {
 public:
};

RequestTransmission::RequestTransmission()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Requests.RequestTransmission)
}
RequestTransmission::RequestTransmission(const RequestTransmission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Requests.RequestTransmission)
}

void RequestTransmission::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestTransmission_requests_2eproto.base);
}

RequestTransmission::~RequestTransmission() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Requests.RequestTransmission)
  SharedDtor();
}

void RequestTransmission::SharedDtor() {
}

void RequestTransmission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestTransmission& RequestTransmission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestTransmission_requests_2eproto.base);
  return *internal_default_instance();
}


void RequestTransmission::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Requests.RequestTransmission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

const char* RequestTransmission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Jde.Markets.Proto.Requests.RequestUnion Messages = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestTransmission::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Requests.RequestTransmission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Requests.RequestUnion Messages = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messages_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(10, this->_internal_messages(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Requests.RequestTransmission)
  return target;
}

size_t RequestTransmission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Requests.RequestTransmission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Requests.RequestUnion Messages = 10;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestTransmission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Requests.RequestTransmission)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestTransmission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestTransmission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Requests.RequestTransmission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Requests.RequestTransmission)
    MergeFrom(*source);
  }
}

void RequestTransmission::MergeFrom(const RequestTransmission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Requests.RequestTransmission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void RequestTransmission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Requests.RequestTransmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestTransmission::CopyFrom(const RequestTransmission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Requests.RequestTransmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestTransmission::IsInitialized() const {
  return true;
}

void RequestTransmission::InternalSwap(RequestTransmission* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestTransmission::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Requests
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::GenericRequest* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::GenericRequest >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::GenericRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::RequestAccountUpdates* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestAccountUpdates >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::RequestAccountUpdates >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::RequestHistoricalData* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestHistoricalData >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::RequestHistoricalData >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestMrkDataSmart >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::RequestMrkDataSmart >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::RequestContractDetails* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestContractDetails >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::RequestContractDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::RequestOptions* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestOptions >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::RequestOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::FlexExecutions* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::FlexExecutions >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::FlexExecutions >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::RequestUnion* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestUnion >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::RequestUnion >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Requests::RequestTransmission* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestTransmission >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Requests::RequestTransmission >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
