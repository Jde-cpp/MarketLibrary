// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: results.proto

#include "results.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ib_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Contract_ib_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountList_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountUpdate_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountUpdateMulti_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Bar_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ContractDetails_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Error_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Flex_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HistoricalData_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<17> scc_info_MessageUnion_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessageValue_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Option_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OptionDay_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OptionValues_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Order_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PortfolioUpdate_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Position_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringResult_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TagValue_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TickAttrib_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TickGeneric_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TickPrice_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TickSize_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TickString_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_results_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Trade_results_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace Jde {
namespace Markets {
namespace Proto {
namespace Results {
class MessageValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageValue> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 intvalue_;
} _MessageValue_default_instance_;
class StringResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StringResult> _instance;
} _StringResult_default_instance_;
class TagValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TagValue> _instance;
} _TagValue_default_instance_;
class ContractDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ContractDetails> _instance;
} _ContractDetails_default_instance_;
class PositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Position> _instance;
} _Position_default_instance_;
class AccountListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountList> _instance;
} _AccountList_default_instance_;
class AccountUpdateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountUpdate> _instance;
} _AccountUpdate_default_instance_;
class AccountUpdateMultiDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccountUpdateMulti> _instance;
} _AccountUpdateMulti_default_instance_;
class BarDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Bar> _instance;
} _Bar_default_instance_;
class HistoricalDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HistoricalData> _instance;
} _HistoricalData_default_instance_;
class PortfolioUpdateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PortfolioUpdate> _instance;
} _PortfolioUpdate_default_instance_;
class OrderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Order> _instance;
} _Order_default_instance_;
class TradeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Trade> _instance;
} _Trade_default_instance_;
class FlexDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Flex> _instance;
} _Flex_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Error> _instance;
} _Error_default_instance_;
class OptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Option> _instance;
} _Option_default_instance_;
class OptionDayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OptionDay> _instance;
} _OptionDay_default_instance_;
class OptionValuesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OptionValues> _instance;
} _OptionValues_default_instance_;
class MessageUnionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageUnion> _instance;
  const ::Jde::Markets::Proto::Results::Position* position_;
  const ::Jde::Markets::Proto::Contract* contract_;
  const ::Jde::Markets::Proto::Results::MessageValue* message_;
  const ::Jde::Markets::Proto::Results::AccountList* accountlist_;
  const ::Jde::Markets::Proto::Results::AccountUpdate* accountupdate_;
  const ::Jde::Markets::Proto::Results::AccountUpdateMulti* accountupdatemulti_;
  const ::Jde::Markets::Proto::Results::PortfolioUpdate* portfolioupdate_;
  const ::Jde::Markets::Proto::Results::TickGeneric* tickgeneric_;
  const ::Jde::Markets::Proto::Results::TickPrice* tickprice_;
  const ::Jde::Markets::Proto::Results::TickSize* ticksize_;
  const ::Jde::Markets::Proto::Results::TickString* tickstring_;
  const ::Jde::Markets::Proto::Results::ContractDetails* contractdetails_;
  const ::Jde::Markets::Proto::Results::Error* error_;
  const ::Jde::Markets::Proto::Results::OptionValues* options_;
  const ::Jde::Markets::Proto::Results::HistoricalData* historicaldata_;
  const ::Jde::Markets::Proto::Results::StringResult* stringresult_;
  const ::Jde::Markets::Proto::Results::Flex* flex_;
} _MessageUnion_default_instance_;
class TransmissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Transmission> _instance;
} _Transmission_default_instance_;
class TickGenericDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TickGeneric> _instance;
} _TickGeneric_default_instance_;
class TickAttribDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TickAttrib> _instance;
} _TickAttrib_default_instance_;
class TickPriceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TickPrice> _instance;
} _TickPrice_default_instance_;
class TickSizeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TickSize> _instance;
} _TickSize_default_instance_;
class TickStringDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TickString> _instance;
} _TickString_default_instance_;
}  // namespace Results
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde
static void InitDefaultsscc_info_AccountList_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_AccountList_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::AccountList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::AccountList::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountList_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountList_results_2eproto}, {}};

static void InitDefaultsscc_info_AccountUpdate_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_AccountUpdate_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::AccountUpdate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::AccountUpdate::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountUpdate_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountUpdate_results_2eproto}, {}};

static void InitDefaultsscc_info_AccountUpdateMulti_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_AccountUpdateMulti_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::AccountUpdateMulti();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::AccountUpdateMulti::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AccountUpdateMulti_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AccountUpdateMulti_results_2eproto}, {}};

static void InitDefaultsscc_info_Bar_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_Bar_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::Bar();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::Bar::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Bar_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Bar_results_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_ContractDetails_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_ContractDetails_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::ContractDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::ContractDetails::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ContractDetails_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ContractDetails_results_2eproto}, {
      &scc_info_Contract_ib_2eproto.base,
      &scc_info_TagValue_results_2eproto.base,}};

static void InitDefaultsscc_info_Error_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_Error_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::Error();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::Error::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Error_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Error_results_2eproto}, {}};

static void InitDefaultsscc_info_Flex_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_Flex_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::Flex();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::Flex::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Flex_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Flex_results_2eproto}, {
      &scc_info_Order_results_2eproto.base,
      &scc_info_Trade_results_2eproto.base,}};

static void InitDefaultsscc_info_HistoricalData_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_HistoricalData_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::HistoricalData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::HistoricalData::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HistoricalData_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HistoricalData_results_2eproto}, {
      &scc_info_Bar_results_2eproto.base,}};

static void InitDefaultsscc_info_MessageUnion_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_MessageUnion_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::MessageUnion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::MessageUnion::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<17> scc_info_MessageUnion_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 17, 0, InitDefaultsscc_info_MessageUnion_results_2eproto}, {
      &scc_info_Position_results_2eproto.base,
      &scc_info_Contract_ib_2eproto.base,
      &scc_info_MessageValue_results_2eproto.base,
      &scc_info_AccountList_results_2eproto.base,
      &scc_info_AccountUpdate_results_2eproto.base,
      &scc_info_AccountUpdateMulti_results_2eproto.base,
      &scc_info_PortfolioUpdate_results_2eproto.base,
      &scc_info_TickGeneric_results_2eproto.base,
      &scc_info_TickPrice_results_2eproto.base,
      &scc_info_TickSize_results_2eproto.base,
      &scc_info_TickString_results_2eproto.base,
      &scc_info_ContractDetails_results_2eproto.base,
      &scc_info_Error_results_2eproto.base,
      &scc_info_OptionValues_results_2eproto.base,
      &scc_info_HistoricalData_results_2eproto.base,
      &scc_info_StringResult_results_2eproto.base,
      &scc_info_Flex_results_2eproto.base,}};

static void InitDefaultsscc_info_MessageValue_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_MessageValue_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::MessageValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::MessageValue::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessageValue_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MessageValue_results_2eproto}, {}};

static void InitDefaultsscc_info_Option_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_Option_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::Option();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::Option::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Option_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Option_results_2eproto}, {}};

static void InitDefaultsscc_info_OptionDay_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_OptionDay_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::OptionDay();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::OptionDay::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OptionDay_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OptionDay_results_2eproto}, {
      &scc_info_Option_results_2eproto.base,}};

static void InitDefaultsscc_info_OptionValues_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_OptionValues_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::OptionValues();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::OptionValues::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OptionValues_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OptionValues_results_2eproto}, {
      &scc_info_OptionDay_results_2eproto.base,}};

static void InitDefaultsscc_info_Order_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_Order_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::Order();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::Order::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Order_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Order_results_2eproto}, {}};

static void InitDefaultsscc_info_PortfolioUpdate_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_PortfolioUpdate_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::PortfolioUpdate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::PortfolioUpdate::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PortfolioUpdate_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PortfolioUpdate_results_2eproto}, {
      &scc_info_Contract_ib_2eproto.base,}};

static void InitDefaultsscc_info_Position_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_Position_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::Position();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::Position::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Position_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Position_results_2eproto}, {
      &scc_info_Contract_ib_2eproto.base,}};

static void InitDefaultsscc_info_StringResult_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_StringResult_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::StringResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::StringResult::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StringResult_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StringResult_results_2eproto}, {}};

static void InitDefaultsscc_info_TagValue_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_TagValue_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::TagValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::TagValue::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TagValue_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TagValue_results_2eproto}, {}};

static void InitDefaultsscc_info_TickAttrib_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_TickAttrib_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::TickAttrib();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::TickAttrib::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TickAttrib_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TickAttrib_results_2eproto}, {}};

static void InitDefaultsscc_info_TickGeneric_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_TickGeneric_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::TickGeneric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::TickGeneric::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TickGeneric_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TickGeneric_results_2eproto}, {}};

static void InitDefaultsscc_info_TickPrice_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_TickPrice_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::TickPrice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::TickPrice::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TickPrice_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TickPrice_results_2eproto}, {
      &scc_info_TickAttrib_results_2eproto.base,}};

static void InitDefaultsscc_info_TickSize_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_TickSize_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::TickSize();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::TickSize::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TickSize_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TickSize_results_2eproto}, {}};

static void InitDefaultsscc_info_TickString_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_TickString_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::TickString();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::TickString::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TickString_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TickString_results_2eproto}, {}};

static void InitDefaultsscc_info_Trade_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_Trade_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::Trade();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::Trade::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Trade_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Trade_results_2eproto}, {}};

static void InitDefaultsscc_info_Transmission_results_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Jde::Markets::Proto::Results::_Transmission_default_instance_;
    new (ptr) ::Jde::Markets::Proto::Results::Transmission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Jde::Markets::Proto::Results::Transmission::InitAsDefaultInstance();
}

JDE_MARKETS_EXPORT ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Transmission_results_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Transmission_results_2eproto}, {
      &scc_info_MessageUnion_results_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_results_2eproto[25];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_results_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_results_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_results_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::MessageValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::MessageValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::MessageValue, type_),
  offsetof(::Jde::Markets::Proto::Results::MessageValueDefaultTypeInternal, stringvalue_),
  offsetof(::Jde::Markets::Proto::Results::MessageValueDefaultTypeInternal, intvalue_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::MessageValue, Value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::StringResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::StringResult, type_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::StringResult, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::StringResult, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TagValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TagValue, tag_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TagValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, contract_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, marketname_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, mintick_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, ordertypes_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, validexchanges_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, pricemagnifier_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, underconid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, longname_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, contractmonth_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, industry_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, category_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, subcategory_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, timezoneid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, tradinghours_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, liquidhours_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, evrule_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, evmultiplier_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, mdsizemultiplier_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, agggroup_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, undersymbol_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, undersectype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, marketruleids_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, realexpirationdate_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, lasttradetime_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, secidlist_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, cusip_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, ratings_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, descappend_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, bondtype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, coupontype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, callable_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, putable_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, coupon_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, convertible_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, maturity_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, issuedate_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, nextoptiondate_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, nextoptiontype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, nextoptionpartial_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::ContractDetails, notes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Position, accountnumber_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Position, contract_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Position, size_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Position, avgcost_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountList, numbers_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdate, account_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdate, key_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdate, value_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdate, currency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdateMulti, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdateMulti, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdateMulti, account_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdateMulti, modelcode_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdateMulti, key_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdateMulti, value_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::AccountUpdateMulti, currency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, time_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, high_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, low_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, open_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, close_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, wap_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, volume_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Bar, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::HistoricalData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::HistoricalData, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::HistoricalData, bars_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, contract_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, position_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, marketprice_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, marketvalue_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, averagecost_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, unrealizedpnl_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, realizedpnl_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::PortfolioUpdate, accountnumber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, id_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, accountid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, symbol_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, conid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, date_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, buysell_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, quantity_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, price_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, commission_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, ordertype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Order, ordertime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, orderid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, accountid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, symbol_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, conid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, date_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, buysell_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, quantity_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, price_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, commission_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, ordertype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, ordertime_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, id_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, execid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Trade, isapi_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Flex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Flex, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Flex, orders_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Flex, trades_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Error, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Error, code_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Error, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, contractid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, strike_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, bid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, ask_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, last_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, volume_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, openinterest_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, oichange_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Option, previousprice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::OptionDay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::OptionDay, iscall_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::OptionDay, expirationdays_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::OptionDay, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::OptionValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::OptionValues, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::OptionValues, optiondays_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::MessageUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::MessageUnion, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, position_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, contract_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, message_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, accountlist_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, accountupdate_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, accountupdatemulti_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, portfolioupdate_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, tickgeneric_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, tickprice_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, ticksize_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, tickstring_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, contractdetails_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, error_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, options_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, historicaldata_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, stringresult_),
  offsetof(::Jde::Markets::Proto::Results::MessageUnionDefaultTypeInternal, flex_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::MessageUnion, Value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Transmission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::Transmission, messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickGeneric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickGeneric, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickGeneric, ticktype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickGeneric, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickAttrib, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickAttrib, canautoexecute_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickAttrib, pastlimit_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickAttrib, preopen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickPrice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickPrice, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickPrice, ticktype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickPrice, price_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickPrice, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickSize, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickSize, ticktype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickSize, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickString, requestid_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickString, ticktype_),
  PROTOBUF_FIELD_OFFSET(::Jde::Markets::Proto::Results::TickString, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Jde::Markets::Proto::Results::MessageValue)},
  { 9, -1, sizeof(::Jde::Markets::Proto::Results::StringResult)},
  { 17, -1, sizeof(::Jde::Markets::Proto::Results::TagValue)},
  { 24, -1, sizeof(::Jde::Markets::Proto::Results::ContractDetails)},
  { 70, -1, sizeof(::Jde::Markets::Proto::Results::Position)},
  { 79, -1, sizeof(::Jde::Markets::Proto::Results::AccountList)},
  { 85, -1, sizeof(::Jde::Markets::Proto::Results::AccountUpdate)},
  { 94, -1, sizeof(::Jde::Markets::Proto::Results::AccountUpdateMulti)},
  { 105, -1, sizeof(::Jde::Markets::Proto::Results::Bar)},
  { 118, -1, sizeof(::Jde::Markets::Proto::Results::HistoricalData)},
  { 125, -1, sizeof(::Jde::Markets::Proto::Results::PortfolioUpdate)},
  { 138, -1, sizeof(::Jde::Markets::Proto::Results::Order)},
  { 154, -1, sizeof(::Jde::Markets::Proto::Results::Trade)},
  { 173, -1, sizeof(::Jde::Markets::Proto::Results::Flex)},
  { 181, -1, sizeof(::Jde::Markets::Proto::Results::Error)},
  { 189, -1, sizeof(::Jde::Markets::Proto::Results::Option)},
  { 203, -1, sizeof(::Jde::Markets::Proto::Results::OptionDay)},
  { 211, -1, sizeof(::Jde::Markets::Proto::Results::OptionValues)},
  { 218, -1, sizeof(::Jde::Markets::Proto::Results::MessageUnion)},
  { 241, -1, sizeof(::Jde::Markets::Proto::Results::Transmission)},
  { 247, -1, sizeof(::Jde::Markets::Proto::Results::TickGeneric)},
  { 255, -1, sizeof(::Jde::Markets::Proto::Results::TickAttrib)},
  { 263, -1, sizeof(::Jde::Markets::Proto::Results::TickPrice)},
  { 272, -1, sizeof(::Jde::Markets::Proto::Results::TickSize)},
  { 280, -1, sizeof(::Jde::Markets::Proto::Results::TickString)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_MessageValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_StringResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_TagValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_ContractDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_Position_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_AccountList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_AccountUpdate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_AccountUpdateMulti_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_Bar_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_HistoricalData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_PortfolioUpdate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_Order_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_Trade_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_Flex_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_Error_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_Option_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_OptionDay_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_OptionValues_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_MessageUnion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_Transmission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_TickGeneric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_TickAttrib_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_TickPrice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_TickSize_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Jde::Markets::Proto::Results::_TickString_default_instance_),
};

const char descriptor_table_protodef_results_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rresults.proto\022\031Jde.Markets.Proto.Resul"
  "ts\032\037google/protobuf/timestamp.proto\032\010ib."
  "proto\"u\n\014MessageValue\0221\n\004Type\030\001 \001(\0162#.Jd"
  "e.Markets.Proto.Results.EResults\022\025\n\013Stri"
  "ngValue\030\002 \001(\tH\000\022\022\n\010IntValue\030\003 \001(\005H\000B\007\n\005V"
  "alue\"c\n\014StringResult\0221\n\004Type\030\001 \001(\0162#.Jde"
  ".Markets.Proto.Results.EResults\022\021\n\tReque"
  "stId\030\002 \001(\005\022\r\n\005Value\030\003 \001(\t\"&\n\010TagValue\022\013\n"
  "\003Tag\030\001 \001(\t\022\r\n\005Value\030\002 \001(\t\"\221\007\n\017ContractDe"
  "tails\022\021\n\tRequestId\030\001 \001(\005\022-\n\010Contract\030\002 \001"
  "(\0132\033.Jde.Markets.Proto.Contract\022\022\n\nMarke"
  "tName\030\003 \001(\t\022\017\n\007MinTick\030\004 \001(\001\022\022\n\nOrderTyp"
  "es\030\005 \001(\t\022\026\n\016ValidExchanges\030\006 \001(\t\022\026\n\016Pric"
  "eMagnifier\030\007 \001(\003\022\022\n\nUnderConId\030\010 \001(\r\022\020\n\010"
  "LongName\030\t \001(\t\022\025\n\rContractMonth\030\n \001(\t\022\020\n"
  "\010Industry\030\013 \001(\t\022\020\n\010Category\030\014 \001(\t\022\023\n\013Sub"
  "category\030\r \001(\t\022\022\n\nTimeZoneId\030\016 \001(\t\022\024\n\014Tr"
  "adingHours\030\017 \001(\t\022\023\n\013LiquidHours\030\020 \001(\t\022\016\n"
  "\006EvRule\030\021 \001(\t\022\024\n\014EvMultiplier\030\022 \001(\001\022\030\n\020M"
  "dSizeMultiplier\030\023 \001(\005\022\020\n\010AggGroup\030\024 \001(\005\022"
  "\023\n\013UnderSymbol\030\025 \001(\t\022\024\n\014UnderSecType\030\026 \001"
  "(\t\022\025\n\rMarketRuleIds\030\027 \001(\t\022\032\n\022RealExpirat"
  "ionDate\030\030 \001(\t\022\025\n\rLastTradeTime\030\031 \001(\t\0226\n\t"
  "secIdList\030\032 \003(\0132#.Jde.Markets.Proto.Resu"
  "lts.TagValue\022\r\n\005Cusip\030\033 \001(\t\022\017\n\007Ratings\030\034"
  " \001(\t\022\022\n\nDescAppend\030\035 \001(\t\022\020\n\010BondType\030\036 \001"
  "(\t\022\022\n\nCouponType\030\037 \001(\t\022\020\n\010Callable\030  \001(\010"
  "\022\017\n\007Putable\030! \001(\010\022\016\n\006Coupon\030\" \001(\001\022\023\n\013Con"
  "vertible\030# \001(\010\022\020\n\010Maturity\030$ \001(\t\022\021\n\tIssu"
  "eDate\030% \001(\t\022\026\n\016NextOptionDate\030& \001(\t\022\026\n\016N"
  "extOptionType\030\' \001(\t\022\031\n\021NextOptionPartial"
  "\030( \001(\010\022\r\n\005Notes\030) \001(\t\"o\n\010Position\022\025\n\rAcc"
  "ountNumber\030\001 \001(\t\022-\n\010Contract\030\002 \001(\0132\033.Jde"
  ".Markets.Proto.Contract\022\014\n\004Size\030\003 \001(\001\022\017\n"
  "\007AvgCost\030\004 \001(\001\"\036\n\013AccountList\022\017\n\007Numbers"
  "\030\001 \003(\t\"N\n\rAccountUpdate\022\017\n\007Account\030\002 \001(\t"
  "\022\013\n\003Key\030\004 \001(\t\022\r\n\005Value\030\005 \001(\t\022\020\n\010Currency"
  "\030\006 \001(\t\"y\n\022AccountUpdateMulti\022\021\n\tRequestI"
  "d\030\001 \001(\005\022\017\n\007Account\030\002 \001(\t\022\021\n\tModelCode\030\003 "
  "\001(\t\022\013\n\003Key\030\004 \001(\t\022\r\n\005Value\030\005 \001(\t\022\020\n\010Curre"
  "ncy\030\006 \001(\t\"\223\001\n\003Bar\022(\n\004Time\030\001 \001(\0132\032.google"
  ".protobuf.Timestamp\022\014\n\004High\030\002 \001(\001\022\013\n\003Low"
  "\030\003 \001(\001\022\014\n\004Open\030\004 \001(\001\022\r\n\005Close\030\005 \001(\001\022\013\n\003W"
  "ap\030\006 \001(\001\022\016\n\006Volume\030\007 \001(\004\022\r\n\005Count\030\010 \001(\005\""
  "Q\n\016HistoricalData\022\021\n\tRequestId\030\001 \001(\005\022,\n\004"
  "Bars\030\002 \003(\0132\036.Jde.Markets.Proto.Results.B"
  "ar\"\324\001\n\017PortfolioUpdate\022-\n\010Contract\030\001 \001(\013"
  "2\033.Jde.Markets.Proto.Contract\022\020\n\010Positio"
  "n\030\002 \001(\001\022\023\n\013MarketPrice\030\003 \001(\001\022\023\n\013MarketVa"
  "lue\030\004 \001(\001\022\023\n\013AverageCost\030\005 \001(\001\022\025\n\rUnreal"
  "izedPnl\030\006 \001(\001\022\023\n\013RealizedPnl\030\007 \001(\001\022\025\n\rAc"
  "countNumber\030\010 \001(\t\"\277\001\n\005Order\022\n\n\002Id\030\001 \001(\r\022"
  "\021\n\tAccountId\030\002 \001(\t\022\016\n\006Symbol\030\003 \001(\t\022\r\n\005Co"
  "nid\030\004 \001(\r\022\014\n\004Date\030\005 \001(\r\022\017\n\007BuySell\030\006 \001(\t"
  "\022\020\n\010Quantity\030\007 \001(\001\022\r\n\005Price\030\010 \001(\001\022\022\n\nCom"
  "mission\030\t \001(\001\022\021\n\tOrderType\030\n \001(\t\022\021\n\tOrde"
  "rTime\030\013 \001(\r\"\357\001\n\005Trade\022\017\n\007OrderId\030\001 \001(\r\022\021"
  "\n\tAccountId\030\002 \001(\t\022\016\n\006Symbol\030\003 \001(\t\022\r\n\005Con"
  "id\030\004 \001(\r\022\014\n\004Date\030\005 \001(\r\022\017\n\007BuySell\030\006 \001(\t\022"
  "\020\n\010Quantity\030\007 \001(\001\022\r\n\005Price\030\010 \001(\001\022\022\n\nComm"
  "ission\030\t \001(\001\022\021\n\tOrderType\030\n \001(\t\022\021\n\tOrder"
  "Time\030\013 \001(\r\022\n\n\002Id\030\014 \001(\r\022\016\n\006ExecId\030\r \001(\t\022\r"
  "\n\005IsApi\030\016 \001(\010\"}\n\004Flex\022\021\n\tRequestId\030\001 \001(\r"
  "\0220\n\006Orders\030\002 \003(\0132 .Jde.Markets.Proto.Res"
  "ults.Order\0220\n\006Trades\030\003 \003(\0132 .Jde.Markets"
  ".Proto.Results.Trade\"9\n\005Error\022\021\n\tRequest"
  "Id\030\001 \001(\005\022\014\n\004Code\030\002 \001(\005\022\017\n\007Message\030\003 \001(\t\""
  "\243\001\n\006Option\022\022\n\nContractId\030\001 \001(\r\022\016\n\006Strike"
  "\030\002 \001(\002\022\013\n\003Bid\030\003 \001(\002\022\013\n\003Ask\030\004 \001(\002\022\014\n\004Last"
  "\030\005 \001(\002\022\016\n\006Volume\030\006 \001(\002\022\024\n\014OpenInterest\030\007"
  " \001(\r\022\020\n\010OIChange\030\010 \001(\005\022\025\n\rPreviousPrice\030"
  "\t \001(\002\"f\n\tOptionDay\022\016\n\006IsCall\030\001 \001(\010\022\026\n\016Ex"
  "pirationDays\030\002 \001(\r\0221\n\006Values\030\003 \003(\0132!.Jde"
  ".Markets.Proto.Results.Option\"[\n\014OptionV"
  "alues\022\021\n\tRequestId\030\001 \001(\r\0228\n\nOptionDays\030\002"
  " \003(\0132$.Jde.Markets.Proto.Results.OptionD"
  "ay\"\260\010\n\014MessageUnion\0227\n\010Position\030\001 \001(\0132#."
  "Jde.Markets.Proto.Results.PositionH\000\022/\n\010"
  "Contract\030\002 \001(\0132\033.Jde.Markets.Proto.Contr"
  "actH\000\022:\n\007Message\030\003 \001(\0132\'.Jde.Markets.Pro"
  "to.Results.MessageValueH\000\022=\n\013AccountList"
  "\030\004 \001(\0132&.Jde.Markets.Proto.Results.Accou"
  "ntListH\000\022A\n\rAccountUpdate\030\005 \001(\0132(.Jde.Ma"
  "rkets.Proto.Results.AccountUpdateH\000\022K\n\022A"
  "ccountUpdateMulti\030\006 \001(\0132-.Jde.Markets.Pr"
  "oto.Results.AccountUpdateMultiH\000\022E\n\017Port"
  "folioUpdate\030\007 \001(\0132*.Jde.Markets.Proto.Re"
  "sults.PortfolioUpdateH\000\022=\n\013TickGeneric\030\010"
  " \001(\0132&.Jde.Markets.Proto.Results.TickGen"
  "ericH\000\0229\n\tTickPrice\030\t \001(\0132$.Jde.Markets."
  "Proto.Results.TickPriceH\000\0227\n\010TickSize\030\n "
  "\001(\0132#.Jde.Markets.Proto.Results.TickSize"
  "H\000\022;\n\nTickString\030\013 \001(\0132%.Jde.Markets.Pro"
  "to.Results.TickStringH\000\022E\n\017ContractDetai"
  "ls\030\014 \001(\0132*.Jde.Markets.Proto.Results.Con"
  "tractDetailsH\000\0221\n\005Error\030\r \001(\0132 .Jde.Mark"
  "ets.Proto.Results.ErrorH\000\022:\n\007Options\030\016 \001"
  "(\0132\'.Jde.Markets.Proto.Results.OptionVal"
  "uesH\000\022C\n\016HistoricalData\030\017 \001(\0132).Jde.Mark"
  "ets.Proto.Results.HistoricalDataH\000\022\?\n\014St"
  "ringResult\030\020 \001(\0132\'.Jde.Markets.Proto.Res"
  "ults.StringResultH\000\022/\n\004Flex\030\021 \001(\0132\037.Jde."
  "Markets.Proto.Results.FlexH\000B\007\n\005Value\"I\n"
  "\014Transmission\0229\n\010Messages\030\n \003(\0132\'.Jde.Ma"
  "rkets.Proto.Results.MessageUnion\"g\n\013Tick"
  "Generic\022\021\n\tRequestId\030\001 \001(\005\0226\n\010TickType\030\002"
  " \001(\0162$.Jde.Markets.Proto.Results.ETickTy"
  "pe\022\r\n\005Value\030\003 \001(\001\"H\n\nTickAttrib\022\026\n\016CanAu"
  "toExecute\030\001 \001(\010\022\021\n\tPastLimit\030\002 \001(\010\022\017\n\007Pr"
  "eOpen\030\003 \001(\010\"\240\001\n\tTickPrice\022\021\n\tRequestId\030\001"
  " \001(\005\0226\n\010TickType\030\002 \001(\0162$.Jde.Markets.Pro"
  "to.Results.ETickType\022\r\n\005Price\030\003 \001(\001\0229\n\nA"
  "ttributes\030\004 \001(\0132%.Jde.Markets.Proto.Resu"
  "lts.TickAttrib\"c\n\010TickSize\022\021\n\tRequestId\030"
  "\001 \001(\005\0226\n\010TickType\030\002 \001(\0162$.Jde.Markets.Pr"
  "oto.Results.ETickType\022\014\n\004Size\030\003 \001(\005\"f\n\nT"
  "ickString\022\021\n\tRequestId\030\001 \001(\005\0226\n\010TickType"
  "\030\002 \001(\0162$.Jde.Markets.Proto.Results.ETick"
  "Type\022\r\n\005Value\030\003 \001(\t*\206\017\n\tETickType\022\013\n\007Bid"
  "Size\020\000\022\014\n\010BidPrice\020\001\022\014\n\010AskPrice\020\002\022\013\n\007As"
  "kSize\020\003\022\r\n\tLastPrice\020\004\022\014\n\010LastSize\020\005\022\010\n\004"
  "High\020\006\022\007\n\003Low\020\007\022\n\n\006Volume\020\010\022\016\n\nClosePric"
  "e\020\t\022\032\n\026BID_OPTION_COMPUTATION\020\n\022\032\n\026ASK_O"
  "PTION_COMPUTATION\020\013\022\033\n\027LAST_OPTION_COMPU"
  "TATION\020\014\022\020\n\014MODEL_OPTION\020\r\022\014\n\010OpenTick\020\016"
  "\022\017\n\013LOW_13_WEEK\020\017\022\020\n\014HIGH_13_WEEK\020\020\022\017\n\013L"
  "OW_26_WEEK\020\021\022\020\n\014HIGH_26_WEEK\020\022\022\017\n\013LOW_52"
  "_WEEK\020\023\022\020\n\014HIGH_52_WEEK\020\024\022\016\n\nAVG_VOLUME\020"
  "\025\022\021\n\rOPEN_INTEREST\020\026\022\031\n\025OPTION_HISTORICA"
  "L_VOL\020\027\022\026\n\022OPTION_IMPLIED_VOL\020\030\022\023\n\017OPTIO"
  "N_BID_EXCH\020\031\022\023\n\017OPTION_ASK_EXCH\020\032\022\035\n\031OPT"
  "ION_CALL_OPEN_INTEREST\020\033\022\034\n\030OPTION_PUT_O"
  "PEN_INTEREST\020\034\022\026\n\022OPTION_CALL_VOLUME\020\035\022\025"
  "\n\021OPTION_PUT_VOLUME\020\036\022\030\n\024INDEX_FUTURE_PR"
  "EMIUM\020\037\022\017\n\013BidExchange\020 \022\017\n\013AskExchange\020"
  "!\022\022\n\016AUCTION_VOLUME\020\"\022\021\n\rAUCTION_PRICE\020#"
  "\022\025\n\021AUCTION_IMBALANCE\020$\022\016\n\nMARK_PRICE\020%\022"
  "\027\n\023BID_EFP_COMPUTATION\020&\022\027\n\023ASK_EFP_COMP"
  "UTATION\020\'\022\030\n\024LAST_EFP_COMPUTATION\020(\022\030\n\024O"
  "PEN_EFP_COMPUTATION\020)\022\030\n\024HIGH_EFP_COMPUT"
  "ATION\020*\022\027\n\023LOW_EFP_COMPUTATION\020+\022\031\n\025CLOS"
  "E_EFP_COMPUTATION\020,\022\021\n\rLastTimestamp\020-\022\r"
  "\n\tSHORTABLE\020.\022\026\n\022FUNDAMENTAL_RATIOS\020/\022\r\n"
  "\tRT_VOLUME\0200\022\n\n\006Halted\0201\022\r\n\tBID_YIELD\0202\022"
  "\r\n\tASK_YIELD\0203\022\016\n\nLAST_YIELD\0204\022\033\n\027CUST_O"
  "PTION_COMPUTATION\0205\022\017\n\013TRADE_COUNT\0206\022\016\n\n"
  "TRADE_RATE\0207\022\017\n\013VOLUME_RATE\0208\022\022\n\016LAST_RT"
  "H_TRADE\0209\022\025\n\021RT_HISTORICAL_VOL\020:\022\020\n\014IB_D"
  "IVIDENDS\020;\022\032\n\026BOND_FACTOR_MULTIPLIER\020<\022\030"
  "\n\024REGULATORY_IMBALANCE\020=\022\r\n\tNEWS_TICK\020>\022"
  "\033\n\027SHORT_TERM_VOLUME_3_MIN\020\?\022\033\n\027SHORT_TE"
  "RM_VOLUME_5_MIN\020@\022\034\n\030SHORT_TERM_VOLUME_1"
  "0_MIN\020A\022\017\n\013DELAYED_BID\020B\022\017\n\013DELAYED_ASK\020"
  "C\022\020\n\014DELAYED_LAST\020D\022\024\n\020DELAYED_BID_SIZE\020"
  "E\022\024\n\020DELAYED_ASK_SIZE\020F\022\025\n\021DELAYED_LAST_"
  "SIZE\020G\022\020\n\014DELAYED_HIGH\020H\022\017\n\013DELAYED_LOW\020"
  "I\022\022\n\016DELAYED_VOLUME\020J\022\021\n\rDELAYED_CLOSE\020K"
  "\022\020\n\014DELAYED_OPEN\020L\022\021\n\rRT_TRD_VOLUME\020M\022\030\n"
  "\024CREDITMAN_MARK_PRICE\020N\022\035\n\031CREDITMAN_SLO"
  "W_MARK_PRICE\020O\022\"\n\036DELAYED_BID_OPTION_COM"
  "PUTATION\020P\022\"\n\036DELAYED_ASK_OPTION_COMPUTA"
  "TION\020Q\022#\n\037DELAYED_LAST_OPTION_COMPUTATIO"
  "N\020R\022$\n DELAYED_MODEL_OPTION_COMPUTATION\020"
  "S\022\020\n\014LastExchange\020T\022\021\n\rLAST_REG_TIME\020U\022\031"
  "\n\025FUTURES_OPEN_INTEREST\020V\022\022\n\016AVG_OPT_VOL"
  "UME\020W\022\032\n\026DELAYED_LAST_TIMESTAMP\020X\022\024\n\020SHO"
  "RTABLE_SHARES\020Y\022\013\n\007NOT_SET\020Z*\221\r\n\010EResult"
  "s\022\n\n\006Accept\020\000\022\025\n\010MultiEnd\020\377\377\377\377\377\377\377\377\377\001\022\024\n\020"
  "TickPriceMessage\020\001\022\023\n\017TickSizeMessage\020\002\022"
  "\017\n\013OrderStatus\020\003\022\020\n\014ErrorMessage\020\004\022\r\n\tOp"
  "enOrder\020\005\022\016\n\nACCT_VALUE\020\006\022\023\n\017PORTFOLIO_V"
  "ALUE\020\007\022\024\n\020ACCT_UPDATE_TIME\020\010\022\017\n\013NextVali"
  "dId\020\t\022\021\n\rCONTRACT_DATA\020\n\022\021\n\rExecutionDat"
  "a\020\013\022\020\n\014MARKET_DEPTH\020\014\022\023\n\017MARKET_DEPTH_L2"
  "\020\r\022\022\n\016NEWS_BULLETINS\020\016\022\023\n\017ManagedAccount"
  "s\020\017\022\016\n\nRECEIVE_FA\020\020\022\023\n\017HistoricalData_\020\021"
  "\022\026\n\022BOND_CONTRACT_DATA\020\022\022\026\n\022SCANNER_PARA"
  "METERS\020\023\022\020\n\014SCANNER_DATA\020\024\022\033\n\027TICK_OPTIO"
  "N_COMPUTATION\020\025\022\026\n\022TickGenericMessage\020-\022"
  "\025\n\021TickStringMessage\020.\022\014\n\010TICK_EFP\020/\022\017\n\013"
  "CurrentTime\0201\022\020\n\014RealTimeBars\0202\022\024\n\020FUNDA"
  "MENTAL_DATA\0203\022\023\n\017ContractDataEnd\0204\022\022\n\016OP"
  "EN_ORDER_END\0205\022\025\n\021ACCT_DOWNLOAD_END\0206\022\026\n"
  "\022EXECUTION_DATA_END\0207\022\034\n\030DELTA_NEUTRAL_V"
  "ALIDATION\0208\022\023\n\017TickSnapshotEnd\0209\022\022\n\016Mark"
  "etDataType\020:\022\025\n\021COMMISSION_REPORT\020;\022\020\n\014P"
  "ositionData\020=\022\017\n\013PositionEnd\020>\022\023\n\017ACCOUN"
  "T_SUMMARY\020\?\022\027\n\023ACCOUNT_SUMMARY_END\020@\022\026\n\022"
  "VERIFY_MESSAGE_API\020A\022\024\n\020VERIFY_COMPLETED"
  "\020B\022\026\n\022DISPLAY_GROUP_LIST\020C\022\031\n\025DISPLAY_GR"
  "OUP_UPDATED\020D\022\037\n\033VERIFY_AND_AUTH_MESSAGE"
  "_API\020E\022\035\n\031VERIFY_AND_AUTH_COMPLETED\020F\022\021\n"
  "\rPositionMulti\020G\022\024\n\020PositionMultiEnd\020H\022\027"
  "\n\023AccountUpdateMulti_\020I\022\034\n\030ACCOUNT_UPDAT"
  "E_MULTI_END\020J\022(\n$SECURITY_DEFINITION_OPT"
  "ION_PARAMETER\020K\022,\n(SECURITY_DEFINITION_O"
  "PTION_PARAMETER_END\020L\022\025\n\021SOFT_DOLLAR_TIE"
  "RS\020M\022\020\n\014FAMILY_CODES\020N\022\022\n\016SYMBOL_SAMPLES"
  "\020O\022\027\n\023MKT_DEPTH_EXCHANGES\020P\022\026\n\022TickRequi"
  "redParams\020Q\022\024\n\020SMART_COMPONENTS\020R\022\020\n\014NEW"
  "S_ARTICLE\020S\022\r\n\tTICK_NEWS\020T\022\022\n\016NEWS_PROVI"
  "DERS\020U\022\023\n\017HISTORICAL_NEWS\020V\022\027\n\023HISTORICA"
  "L_NEWS_END\020W\022\022\n\016HEAD_TIMESTAMP\020X\022\022\n\016HIST"
  "OGRAM_DATA\020Y\022\032\n\026HISTORICAL_DATA_UPDATE\020Z"
  "\022\030\n\024REROUTE_MKT_DATA_REQ\020[\022\031\n\025REROUTE_MK"
  "T_DEPTH_REQ\020\\\022\017\n\013MARKET_RULE\020]\022\007\n\003PNL\020^\022"
  "\016\n\nPNL_SINGLE\020_\022\024\n\020HISTORICAL_TICKS\020`\022\034\n"
  "\030HISTORICAL_TICKS_BID_ASK\020a\022\031\n\025HISTORICA"
  "L_TICKS_LAST\020b\022\020\n\014TICK_BY_TICK\020cb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_results_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_ib_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_results_2eproto_sccs[25] = {
  &scc_info_AccountList_results_2eproto.base,
  &scc_info_AccountUpdate_results_2eproto.base,
  &scc_info_AccountUpdateMulti_results_2eproto.base,
  &scc_info_Bar_results_2eproto.base,
  &scc_info_ContractDetails_results_2eproto.base,
  &scc_info_Error_results_2eproto.base,
  &scc_info_Flex_results_2eproto.base,
  &scc_info_HistoricalData_results_2eproto.base,
  &scc_info_MessageUnion_results_2eproto.base,
  &scc_info_MessageValue_results_2eproto.base,
  &scc_info_Option_results_2eproto.base,
  &scc_info_OptionDay_results_2eproto.base,
  &scc_info_OptionValues_results_2eproto.base,
  &scc_info_Order_results_2eproto.base,
  &scc_info_PortfolioUpdate_results_2eproto.base,
  &scc_info_Position_results_2eproto.base,
  &scc_info_StringResult_results_2eproto.base,
  &scc_info_TagValue_results_2eproto.base,
  &scc_info_TickAttrib_results_2eproto.base,
  &scc_info_TickGeneric_results_2eproto.base,
  &scc_info_TickPrice_results_2eproto.base,
  &scc_info_TickSize_results_2eproto.base,
  &scc_info_TickString_results_2eproto.base,
  &scc_info_Trade_results_2eproto.base,
  &scc_info_Transmission_results_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_results_2eproto_once;
static bool descriptor_table_results_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_results_2eproto = {
  &descriptor_table_results_2eproto_initialized, descriptor_table_protodef_results_2eproto, "results.proto", 8360,
  &descriptor_table_results_2eproto_once, descriptor_table_results_2eproto_sccs, descriptor_table_results_2eproto_deps, 25, 2,
  schemas, file_default_instances, TableStruct_results_2eproto::offsets,
  file_level_metadata_results_2eproto, 25, file_level_enum_descriptors_results_2eproto, file_level_service_descriptors_results_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_results_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_results_2eproto), true);
namespace Jde {
namespace Markets {
namespace Proto {
namespace Results {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETickType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_results_2eproto);
  return file_level_enum_descriptors_results_2eproto[0];
}
bool ETickType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EResults_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_results_2eproto);
  return file_level_enum_descriptors_results_2eproto[1];
}
bool EResults_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 45:
    case 46:
    case 47:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MessageValue::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Results::_MessageValue_default_instance_.stringvalue_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::Jde::Markets::Proto::Results::_MessageValue_default_instance_.intvalue_ = 0;
}
class MessageValue::_Internal {
 public:
};

MessageValue::MessageValue()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.MessageValue)
}
MessageValue::MessageValue(const MessageValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  clear_has_Value();
  switch (from.Value_case()) {
    case kStringValue: {
      _internal_set_stringvalue(from._internal_stringvalue());
      break;
    }
    case kIntValue: {
      _internal_set_intvalue(from._internal_intvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.MessageValue)
}

void MessageValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageValue_results_2eproto.base);
  type_ = 0;
  clear_has_Value();
}

MessageValue::~MessageValue() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.MessageValue)
  SharedDtor();
}

void MessageValue::SharedDtor() {
  if (has_Value()) {
    clear_Value();
  }
}

void MessageValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageValue& MessageValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageValue_results_2eproto.base);
  return *internal_default_instance();
}


void MessageValue::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:Jde.Markets.Proto.Results.MessageValue)
  switch (Value_case()) {
    case kStringValue: {
      Value_.stringvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void MessageValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.MessageValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  clear_Value();
  _internal_metadata_.Clear();
}

const char* MessageValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Markets.Proto.Results.EResults Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::Jde::Markets::Proto::Results::EResults>(val));
        } else goto handle_unusual;
        continue;
      // string StringValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_stringvalue(), ptr, ctx, "Jde.Markets.Proto.Results.MessageValue.StringValue");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 IntValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_intvalue(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageValue::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.MessageValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Results.EResults Type = 1;
  if (this->type() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string StringValue = 2;
  if (_internal_has_stringvalue()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stringvalue().data(), static_cast<int>(this->_internal_stringvalue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.MessageValue.StringValue");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_stringvalue(), target);
  }

  // int32 IntValue = 3;
  if (_internal_has_intvalue()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_intvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.MessageValue)
  return target;
}

size_t MessageValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.MessageValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Results.EResults Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (Value_case()) {
    // string StringValue = 2;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_stringvalue());
      break;
    }
    // int32 IntValue = 3;
    case kIntValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_intvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.MessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.MessageValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.MessageValue)
    MergeFrom(*source);
  }
}

void MessageValue::MergeFrom(const MessageValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.MessageValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  switch (from.Value_case()) {
    case kStringValue: {
      _internal_set_stringvalue(from._internal_stringvalue());
      break;
    }
    case kIntValue: {
      _internal_set_intvalue(from._internal_intvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void MessageValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.MessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageValue::CopyFrom(const MessageValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.MessageValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageValue::IsInitialized() const {
  return true;
}

void MessageValue::InternalSwap(MessageValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(Value_, other->Value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StringResult::InitAsDefaultInstance() {
}
class StringResult::_Internal {
 public:
};

StringResult::StringResult()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.StringResult)
}
StringResult::StringResult(const StringResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&type_)) + sizeof(requestid_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.StringResult)
}

void StringResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StringResult_results_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(requestid_));
}

StringResult::~StringResult() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.StringResult)
  SharedDtor();
}

void StringResult::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StringResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringResult& StringResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StringResult_results_2eproto.base);
  return *internal_default_instance();
}


void StringResult::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.StringResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestid_) -
      reinterpret_cast<char*>(&type_)) + sizeof(requestid_));
  _internal_metadata_.Clear();
}

const char* StringResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Markets.Proto.Results.EResults Type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::Jde::Markets::Proto::Results::EResults>(val));
        } else goto handle_unusual;
        continue;
      // int32 RequestId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_value(), ptr, ctx, "Jde.Markets.Proto.Results.StringResult.Value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StringResult::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.StringResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Results.EResults Type = 1;
  if (this->type() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // int32 RequestId = 2;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_requestid(), target);
  }

  // string Value = 3;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.StringResult.Value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.StringResult)
  return target;
}

size_t StringResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.StringResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // .Jde.Markets.Proto.Results.EResults Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // int32 RequestId = 2;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.StringResult)
  GOOGLE_DCHECK_NE(&from, this);
  const StringResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StringResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.StringResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.StringResult)
    MergeFrom(*source);
  }
}

void StringResult::MergeFrom(const StringResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.StringResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
}

void StringResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.StringResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringResult::CopyFrom(const StringResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.StringResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringResult::IsInitialized() const {
  return true;
}

void StringResult::InternalSwap(StringResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(requestid_, other->requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StringResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TagValue::InitAsDefaultInstance() {
}
class TagValue::_Internal {
 public:
};

TagValue::TagValue()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.TagValue)
}
TagValue::TagValue(const TagValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tag().empty()) {
    tag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.TagValue)
}

void TagValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TagValue_results_2eproto.base);
  tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TagValue::~TagValue() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.TagValue)
  SharedDtor();
}

void TagValue::SharedDtor() {
  tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TagValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TagValue& TagValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TagValue_results_2eproto.base);
  return *internal_default_instance();
}


void TagValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.TagValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* TagValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Tag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_tag(), ptr, ctx, "Jde.Markets.Proto.Results.TagValue.Tag");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_value(), ptr, ctx, "Jde.Markets.Proto.Results.TagValue.Value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TagValue::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.TagValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Tag = 1;
  if (this->tag().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tag().data(), static_cast<int>(this->_internal_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.TagValue.Tag");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tag(), target);
  }

  // string Value = 2;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.TagValue.Value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.TagValue)
  return target;
}

size_t TagValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.TagValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Tag = 1;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tag());
  }

  // string Value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TagValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.TagValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TagValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TagValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.TagValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.TagValue)
    MergeFrom(*source);
  }
}

void TagValue::MergeFrom(const TagValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.TagValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void TagValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.TagValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TagValue::CopyFrom(const TagValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.TagValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TagValue::IsInitialized() const {
  return true;
}

void TagValue::InternalSwap(TagValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tag_.Swap(&other->tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TagValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ContractDetails::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Results::_ContractDetails_default_instance_._instance.get_mutable()->contract_ = const_cast< ::Jde::Markets::Proto::Contract*>(
      ::Jde::Markets::Proto::Contract::internal_default_instance());
}
class ContractDetails::_Internal {
 public:
  static const ::Jde::Markets::Proto::Contract& contract(const ContractDetails* msg);
};

const ::Jde::Markets::Proto::Contract&
ContractDetails::_Internal::contract(const ContractDetails* msg) {
  return *msg->contract_;
}
void ContractDetails::clear_contract() {
  if (GetArenaNoVirtual() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
}
ContractDetails::ContractDetails()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.ContractDetails)
}
ContractDetails::ContractDetails(const ContractDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      secidlist_(from.secidlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  marketname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_marketname().empty()) {
    marketname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.marketname_);
  }
  ordertypes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ordertypes().empty()) {
    ordertypes_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ordertypes_);
  }
  validexchanges_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_validexchanges().empty()) {
    validexchanges_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.validexchanges_);
  }
  longname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_longname().empty()) {
    longname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.longname_);
  }
  contractmonth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contractmonth().empty()) {
    contractmonth_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contractmonth_);
  }
  industry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_industry().empty()) {
    industry_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.industry_);
  }
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  subcategory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subcategory().empty()) {
    subcategory_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.subcategory_);
  }
  timezoneid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_timezoneid().empty()) {
    timezoneid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.timezoneid_);
  }
  tradinghours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tradinghours().empty()) {
    tradinghours_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tradinghours_);
  }
  liquidhours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_liquidhours().empty()) {
    liquidhours_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.liquidhours_);
  }
  evrule_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_evrule().empty()) {
    evrule_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.evrule_);
  }
  undersymbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_undersymbol().empty()) {
    undersymbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.undersymbol_);
  }
  undersectype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_undersectype().empty()) {
    undersectype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.undersectype_);
  }
  marketruleids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_marketruleids().empty()) {
    marketruleids_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.marketruleids_);
  }
  realexpirationdate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_realexpirationdate().empty()) {
    realexpirationdate_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.realexpirationdate_);
  }
  lasttradetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lasttradetime().empty()) {
    lasttradetime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.lasttradetime_);
  }
  cusip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cusip().empty()) {
    cusip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cusip_);
  }
  ratings_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ratings().empty()) {
    ratings_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ratings_);
  }
  descappend_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descappend().empty()) {
    descappend_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.descappend_);
  }
  bondtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bondtype().empty()) {
    bondtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bondtype_);
  }
  coupontype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_coupontype().empty()) {
    coupontype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.coupontype_);
  }
  maturity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_maturity().empty()) {
    maturity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.maturity_);
  }
  issuedate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_issuedate().empty()) {
    issuedate_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.issuedate_);
  }
  nextoptiondate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nextoptiondate().empty()) {
    nextoptiondate_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nextoptiondate_);
  }
  nextoptiontype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nextoptiontype().empty()) {
    nextoptiontype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nextoptiontype_);
  }
  notes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_notes().empty()) {
    notes_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.notes_);
  }
  if (from._internal_has_contract()) {
    contract_ = new ::Jde::Markets::Proto::Contract(*from.contract_);
  } else {
    contract_ = nullptr;
  }
  ::memcpy(&mintick_, &from.mintick_,
    static_cast<size_t>(reinterpret_cast<char*>(&nextoptionpartial_) -
    reinterpret_cast<char*>(&mintick_)) + sizeof(nextoptionpartial_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.ContractDetails)
}

void ContractDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ContractDetails_results_2eproto.base);
  marketname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertypes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validexchanges_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  longname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contractmonth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  industry_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subcategory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timezoneid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradinghours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  liquidhours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  evrule_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undersymbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undersectype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  marketruleids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  realexpirationdate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lasttradetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cusip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ratings_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descappend_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bondtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  coupontype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  maturity_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  issuedate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nextoptiondate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nextoptiontype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nextoptionpartial_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(nextoptionpartial_));
}

ContractDetails::~ContractDetails() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.ContractDetails)
  SharedDtor();
}

void ContractDetails::SharedDtor() {
  marketname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertypes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validexchanges_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  longname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contractmonth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  industry_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subcategory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timezoneid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradinghours_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  liquidhours_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  evrule_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undersymbol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undersectype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  marketruleids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  realexpirationdate_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lasttradetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cusip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ratings_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descappend_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bondtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  coupontype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  maturity_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  issuedate_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nextoptiondate_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nextoptiontype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contract_;
}

void ContractDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContractDetails& ContractDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ContractDetails_results_2eproto.base);
  return *internal_default_instance();
}


void ContractDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.ContractDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secidlist_.Clear();
  marketname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertypes_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validexchanges_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  longname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contractmonth_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  industry_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subcategory_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timezoneid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tradinghours_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  liquidhours_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  evrule_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undersymbol_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undersectype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  marketruleids_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  realexpirationdate_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lasttradetime_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cusip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ratings_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descappend_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bondtype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  coupontype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  maturity_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  issuedate_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nextoptiondate_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nextoptiontype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  notes_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
  ::memset(&mintick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nextoptionpartial_) -
      reinterpret_cast<char*>(&mintick_)) + sizeof(nextoptionpartial_));
  _internal_metadata_.Clear();
}

const char* ContractDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Contract Contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string MarketName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_marketname(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.MarketName");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double MinTick = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          mintick_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string OrderTypes = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_ordertypes(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.OrderTypes");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ValidExchanges = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_validexchanges(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.ValidExchanges");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 PriceMagnifier = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          pricemagnifier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 UnderConId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          underconid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string LongName = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_longname(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.LongName");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ContractMonth = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_contractmonth(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.ContractMonth");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Industry = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_industry(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.Industry");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Category = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_category(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.Category");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Subcategory = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_subcategory(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.Subcategory");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TimeZoneId = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_timezoneid(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.TimeZoneId");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TradingHours = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_tradinghours(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.TradingHours");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string LiquidHours = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_liquidhours(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.LiquidHours");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string EvRule = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_evrule(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.EvRule");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double EvMultiplier = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 145)) {
          evmultiplier_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 MdSizeMultiplier = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          mdsizemultiplier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 AggGroup = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          agggroup_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string UnderSymbol = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_undersymbol(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.UnderSymbol");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string UnderSecType = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_undersectype(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.UnderSecType");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string MarketRuleIds = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_marketruleids(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.MarketRuleIds");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string RealExpirationDate = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_realexpirationdate(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.RealExpirationDate");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string LastTradeTime = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_lasttradetime(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.LastTradeTime");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.Results.TagValue secIdList = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_secidlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else goto handle_unusual;
        continue;
      // string Cusip = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_cusip(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.Cusip");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Ratings = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_ratings(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.Ratings");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string DescAppend = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_descappend(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.DescAppend");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BondType = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_bondtype(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.BondType");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string CouponType = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_coupontype(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.CouponType");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool Callable = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          callable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool Putable = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          putable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double Coupon = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          coupon_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool Convertible = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          convertible_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Maturity = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_maturity(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.Maturity");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string IssueDate = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_issuedate(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.IssueDate");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string NextOptionDate = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_nextoptiondate(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.NextOptionDate");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string NextOptionType = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_nextoptiontype(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.NextOptionType");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool NextOptionPartial = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          nextoptionpartial_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Notes = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_notes(), ptr, ctx, "Jde.Markets.Proto.Results.ContractDetails.Notes");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ContractDetails::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.ContractDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // .Jde.Markets.Proto.Contract Contract = 2;
  if (this->has_contract()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::contract(this), target, stream);
  }

  // string MarketName = 3;
  if (this->marketname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_marketname().data(), static_cast<int>(this->_internal_marketname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.MarketName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_marketname(), target);
  }

  // double MinTick = 4;
  if (!(this->mintick() <= 0 && this->mintick() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_mintick(), target);
  }

  // string OrderTypes = 5;
  if (this->ordertypes().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ordertypes().data(), static_cast<int>(this->_internal_ordertypes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.OrderTypes");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_ordertypes(), target);
  }

  // string ValidExchanges = 6;
  if (this->validexchanges().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validexchanges().data(), static_cast<int>(this->_internal_validexchanges().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.ValidExchanges");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_validexchanges(), target);
  }

  // int64 PriceMagnifier = 7;
  if (this->pricemagnifier() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_pricemagnifier(), target);
  }

  // uint32 UnderConId = 8;
  if (this->underconid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_underconid(), target);
  }

  // string LongName = 9;
  if (this->longname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_longname().data(), static_cast<int>(this->_internal_longname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.LongName");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_longname(), target);
  }

  // string ContractMonth = 10;
  if (this->contractmonth().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contractmonth().data(), static_cast<int>(this->_internal_contractmonth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.ContractMonth");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_contractmonth(), target);
  }

  // string Industry = 11;
  if (this->industry().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_industry().data(), static_cast<int>(this->_internal_industry().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.Industry");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_industry(), target);
  }

  // string Category = 12;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.Category");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_category(), target);
  }

  // string Subcategory = 13;
  if (this->subcategory().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subcategory().data(), static_cast<int>(this->_internal_subcategory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.Subcategory");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_subcategory(), target);
  }

  // string TimeZoneId = 14;
  if (this->timezoneid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timezoneid().data(), static_cast<int>(this->_internal_timezoneid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.TimeZoneId");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_timezoneid(), target);
  }

  // string TradingHours = 15;
  if (this->tradinghours().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tradinghours().data(), static_cast<int>(this->_internal_tradinghours().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.TradingHours");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_tradinghours(), target);
  }

  // string LiquidHours = 16;
  if (this->liquidhours().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_liquidhours().data(), static_cast<int>(this->_internal_liquidhours().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.LiquidHours");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_liquidhours(), target);
  }

  // string EvRule = 17;
  if (this->evrule().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_evrule().data(), static_cast<int>(this->_internal_evrule().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.EvRule");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_evrule(), target);
  }

  // double EvMultiplier = 18;
  if (!(this->evmultiplier() <= 0 && this->evmultiplier() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(18, this->_internal_evmultiplier(), target);
  }

  // int32 MdSizeMultiplier = 19;
  if (this->mdsizemultiplier() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_mdsizemultiplier(), target);
  }

  // int32 AggGroup = 20;
  if (this->agggroup() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(20, this->_internal_agggroup(), target);
  }

  // string UnderSymbol = 21;
  if (this->undersymbol().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_undersymbol().data(), static_cast<int>(this->_internal_undersymbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.UnderSymbol");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_undersymbol(), target);
  }

  // string UnderSecType = 22;
  if (this->undersectype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_undersectype().data(), static_cast<int>(this->_internal_undersectype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.UnderSecType");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_undersectype(), target);
  }

  // string MarketRuleIds = 23;
  if (this->marketruleids().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_marketruleids().data(), static_cast<int>(this->_internal_marketruleids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.MarketRuleIds");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_marketruleids(), target);
  }

  // string RealExpirationDate = 24;
  if (this->realexpirationdate().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_realexpirationdate().data(), static_cast<int>(this->_internal_realexpirationdate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.RealExpirationDate");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_realexpirationdate(), target);
  }

  // string LastTradeTime = 25;
  if (this->lasttradetime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lasttradetime().data(), static_cast<int>(this->_internal_lasttradetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.LastTradeTime");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_lasttradetime(), target);
  }

  // repeated .Jde.Markets.Proto.Results.TagValue secIdList = 26;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_secidlist_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(26, this->_internal_secidlist(i), target, stream);
  }

  // string Cusip = 27;
  if (this->cusip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cusip().data(), static_cast<int>(this->_internal_cusip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.Cusip");
    target = stream->WriteStringMaybeAliased(
        27, this->_internal_cusip(), target);
  }

  // string Ratings = 28;
  if (this->ratings().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ratings().data(), static_cast<int>(this->_internal_ratings().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.Ratings");
    target = stream->WriteStringMaybeAliased(
        28, this->_internal_ratings(), target);
  }

  // string DescAppend = 29;
  if (this->descappend().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_descappend().data(), static_cast<int>(this->_internal_descappend().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.DescAppend");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_descappend(), target);
  }

  // string BondType = 30;
  if (this->bondtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bondtype().data(), static_cast<int>(this->_internal_bondtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.BondType");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_bondtype(), target);
  }

  // string CouponType = 31;
  if (this->coupontype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_coupontype().data(), static_cast<int>(this->_internal_coupontype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.CouponType");
    target = stream->WriteStringMaybeAliased(
        31, this->_internal_coupontype(), target);
  }

  // bool Callable = 32;
  if (this->callable() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->_internal_callable(), target);
  }

  // bool Putable = 33;
  if (this->putable() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(33, this->_internal_putable(), target);
  }

  // double Coupon = 34;
  if (!(this->coupon() <= 0 && this->coupon() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(34, this->_internal_coupon(), target);
  }

  // bool Convertible = 35;
  if (this->convertible() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(35, this->_internal_convertible(), target);
  }

  // string Maturity = 36;
  if (this->maturity().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_maturity().data(), static_cast<int>(this->_internal_maturity().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.Maturity");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_maturity(), target);
  }

  // string IssueDate = 37;
  if (this->issuedate().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_issuedate().data(), static_cast<int>(this->_internal_issuedate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.IssueDate");
    target = stream->WriteStringMaybeAliased(
        37, this->_internal_issuedate(), target);
  }

  // string NextOptionDate = 38;
  if (this->nextoptiondate().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nextoptiondate().data(), static_cast<int>(this->_internal_nextoptiondate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.NextOptionDate");
    target = stream->WriteStringMaybeAliased(
        38, this->_internal_nextoptiondate(), target);
  }

  // string NextOptionType = 39;
  if (this->nextoptiontype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nextoptiontype().data(), static_cast<int>(this->_internal_nextoptiontype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.NextOptionType");
    target = stream->WriteStringMaybeAliased(
        39, this->_internal_nextoptiontype(), target);
  }

  // bool NextOptionPartial = 40;
  if (this->nextoptionpartial() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(40, this->_internal_nextoptionpartial(), target);
  }

  // string Notes = 41;
  if (this->notes().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_notes().data(), static_cast<int>(this->_internal_notes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.ContractDetails.Notes");
    target = stream->WriteStringMaybeAliased(
        41, this->_internal_notes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.ContractDetails)
  return target;
}

size_t ContractDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.ContractDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Results.TagValue secIdList = 26;
  total_size += 2UL * this->_internal_secidlist_size();
  for (const auto& msg : this->secidlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string MarketName = 3;
  if (this->marketname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_marketname());
  }

  // string OrderTypes = 5;
  if (this->ordertypes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ordertypes());
  }

  // string ValidExchanges = 6;
  if (this->validexchanges().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validexchanges());
  }

  // string LongName = 9;
  if (this->longname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_longname());
  }

  // string ContractMonth = 10;
  if (this->contractmonth().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contractmonth());
  }

  // string Industry = 11;
  if (this->industry().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_industry());
  }

  // string Category = 12;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // string Subcategory = 13;
  if (this->subcategory().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subcategory());
  }

  // string TimeZoneId = 14;
  if (this->timezoneid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timezoneid());
  }

  // string TradingHours = 15;
  if (this->tradinghours().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tradinghours());
  }

  // string LiquidHours = 16;
  if (this->liquidhours().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_liquidhours());
  }

  // string EvRule = 17;
  if (this->evrule().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_evrule());
  }

  // string UnderSymbol = 21;
  if (this->undersymbol().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_undersymbol());
  }

  // string UnderSecType = 22;
  if (this->undersectype().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_undersectype());
  }

  // string MarketRuleIds = 23;
  if (this->marketruleids().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_marketruleids());
  }

  // string RealExpirationDate = 24;
  if (this->realexpirationdate().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_realexpirationdate());
  }

  // string LastTradeTime = 25;
  if (this->lasttradetime().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lasttradetime());
  }

  // string Cusip = 27;
  if (this->cusip().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cusip());
  }

  // string Ratings = 28;
  if (this->ratings().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ratings());
  }

  // string DescAppend = 29;
  if (this->descappend().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_descappend());
  }

  // string BondType = 30;
  if (this->bondtype().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bondtype());
  }

  // string CouponType = 31;
  if (this->coupontype().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_coupontype());
  }

  // string Maturity = 36;
  if (this->maturity().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_maturity());
  }

  // string IssueDate = 37;
  if (this->issuedate().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_issuedate());
  }

  // string NextOptionDate = 38;
  if (this->nextoptiondate().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nextoptiondate());
  }

  // string NextOptionType = 39;
  if (this->nextoptiontype().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nextoptiontype());
  }

  // string Notes = 41;
  if (this->notes().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_notes());
  }

  // .Jde.Markets.Proto.Contract Contract = 2;
  if (this->has_contract()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // double MinTick = 4;
  if (!(this->mintick() <= 0 && this->mintick() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // uint32 UnderConId = 8;
  if (this->underconid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_underconid());
  }

  // int64 PriceMagnifier = 7;
  if (this->pricemagnifier() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_pricemagnifier());
  }

  // double EvMultiplier = 18;
  if (!(this->evmultiplier() <= 0 && this->evmultiplier() >= 0)) {
    total_size += 2 + 8;
  }

  // int32 MdSizeMultiplier = 19;
  if (this->mdsizemultiplier() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_mdsizemultiplier());
  }

  // int32 AggGroup = 20;
  if (this->agggroup() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_agggroup());
  }

  // double Coupon = 34;
  if (!(this->coupon() <= 0 && this->coupon() >= 0)) {
    total_size += 2 + 8;
  }

  // bool Callable = 32;
  if (this->callable() != 0) {
    total_size += 2 + 1;
  }

  // bool Putable = 33;
  if (this->putable() != 0) {
    total_size += 2 + 1;
  }

  // bool Convertible = 35;
  if (this->convertible() != 0) {
    total_size += 2 + 1;
  }

  // bool NextOptionPartial = 40;
  if (this->nextoptionpartial() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContractDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.ContractDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ContractDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ContractDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.ContractDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.ContractDetails)
    MergeFrom(*source);
  }
}

void ContractDetails::MergeFrom(const ContractDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.ContractDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  secidlist_.MergeFrom(from.secidlist_);
  if (from.marketname().size() > 0) {

    marketname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.marketname_);
  }
  if (from.ordertypes().size() > 0) {

    ordertypes_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ordertypes_);
  }
  if (from.validexchanges().size() > 0) {

    validexchanges_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.validexchanges_);
  }
  if (from.longname().size() > 0) {

    longname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.longname_);
  }
  if (from.contractmonth().size() > 0) {

    contractmonth_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.contractmonth_);
  }
  if (from.industry().size() > 0) {

    industry_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.industry_);
  }
  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.subcategory().size() > 0) {

    subcategory_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.subcategory_);
  }
  if (from.timezoneid().size() > 0) {

    timezoneid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.timezoneid_);
  }
  if (from.tradinghours().size() > 0) {

    tradinghours_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tradinghours_);
  }
  if (from.liquidhours().size() > 0) {

    liquidhours_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.liquidhours_);
  }
  if (from.evrule().size() > 0) {

    evrule_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.evrule_);
  }
  if (from.undersymbol().size() > 0) {

    undersymbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.undersymbol_);
  }
  if (from.undersectype().size() > 0) {

    undersectype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.undersectype_);
  }
  if (from.marketruleids().size() > 0) {

    marketruleids_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.marketruleids_);
  }
  if (from.realexpirationdate().size() > 0) {

    realexpirationdate_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.realexpirationdate_);
  }
  if (from.lasttradetime().size() > 0) {

    lasttradetime_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.lasttradetime_);
  }
  if (from.cusip().size() > 0) {

    cusip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cusip_);
  }
  if (from.ratings().size() > 0) {

    ratings_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ratings_);
  }
  if (from.descappend().size() > 0) {

    descappend_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.descappend_);
  }
  if (from.bondtype().size() > 0) {

    bondtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bondtype_);
  }
  if (from.coupontype().size() > 0) {

    coupontype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.coupontype_);
  }
  if (from.maturity().size() > 0) {

    maturity_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.maturity_);
  }
  if (from.issuedate().size() > 0) {

    issuedate_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.issuedate_);
  }
  if (from.nextoptiondate().size() > 0) {

    nextoptiondate_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nextoptiondate_);
  }
  if (from.nextoptiontype().size() > 0) {

    nextoptiontype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.nextoptiontype_);
  }
  if (from.notes().size() > 0) {

    notes_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.notes_);
  }
  if (from.has_contract()) {
    _internal_mutable_contract()->::Jde::Markets::Proto::Contract::MergeFrom(from._internal_contract());
  }
  if (!(from.mintick() <= 0 && from.mintick() >= 0)) {
    _internal_set_mintick(from._internal_mintick());
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.underconid() != 0) {
    _internal_set_underconid(from._internal_underconid());
  }
  if (from.pricemagnifier() != 0) {
    _internal_set_pricemagnifier(from._internal_pricemagnifier());
  }
  if (!(from.evmultiplier() <= 0 && from.evmultiplier() >= 0)) {
    _internal_set_evmultiplier(from._internal_evmultiplier());
  }
  if (from.mdsizemultiplier() != 0) {
    _internal_set_mdsizemultiplier(from._internal_mdsizemultiplier());
  }
  if (from.agggroup() != 0) {
    _internal_set_agggroup(from._internal_agggroup());
  }
  if (!(from.coupon() <= 0 && from.coupon() >= 0)) {
    _internal_set_coupon(from._internal_coupon());
  }
  if (from.callable() != 0) {
    _internal_set_callable(from._internal_callable());
  }
  if (from.putable() != 0) {
    _internal_set_putable(from._internal_putable());
  }
  if (from.convertible() != 0) {
    _internal_set_convertible(from._internal_convertible());
  }
  if (from.nextoptionpartial() != 0) {
    _internal_set_nextoptionpartial(from._internal_nextoptionpartial());
  }
}

void ContractDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.ContractDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContractDetails::CopyFrom(const ContractDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.ContractDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractDetails::IsInitialized() const {
  return true;
}

void ContractDetails::InternalSwap(ContractDetails* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  secidlist_.InternalSwap(&other->secidlist_);
  marketname_.Swap(&other->marketname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ordertypes_.Swap(&other->ordertypes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  validexchanges_.Swap(&other->validexchanges_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  longname_.Swap(&other->longname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contractmonth_.Swap(&other->contractmonth_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  industry_.Swap(&other->industry_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subcategory_.Swap(&other->subcategory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timezoneid_.Swap(&other->timezoneid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tradinghours_.Swap(&other->tradinghours_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  liquidhours_.Swap(&other->liquidhours_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  evrule_.Swap(&other->evrule_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  undersymbol_.Swap(&other->undersymbol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  undersectype_.Swap(&other->undersectype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  marketruleids_.Swap(&other->marketruleids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  realexpirationdate_.Swap(&other->realexpirationdate_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lasttradetime_.Swap(&other->lasttradetime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cusip_.Swap(&other->cusip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ratings_.Swap(&other->ratings_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  descappend_.Swap(&other->descappend_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bondtype_.Swap(&other->bondtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  coupontype_.Swap(&other->coupontype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  maturity_.Swap(&other->maturity_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  issuedate_.Swap(&other->issuedate_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nextoptiondate_.Swap(&other->nextoptiondate_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nextoptiontype_.Swap(&other->nextoptiontype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  notes_.Swap(&other->notes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(contract_, other->contract_);
  swap(mintick_, other->mintick_);
  swap(requestid_, other->requestid_);
  swap(underconid_, other->underconid_);
  swap(pricemagnifier_, other->pricemagnifier_);
  swap(evmultiplier_, other->evmultiplier_);
  swap(mdsizemultiplier_, other->mdsizemultiplier_);
  swap(agggroup_, other->agggroup_);
  swap(coupon_, other->coupon_);
  swap(callable_, other->callable_);
  swap(putable_, other->putable_);
  swap(convertible_, other->convertible_);
  swap(nextoptionpartial_, other->nextoptionpartial_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ContractDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Position::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Results::_Position_default_instance_._instance.get_mutable()->contract_ = const_cast< ::Jde::Markets::Proto::Contract*>(
      ::Jde::Markets::Proto::Contract::internal_default_instance());
}
class Position::_Internal {
 public:
  static const ::Jde::Markets::Proto::Contract& contract(const Position* msg);
};

const ::Jde::Markets::Proto::Contract&
Position::_Internal::contract(const Position* msg) {
  return *msg->contract_;
}
void Position::clear_contract() {
  if (GetArenaNoVirtual() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
}
Position::Position()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.Position)
}
Position::Position(const Position& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountnumber().empty()) {
    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  if (from._internal_has_contract()) {
    contract_ = new ::Jde::Markets::Proto::Contract(*from.contract_);
  } else {
    contract_ = nullptr;
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&avgcost_) -
    reinterpret_cast<char*>(&size_)) + sizeof(avgcost_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.Position)
}

void Position::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Position_results_2eproto.base);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avgcost_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(avgcost_));
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.Position)
  SharedDtor();
}

void Position::SharedDtor() {
  accountnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contract_;
}

void Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Position& Position::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Position_results_2eproto.base);
  return *internal_default_instance();
}


void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.Position)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountnumber_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avgcost_) -
      reinterpret_cast<char*>(&size_)) + sizeof(avgcost_));
  _internal_metadata_.Clear();
}

const char* Position::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string AccountNumber = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_accountnumber(), ptr, ctx, "Jde.Markets.Proto.Results.Position.AccountNumber");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Contract Contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double Size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double AvgCost = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          avgcost_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Position::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.Position)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string AccountNumber = 1;
  if (this->accountnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountnumber().data(), static_cast<int>(this->_internal_accountnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Position.AccountNumber");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_accountnumber(), target);
  }

  // .Jde.Markets.Proto.Contract Contract = 2;
  if (this->has_contract()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::contract(this), target, stream);
  }

  // double Size = 3;
  if (!(this->size() <= 0 && this->size() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_size(), target);
  }

  // double AvgCost = 4;
  if (!(this->avgcost() <= 0 && this->avgcost() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_avgcost(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.Position)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AccountNumber = 1;
  if (this->accountnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountnumber());
  }

  // .Jde.Markets.Proto.Contract Contract = 2;
  if (this->has_contract()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // double Size = 3;
  if (!(this->size() <= 0 && this->size() >= 0)) {
    total_size += 1 + 8;
  }

  // double AvgCost = 4;
  if (!(this->avgcost() <= 0 && this->avgcost() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Position::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Position>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.Position)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountnumber().size() > 0) {

    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  if (from.has_contract()) {
    _internal_mutable_contract()->::Jde::Markets::Proto::Contract::MergeFrom(from._internal_contract());
  }
  if (!(from.size() <= 0 && from.size() >= 0)) {
    _internal_set_size(from._internal_size());
  }
  if (!(from.avgcost() <= 0 && from.avgcost() >= 0)) {
    _internal_set_avgcost(from._internal_avgcost());
  }
}

void Position::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::InternalSwap(Position* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accountnumber_.Swap(&other->accountnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(contract_, other->contract_);
  swap(size_, other->size_);
  swap(avgcost_, other->avgcost_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Position::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountList::InitAsDefaultInstance() {
}
class AccountList::_Internal {
 public:
};

AccountList::AccountList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.AccountList)
}
AccountList::AccountList(const AccountList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      numbers_(from.numbers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.AccountList)
}

void AccountList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountList_results_2eproto.base);
}

AccountList::~AccountList() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.AccountList)
  SharedDtor();
}

void AccountList::SharedDtor() {
}

void AccountList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountList& AccountList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountList_results_2eproto.base);
  return *internal_default_instance();
}


void AccountList::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.AccountList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  numbers_.Clear();
  _internal_metadata_.Clear();
}

const char* AccountList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string Numbers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_numbers(), ptr, ctx, "Jde.Markets.Proto.Results.AccountList.Numbers");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountList::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.AccountList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string Numbers = 1;
  for (int i = 0, n = this->_internal_numbers_size(); i < n; i++) {
    const auto& s = this->_internal_numbers(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountList.Numbers");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.AccountList)
  return target;
}

size_t AccountList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.AccountList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Numbers = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(numbers_.size());
  for (int i = 0, n = numbers_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      numbers_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.AccountList)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.AccountList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.AccountList)
    MergeFrom(*source);
  }
}

void AccountList::MergeFrom(const AccountList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.AccountList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  numbers_.MergeFrom(from.numbers_);
}

void AccountList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.AccountList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountList::CopyFrom(const AccountList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.AccountList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountList::IsInitialized() const {
  return true;
}

void AccountList::InternalSwap(AccountList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  numbers_.InternalSwap(&other->numbers_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountUpdate::InitAsDefaultInstance() {
}
class AccountUpdate::_Internal {
 public:
};

AccountUpdate::AccountUpdate()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.AccountUpdate)
}
AccountUpdate::AccountUpdate(const AccountUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account().empty()) {
    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency().empty()) {
    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.AccountUpdate)
}

void AccountUpdate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountUpdate_results_2eproto.base);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AccountUpdate::~AccountUpdate() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.AccountUpdate)
  SharedDtor();
}

void AccountUpdate::SharedDtor() {
  account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AccountUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountUpdate& AccountUpdate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountUpdate_results_2eproto.base);
  return *internal_default_instance();
}


void AccountUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.AccountUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* AccountUpdate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string Account = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_account(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdate.Account");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Key = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_key(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdate.Key");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_value(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdate.Value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Currency = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_currency(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdate.Currency");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountUpdate::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.AccountUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Account = 2;
  if (this->account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdate.Account");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_account(), target);
  }

  // string Key = 4;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdate.Key");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_key(), target);
  }

  // string Value = 5;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdate.Value");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_value(), target);
  }

  // string Currency = 6;
  if (this->currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency().data(), static_cast<int>(this->_internal_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdate.Currency");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.AccountUpdate)
  return target;
}

size_t AccountUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.AccountUpdate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string Key = 4;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string Value = 5;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // string Currency = 6;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountUpdate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.AccountUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountUpdate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.AccountUpdate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.AccountUpdate)
    MergeFrom(*source);
  }
}

void AccountUpdate::MergeFrom(const AccountUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.AccountUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
}

void AccountUpdate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.AccountUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountUpdate::CopyFrom(const AccountUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.AccountUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountUpdate::IsInitialized() const {
  return true;
}

void AccountUpdate::InternalSwap(AccountUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_.Swap(&other->currency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountUpdate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AccountUpdateMulti::InitAsDefaultInstance() {
}
class AccountUpdateMulti::_Internal {
 public:
};

AccountUpdateMulti::AccountUpdateMulti()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.AccountUpdateMulti)
}
AccountUpdateMulti::AccountUpdateMulti(const AccountUpdateMulti& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_account().empty()) {
    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  modelcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modelcode().empty()) {
    modelcode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.modelcode_);
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currency().empty()) {
    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.AccountUpdateMulti)
}

void AccountUpdateMulti::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccountUpdateMulti_results_2eproto.base);
  account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
}

AccountUpdateMulti::~AccountUpdateMulti() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.AccountUpdateMulti)
  SharedDtor();
}

void AccountUpdateMulti::SharedDtor() {
  account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AccountUpdateMulti::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccountUpdateMulti& AccountUpdateMulti::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccountUpdateMulti_results_2eproto.base);
  return *internal_default_instance();
}


void AccountUpdateMulti::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.AccountUpdateMulti)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelcode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currency_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0;
  _internal_metadata_.Clear();
}

const char* AccountUpdateMulti::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Account = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_account(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdateMulti.Account");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ModelCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_modelcode(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdateMulti.ModelCode");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Key = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_key(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdateMulti.Key");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_value(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdateMulti.Value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Currency = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_currency(), ptr, ctx, "Jde.Markets.Proto.Results.AccountUpdateMulti.Currency");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccountUpdateMulti::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.AccountUpdateMulti)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // string Account = 2;
  if (this->account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_account().data(), static_cast<int>(this->_internal_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdateMulti.Account");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_account(), target);
  }

  // string ModelCode = 3;
  if (this->modelcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modelcode().data(), static_cast<int>(this->_internal_modelcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdateMulti.ModelCode");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_modelcode(), target);
  }

  // string Key = 4;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdateMulti.Key");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_key(), target);
  }

  // string Value = 5;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdateMulti.Value");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_value(), target);
  }

  // string Currency = 6;
  if (this->currency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currency().data(), static_cast<int>(this->_internal_currency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.AccountUpdateMulti.Currency");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.AccountUpdateMulti)
  return target;
}

size_t AccountUpdateMulti::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.AccountUpdateMulti)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_account());
  }

  // string ModelCode = 3;
  if (this->modelcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modelcode());
  }

  // string Key = 4;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string Value = 5;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // string Currency = 6;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currency());
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccountUpdateMulti::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.AccountUpdateMulti)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountUpdateMulti* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccountUpdateMulti>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.AccountUpdateMulti)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.AccountUpdateMulti)
    MergeFrom(*source);
  }
}

void AccountUpdateMulti::MergeFrom(const AccountUpdateMulti& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.AccountUpdateMulti)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.modelcode().size() > 0) {

    modelcode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.modelcode_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
}

void AccountUpdateMulti::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.AccountUpdateMulti)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountUpdateMulti::CopyFrom(const AccountUpdateMulti& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.AccountUpdateMulti)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountUpdateMulti::IsInitialized() const {
  return true;
}

void AccountUpdateMulti::InternalSwap(AccountUpdateMulti* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  account_.Swap(&other->account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  modelcode_.Swap(&other->modelcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  currency_.Swap(&other->currency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requestid_, other->requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccountUpdateMulti::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Bar::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Results::_Bar_default_instance_._instance.get_mutable()->time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Bar::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& time(const Bar* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Bar::_Internal::time(const Bar* msg) {
  return *msg->time_;
}
void Bar::clear_time() {
  if (GetArenaNoVirtual() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
}
Bar::Bar()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.Bar)
}
Bar::Bar(const Bar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_time()) {
    time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  ::memcpy(&high_, &from.high_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&high_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.Bar)
}

void Bar::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Bar_results_2eproto.base);
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&time_)) + sizeof(count_));
}

Bar::~Bar() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.Bar)
  SharedDtor();
}

void Bar::SharedDtor() {
  if (this != internal_default_instance()) delete time_;
}

void Bar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Bar& Bar::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Bar_results_2eproto.base);
  return *internal_default_instance();
}


void Bar::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.Bar)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && time_ != nullptr) {
    delete time_;
  }
  time_ = nullptr;
  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&high_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

const char* Bar::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp Time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double High = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          high_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Low = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          low_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Open = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          open_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Close = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          close_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Wap = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          wap_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // uint64 Volume = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          volume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Count = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Bar::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.Bar)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp Time = 1;
  if (this->has_time()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::time(this), target, stream);
  }

  // double High = 2;
  if (!(this->high() <= 0 && this->high() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_high(), target);
  }

  // double Low = 3;
  if (!(this->low() <= 0 && this->low() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_low(), target);
  }

  // double Open = 4;
  if (!(this->open() <= 0 && this->open() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_open(), target);
  }

  // double Close = 5;
  if (!(this->close() <= 0 && this->close() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_close(), target);
  }

  // double Wap = 6;
  if (!(this->wap() <= 0 && this->wap() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_wap(), target);
  }

  // uint64 Volume = 7;
  if (this->volume() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_volume(), target);
  }

  // int32 Count = 8;
  if (this->count() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.Bar)
  return target;
}

size_t Bar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.Bar)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp Time = 1;
  if (this->has_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // double High = 2;
  if (!(this->high() <= 0 && this->high() >= 0)) {
    total_size += 1 + 8;
  }

  // double Low = 3;
  if (!(this->low() <= 0 && this->low() >= 0)) {
    total_size += 1 + 8;
  }

  // double Open = 4;
  if (!(this->open() <= 0 && this->open() >= 0)) {
    total_size += 1 + 8;
  }

  // double Close = 5;
  if (!(this->close() <= 0 && this->close() >= 0)) {
    total_size += 1 + 8;
  }

  // double Wap = 6;
  if (!(this->wap() <= 0 && this->wap() >= 0)) {
    total_size += 1 + 8;
  }

  // uint64 Volume = 7;
  if (this->volume() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_volume());
  }

  // int32 Count = 8;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bar::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.Bar)
  GOOGLE_DCHECK_NE(&from, this);
  const Bar* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Bar>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.Bar)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.Bar)
    MergeFrom(*source);
  }
}

void Bar::MergeFrom(const Bar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.Bar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_time()) {
    _internal_mutable_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_time());
  }
  if (!(from.high() <= 0 && from.high() >= 0)) {
    _internal_set_high(from._internal_high());
  }
  if (!(from.low() <= 0 && from.low() >= 0)) {
    _internal_set_low(from._internal_low());
  }
  if (!(from.open() <= 0 && from.open() >= 0)) {
    _internal_set_open(from._internal_open());
  }
  if (!(from.close() <= 0 && from.close() >= 0)) {
    _internal_set_close(from._internal_close());
  }
  if (!(from.wap() <= 0 && from.wap() >= 0)) {
    _internal_set_wap(from._internal_wap());
  }
  if (from.volume() != 0) {
    _internal_set_volume(from._internal_volume());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void Bar::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.Bar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bar::CopyFrom(const Bar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.Bar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bar::IsInitialized() const {
  return true;
}

void Bar::InternalSwap(Bar* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(time_, other->time_);
  swap(high_, other->high_);
  swap(low_, other->low_);
  swap(open_, other->open_);
  swap(close_, other->close_);
  swap(wap_, other->wap_);
  swap(volume_, other->volume_);
  swap(count_, other->count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Bar::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HistoricalData::InitAsDefaultInstance() {
}
class HistoricalData::_Internal {
 public:
};

HistoricalData::HistoricalData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.HistoricalData)
}
HistoricalData::HistoricalData(const HistoricalData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      bars_(from.bars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.HistoricalData)
}

void HistoricalData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HistoricalData_results_2eproto.base);
  requestid_ = 0;
}

HistoricalData::~HistoricalData() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.HistoricalData)
  SharedDtor();
}

void HistoricalData::SharedDtor() {
}

void HistoricalData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HistoricalData& HistoricalData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HistoricalData_results_2eproto.base);
  return *internal_default_instance();
}


void HistoricalData::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.HistoricalData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bars_.Clear();
  requestid_ = 0;
  _internal_metadata_.Clear();
}

const char* HistoricalData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.Results.Bar Bars = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bars(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HistoricalData::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.HistoricalData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // repeated .Jde.Markets.Proto.Results.Bar Bars = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bars_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_bars(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.HistoricalData)
  return target;
}

size_t HistoricalData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.HistoricalData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Results.Bar Bars = 2;
  total_size += 1UL * this->_internal_bars_size();
  for (const auto& msg : this->bars_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HistoricalData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.HistoricalData)
  GOOGLE_DCHECK_NE(&from, this);
  const HistoricalData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HistoricalData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.HistoricalData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.HistoricalData)
    MergeFrom(*source);
  }
}

void HistoricalData::MergeFrom(const HistoricalData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.HistoricalData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bars_.MergeFrom(from.bars_);
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
}

void HistoricalData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.HistoricalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HistoricalData::CopyFrom(const HistoricalData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.HistoricalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoricalData::IsInitialized() const {
  return true;
}

void HistoricalData::InternalSwap(HistoricalData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bars_.InternalSwap(&other->bars_);
  swap(requestid_, other->requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HistoricalData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PortfolioUpdate::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Results::_PortfolioUpdate_default_instance_._instance.get_mutable()->contract_ = const_cast< ::Jde::Markets::Proto::Contract*>(
      ::Jde::Markets::Proto::Contract::internal_default_instance());
}
class PortfolioUpdate::_Internal {
 public:
  static const ::Jde::Markets::Proto::Contract& contract(const PortfolioUpdate* msg);
};

const ::Jde::Markets::Proto::Contract&
PortfolioUpdate::_Internal::contract(const PortfolioUpdate* msg) {
  return *msg->contract_;
}
void PortfolioUpdate::clear_contract() {
  if (GetArenaNoVirtual() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
}
PortfolioUpdate::PortfolioUpdate()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.PortfolioUpdate)
}
PortfolioUpdate::PortfolioUpdate(const PortfolioUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountnumber().empty()) {
    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  if (from._internal_has_contract()) {
    contract_ = new ::Jde::Markets::Proto::Contract(*from.contract_);
  } else {
    contract_ = nullptr;
  }
  ::memcpy(&position_, &from.position_,
    static_cast<size_t>(reinterpret_cast<char*>(&realizedpnl_) -
    reinterpret_cast<char*>(&position_)) + sizeof(realizedpnl_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.PortfolioUpdate)
}

void PortfolioUpdate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PortfolioUpdate_results_2eproto.base);
  accountnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&contract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&realizedpnl_) -
      reinterpret_cast<char*>(&contract_)) + sizeof(realizedpnl_));
}

PortfolioUpdate::~PortfolioUpdate() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.PortfolioUpdate)
  SharedDtor();
}

void PortfolioUpdate::SharedDtor() {
  accountnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contract_;
}

void PortfolioUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PortfolioUpdate& PortfolioUpdate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PortfolioUpdate_results_2eproto.base);
  return *internal_default_instance();
}


void PortfolioUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.PortfolioUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountnumber_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && contract_ != nullptr) {
    delete contract_;
  }
  contract_ = nullptr;
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&realizedpnl_) -
      reinterpret_cast<char*>(&position_)) + sizeof(realizedpnl_));
  _internal_metadata_.Clear();
}

const char* PortfolioUpdate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Markets.Proto.Contract Contract = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double Position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          position_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double MarketPrice = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          marketprice_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double MarketValue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          marketvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double AverageCost = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          averagecost_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double UnrealizedPnl = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          unrealizedpnl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double RealizedPnl = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          realizedpnl_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string AccountNumber = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_accountnumber(), ptr, ctx, "Jde.Markets.Proto.Results.PortfolioUpdate.AccountNumber");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PortfolioUpdate::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.PortfolioUpdate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Contract Contract = 1;
  if (this->has_contract()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::contract(this), target, stream);
  }

  // double Position = 2;
  if (!(this->position() <= 0 && this->position() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_position(), target);
  }

  // double MarketPrice = 3;
  if (!(this->marketprice() <= 0 && this->marketprice() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_marketprice(), target);
  }

  // double MarketValue = 4;
  if (!(this->marketvalue() <= 0 && this->marketvalue() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_marketvalue(), target);
  }

  // double AverageCost = 5;
  if (!(this->averagecost() <= 0 && this->averagecost() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_averagecost(), target);
  }

  // double UnrealizedPnl = 6;
  if (!(this->unrealizedpnl() <= 0 && this->unrealizedpnl() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_unrealizedpnl(), target);
  }

  // double RealizedPnl = 7;
  if (!(this->realizedpnl() <= 0 && this->realizedpnl() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_realizedpnl(), target);
  }

  // string AccountNumber = 8;
  if (this->accountnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountnumber().data(), static_cast<int>(this->_internal_accountnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.PortfolioUpdate.AccountNumber");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_accountnumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.PortfolioUpdate)
  return target;
}

size_t PortfolioUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.PortfolioUpdate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AccountNumber = 8;
  if (this->accountnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountnumber());
  }

  // .Jde.Markets.Proto.Contract Contract = 1;
  if (this->has_contract()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contract_);
  }

  // double Position = 2;
  if (!(this->position() <= 0 && this->position() >= 0)) {
    total_size += 1 + 8;
  }

  // double MarketPrice = 3;
  if (!(this->marketprice() <= 0 && this->marketprice() >= 0)) {
    total_size += 1 + 8;
  }

  // double MarketValue = 4;
  if (!(this->marketvalue() <= 0 && this->marketvalue() >= 0)) {
    total_size += 1 + 8;
  }

  // double AverageCost = 5;
  if (!(this->averagecost() <= 0 && this->averagecost() >= 0)) {
    total_size += 1 + 8;
  }

  // double UnrealizedPnl = 6;
  if (!(this->unrealizedpnl() <= 0 && this->unrealizedpnl() >= 0)) {
    total_size += 1 + 8;
  }

  // double RealizedPnl = 7;
  if (!(this->realizedpnl() <= 0 && this->realizedpnl() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PortfolioUpdate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.PortfolioUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const PortfolioUpdate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PortfolioUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.PortfolioUpdate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.PortfolioUpdate)
    MergeFrom(*source);
  }
}

void PortfolioUpdate::MergeFrom(const PortfolioUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.PortfolioUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountnumber().size() > 0) {

    accountnumber_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountnumber_);
  }
  if (from.has_contract()) {
    _internal_mutable_contract()->::Jde::Markets::Proto::Contract::MergeFrom(from._internal_contract());
  }
  if (!(from.position() <= 0 && from.position() >= 0)) {
    _internal_set_position(from._internal_position());
  }
  if (!(from.marketprice() <= 0 && from.marketprice() >= 0)) {
    _internal_set_marketprice(from._internal_marketprice());
  }
  if (!(from.marketvalue() <= 0 && from.marketvalue() >= 0)) {
    _internal_set_marketvalue(from._internal_marketvalue());
  }
  if (!(from.averagecost() <= 0 && from.averagecost() >= 0)) {
    _internal_set_averagecost(from._internal_averagecost());
  }
  if (!(from.unrealizedpnl() <= 0 && from.unrealizedpnl() >= 0)) {
    _internal_set_unrealizedpnl(from._internal_unrealizedpnl());
  }
  if (!(from.realizedpnl() <= 0 && from.realizedpnl() >= 0)) {
    _internal_set_realizedpnl(from._internal_realizedpnl());
  }
}

void PortfolioUpdate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.PortfolioUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PortfolioUpdate::CopyFrom(const PortfolioUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.PortfolioUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PortfolioUpdate::IsInitialized() const {
  return true;
}

void PortfolioUpdate::InternalSwap(PortfolioUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accountnumber_.Swap(&other->accountnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(contract_, other->contract_);
  swap(position_, other->position_);
  swap(marketprice_, other->marketprice_);
  swap(marketvalue_, other->marketvalue_);
  swap(averagecost_, other->averagecost_);
  swap(unrealizedpnl_, other->unrealizedpnl_);
  swap(realizedpnl_, other->realizedpnl_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PortfolioUpdate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Order::InitAsDefaultInstance() {
}
class Order::_Internal {
 public:
};

Order::Order()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.Order)
}
Order::Order(const Order& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_symbol().empty()) {
    symbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  buysell_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buysell().empty()) {
    buysell_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.buysell_);
  }
  ordertype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ordertype().empty()) {
    ordertype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ordertype_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&commission_) -
    reinterpret_cast<char*>(&id_)) + sizeof(commission_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.Order)
}

void Order::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Order_results_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buysell_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commission_) -
      reinterpret_cast<char*>(&id_)) + sizeof(commission_));
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.Order)
  SharedDtor();
}

void Order::SharedDtor() {
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buysell_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Order::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Order& Order::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Order_results_2eproto.base);
  return *internal_default_instance();
}


void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.Order)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buysell_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commission_) -
      reinterpret_cast<char*>(&id_)) + sizeof(commission_));
  _internal_metadata_.Clear();
}

const char* Order::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string AccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_accountid(), ptr, ctx, "Jde.Markets.Proto.Results.Order.AccountId");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Symbol = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_symbol(), ptr, ctx, "Jde.Markets.Proto.Results.Order.Symbol");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Conid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          conid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Date = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BuySell = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_buysell(), ptr, ctx, "Jde.Markets.Proto.Results.Order.BuySell");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double Quantity = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Price = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Commission = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          commission_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string OrderType = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_ordertype(), ptr, ctx, "Jde.Markets.Proto.Results.Order.OrderType");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 OrderTime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ordertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Order::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.Order)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string AccountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Order.AccountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  // string Symbol = 3;
  if (this->symbol().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_symbol().data(), static_cast<int>(this->_internal_symbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Order.Symbol");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_symbol(), target);
  }

  // uint32 Conid = 4;
  if (this->conid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_conid(), target);
  }

  // uint32 Date = 5;
  if (this->date() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_date(), target);
  }

  // string BuySell = 6;
  if (this->buysell().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buysell().data(), static_cast<int>(this->_internal_buysell().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Order.BuySell");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_buysell(), target);
  }

  // double Quantity = 7;
  if (!(this->quantity() <= 0 && this->quantity() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_quantity(), target);
  }

  // double Price = 8;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_price(), target);
  }

  // double Commission = 9;
  if (!(this->commission() <= 0 && this->commission() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_commission(), target);
  }

  // string OrderType = 10;
  if (this->ordertype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ordertype().data(), static_cast<int>(this->_internal_ordertype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Order.OrderType");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_ordertype(), target);
  }

  // uint32 OrderTime = 11;
  if (this->ordertime() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_ordertime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.Order)
  return target;
}

size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.Order)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AccountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string Symbol = 3;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_symbol());
  }

  // string BuySell = 6;
  if (this->buysell().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buysell());
  }

  // string OrderType = 10;
  if (this->ordertype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ordertype());
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // uint32 Conid = 4;
  if (this->conid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_conid());
  }

  // double Quantity = 7;
  if (!(this->quantity() <= 0 && this->quantity() >= 0)) {
    total_size += 1 + 8;
  }

  // double Price = 8;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    total_size += 1 + 8;
  }

  // uint32 Date = 5;
  if (this->date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_date());
  }

  // uint32 OrderTime = 11;
  if (this->ordertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ordertime());
  }

  // double Commission = 9;
  if (!(this->commission() <= 0 && this->commission() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Order::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Order>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.Order)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {

    accountid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.buysell().size() > 0) {

    buysell_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.buysell_);
  }
  if (from.ordertype().size() > 0) {

    ordertype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ordertype_);
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.conid() != 0) {
    _internal_set_conid(from._internal_conid());
  }
  if (!(from.quantity() <= 0 && from.quantity() >= 0)) {
    _internal_set_quantity(from._internal_quantity());
  }
  if (!(from.price() <= 0 && from.price() >= 0)) {
    _internal_set_price(from._internal_price());
  }
  if (from.date() != 0) {
    _internal_set_date(from._internal_date());
  }
  if (from.ordertime() != 0) {
    _internal_set_ordertime(from._internal_ordertime());
  }
  if (!(from.commission() <= 0 && from.commission() >= 0)) {
    _internal_set_commission(from._internal_commission());
  }
}

void Order::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  return true;
}

void Order::InternalSwap(Order* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  buysell_.Swap(&other->buysell_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ordertype_.Swap(&other->ordertype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(conid_, other->conid_);
  swap(quantity_, other->quantity_);
  swap(price_, other->price_);
  swap(date_, other->date_);
  swap(ordertime_, other->ordertime_);
  swap(commission_, other->commission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Order::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Trade::InitAsDefaultInstance() {
}
class Trade::_Internal {
 public:
};

Trade::Trade()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.Trade)
}
Trade::Trade(const Trade& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accountid().empty()) {
    accountid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_symbol().empty()) {
    symbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  buysell_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buysell().empty()) {
    buysell_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.buysell_);
  }
  ordertype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ordertype().empty()) {
    ordertype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ordertype_);
  }
  execid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_execid().empty()) {
    execid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.execid_);
  }
  ::memcpy(&orderid_, &from.orderid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isapi_) -
    reinterpret_cast<char*>(&orderid_)) + sizeof(isapi_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.Trade)
}

void Trade::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Trade_results_2eproto.base);
  accountid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buysell_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  execid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&orderid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isapi_) -
      reinterpret_cast<char*>(&orderid_)) + sizeof(isapi_));
}

Trade::~Trade() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.Trade)
  SharedDtor();
}

void Trade::SharedDtor() {
  accountid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buysell_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  execid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Trade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Trade& Trade::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Trade_results_2eproto.base);
  return *internal_default_instance();
}


void Trade::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.Trade)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  symbol_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buysell_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ordertype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  execid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&orderid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isapi_) -
      reinterpret_cast<char*>(&orderid_)) + sizeof(isapi_));
  _internal_metadata_.Clear();
}

const char* Trade::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 OrderId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          orderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string AccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_accountid(), ptr, ctx, "Jde.Markets.Proto.Results.Trade.AccountId");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Symbol = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_symbol(), ptr, ctx, "Jde.Markets.Proto.Results.Trade.Symbol");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Conid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          conid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Date = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          date_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string BuySell = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_buysell(), ptr, ctx, "Jde.Markets.Proto.Results.Trade.BuySell");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double Quantity = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Price = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Commission = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          commission_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string OrderType = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_ordertype(), ptr, ctx, "Jde.Markets.Proto.Results.Trade.OrderType");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 OrderTime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ordertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Id = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ExecId = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_execid(), ptr, ctx, "Jde.Markets.Proto.Results.Trade.ExecId");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool IsApi = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          isapi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Trade::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.Trade)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 OrderId = 1;
  if (this->orderid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_orderid(), target);
  }

  // string AccountId = 2;
  if (this->accountid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accountid().data(), static_cast<int>(this->_internal_accountid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Trade.AccountId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accountid(), target);
  }

  // string Symbol = 3;
  if (this->symbol().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_symbol().data(), static_cast<int>(this->_internal_symbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Trade.Symbol");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_symbol(), target);
  }

  // uint32 Conid = 4;
  if (this->conid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_conid(), target);
  }

  // uint32 Date = 5;
  if (this->date() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_date(), target);
  }

  // string BuySell = 6;
  if (this->buysell().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buysell().data(), static_cast<int>(this->_internal_buysell().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Trade.BuySell");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_buysell(), target);
  }

  // double Quantity = 7;
  if (!(this->quantity() <= 0 && this->quantity() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_quantity(), target);
  }

  // double Price = 8;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_price(), target);
  }

  // double Commission = 9;
  if (!(this->commission() <= 0 && this->commission() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_commission(), target);
  }

  // string OrderType = 10;
  if (this->ordertype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ordertype().data(), static_cast<int>(this->_internal_ordertype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Trade.OrderType");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_ordertype(), target);
  }

  // uint32 OrderTime = 11;
  if (this->ordertime() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_ordertime(), target);
  }

  // uint32 Id = 12;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_id(), target);
  }

  // string ExecId = 13;
  if (this->execid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_execid().data(), static_cast<int>(this->_internal_execid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Trade.ExecId");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_execid(), target);
  }

  // bool IsApi = 14;
  if (this->isapi() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_isapi(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.Trade)
  return target;
}

size_t Trade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.Trade)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AccountId = 2;
  if (this->accountid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accountid());
  }

  // string Symbol = 3;
  if (this->symbol().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_symbol());
  }

  // string BuySell = 6;
  if (this->buysell().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buysell());
  }

  // string OrderType = 10;
  if (this->ordertype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ordertype());
  }

  // string ExecId = 13;
  if (this->execid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_execid());
  }

  // uint32 OrderId = 1;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_orderid());
  }

  // uint32 Conid = 4;
  if (this->conid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_conid());
  }

  // double Quantity = 7;
  if (!(this->quantity() <= 0 && this->quantity() >= 0)) {
    total_size += 1 + 8;
  }

  // double Price = 8;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    total_size += 1 + 8;
  }

  // uint32 Date = 5;
  if (this->date() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_date());
  }

  // uint32 OrderTime = 11;
  if (this->ordertime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ordertime());
  }

  // double Commission = 9;
  if (!(this->commission() <= 0 && this->commission() >= 0)) {
    total_size += 1 + 8;
  }

  // uint32 Id = 12;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // bool IsApi = 14;
  if (this->isapi() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trade::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.Trade)
  GOOGLE_DCHECK_NE(&from, this);
  const Trade* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Trade>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.Trade)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.Trade)
    MergeFrom(*source);
  }
}

void Trade::MergeFrom(const Trade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.Trade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid().size() > 0) {

    accountid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.accountid_);
  }
  if (from.symbol().size() > 0) {

    symbol_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.buysell().size() > 0) {

    buysell_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.buysell_);
  }
  if (from.ordertype().size() > 0) {

    ordertype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ordertype_);
  }
  if (from.execid().size() > 0) {

    execid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.execid_);
  }
  if (from.orderid() != 0) {
    _internal_set_orderid(from._internal_orderid());
  }
  if (from.conid() != 0) {
    _internal_set_conid(from._internal_conid());
  }
  if (!(from.quantity() <= 0 && from.quantity() >= 0)) {
    _internal_set_quantity(from._internal_quantity());
  }
  if (!(from.price() <= 0 && from.price() >= 0)) {
    _internal_set_price(from._internal_price());
  }
  if (from.date() != 0) {
    _internal_set_date(from._internal_date());
  }
  if (from.ordertime() != 0) {
    _internal_set_ordertime(from._internal_ordertime());
  }
  if (!(from.commission() <= 0 && from.commission() >= 0)) {
    _internal_set_commission(from._internal_commission());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.isapi() != 0) {
    _internal_set_isapi(from._internal_isapi());
  }
}

void Trade::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.Trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trade::CopyFrom(const Trade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.Trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trade::IsInitialized() const {
  return true;
}

void Trade::InternalSwap(Trade* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  accountid_.Swap(&other->accountid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  symbol_.Swap(&other->symbol_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  buysell_.Swap(&other->buysell_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ordertype_.Swap(&other->ordertype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  execid_.Swap(&other->execid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(orderid_, other->orderid_);
  swap(conid_, other->conid_);
  swap(quantity_, other->quantity_);
  swap(price_, other->price_);
  swap(date_, other->date_);
  swap(ordertime_, other->ordertime_);
  swap(commission_, other->commission_);
  swap(id_, other->id_);
  swap(isapi_, other->isapi_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Trade::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Flex::InitAsDefaultInstance() {
}
class Flex::_Internal {
 public:
};

Flex::Flex()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.Flex)
}
Flex::Flex(const Flex& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      orders_(from.orders_),
      trades_(from.trades_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.Flex)
}

void Flex::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Flex_results_2eproto.base);
  requestid_ = 0u;
}

Flex::~Flex() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.Flex)
  SharedDtor();
}

void Flex::SharedDtor() {
}

void Flex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Flex& Flex::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Flex_results_2eproto.base);
  return *internal_default_instance();
}


void Flex::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.Flex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  trades_.Clear();
  requestid_ = 0u;
  _internal_metadata_.Clear();
}

const char* Flex::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.Results.Order Orders = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_orders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.Results.Trade Trades = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_trades(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Flex::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.Flex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requestid(), target);
  }

  // repeated .Jde.Markets.Proto.Results.Order Orders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_orders_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_orders(i), target, stream);
  }

  // repeated .Jde.Markets.Proto.Results.Trade Trades = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_trades_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(3, this->_internal_trades(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.Flex)
  return target;
}

size_t Flex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.Flex)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Results.Order Orders = 2;
  total_size += 1UL * this->_internal_orders_size();
  for (const auto& msg : this->orders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Jde.Markets.Proto.Results.Trade Trades = 3;
  total_size += 1UL * this->_internal_trades_size();
  for (const auto& msg : this->trades_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_requestid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Flex::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.Flex)
  GOOGLE_DCHECK_NE(&from, this);
  const Flex* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Flex>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.Flex)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.Flex)
    MergeFrom(*source);
  }
}

void Flex::MergeFrom(const Flex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.Flex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
  trades_.MergeFrom(from.trades_);
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
}

void Flex::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.Flex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Flex::CopyFrom(const Flex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.Flex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Flex::IsInitialized() const {
  return true;
}

void Flex::InternalSwap(Flex* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  orders_.InternalSwap(&other->orders_);
  trades_.InternalSwap(&other->trades_);
  swap(requestid_, other->requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Flex::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Error::InitAsDefaultInstance() {
}
class Error::_Internal {
 public:
};

Error::Error()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.Error)
}
Error::Error(const Error& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.Error)
}

void Error::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Error_results_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(code_));
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Error& Error::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Error_results_2eproto.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.Error)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(code_));
  _internal_metadata_.Clear();
}

const char* Error::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_message(), ptr, ctx, "Jde.Markets.Proto.Results.Error.Message");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Error::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.Error)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // int32 Code = 2;
  if (this->code() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string Message = 3;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.Error.Message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.Error)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // int32 Code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Error>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.Error)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void Error::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::InternalSwap(Error* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requestid_, other->requestid_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Option::InitAsDefaultInstance() {
}
class Option::_Internal {
 public:
};

Option::Option()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.Option)
}
Option::Option(const Option& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&contractid_, &from.contractid_,
    static_cast<size_t>(reinterpret_cast<char*>(&previousprice_) -
    reinterpret_cast<char*>(&contractid_)) + sizeof(previousprice_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.Option)
}

void Option::SharedCtor() {
  ::memset(&contractid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&previousprice_) -
      reinterpret_cast<char*>(&contractid_)) + sizeof(previousprice_));
}

Option::~Option() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.Option)
  SharedDtor();
}

void Option::SharedDtor() {
}

void Option::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Option& Option::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Option_results_2eproto.base);
  return *internal_default_instance();
}


void Option::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.Option)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&contractid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&previousprice_) -
      reinterpret_cast<char*>(&contractid_)) + sizeof(previousprice_));
  _internal_metadata_.Clear();
}

const char* Option::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 ContractId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          contractid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float Strike = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          strike_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Bid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          bid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Ask = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          ask_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Last = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          last_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float Volume = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          volume_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // uint32 OpenInterest = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          openinterest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 OIChange = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          oichange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float PreviousPrice = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          previousprice_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Option::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.Option)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ContractId = 1;
  if (this->contractid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_contractid(), target);
  }

  // float Strike = 2;
  if (!(this->strike() <= 0 && this->strike() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_strike(), target);
  }

  // float Bid = 3;
  if (!(this->bid() <= 0 && this->bid() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_bid(), target);
  }

  // float Ask = 4;
  if (!(this->ask() <= 0 && this->ask() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_ask(), target);
  }

  // float Last = 5;
  if (!(this->last() <= 0 && this->last() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_last(), target);
  }

  // float Volume = 6;
  if (!(this->volume() <= 0 && this->volume() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_volume(), target);
  }

  // uint32 OpenInterest = 7;
  if (this->openinterest() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_openinterest(), target);
  }

  // int32 OIChange = 8;
  if (this->oichange() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_oichange(), target);
  }

  // float PreviousPrice = 9;
  if (!(this->previousprice() <= 0 && this->previousprice() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(9, this->_internal_previousprice(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.Option)
  return target;
}

size_t Option::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.Option)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 ContractId = 1;
  if (this->contractid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_contractid());
  }

  // float Strike = 2;
  if (!(this->strike() <= 0 && this->strike() >= 0)) {
    total_size += 1 + 4;
  }

  // float Bid = 3;
  if (!(this->bid() <= 0 && this->bid() >= 0)) {
    total_size += 1 + 4;
  }

  // float Ask = 4;
  if (!(this->ask() <= 0 && this->ask() >= 0)) {
    total_size += 1 + 4;
  }

  // float Last = 5;
  if (!(this->last() <= 0 && this->last() >= 0)) {
    total_size += 1 + 4;
  }

  // float Volume = 6;
  if (!(this->volume() <= 0 && this->volume() >= 0)) {
    total_size += 1 + 4;
  }

  // uint32 OpenInterest = 7;
  if (this->openinterest() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_openinterest());
  }

  // int32 OIChange = 8;
  if (this->oichange() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_oichange());
  }

  // float PreviousPrice = 9;
  if (!(this->previousprice() <= 0 && this->previousprice() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Option::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.Option)
  GOOGLE_DCHECK_NE(&from, this);
  const Option* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Option>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.Option)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.Option)
    MergeFrom(*source);
  }
}

void Option::MergeFrom(const Option& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.Option)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.contractid() != 0) {
    _internal_set_contractid(from._internal_contractid());
  }
  if (!(from.strike() <= 0 && from.strike() >= 0)) {
    _internal_set_strike(from._internal_strike());
  }
  if (!(from.bid() <= 0 && from.bid() >= 0)) {
    _internal_set_bid(from._internal_bid());
  }
  if (!(from.ask() <= 0 && from.ask() >= 0)) {
    _internal_set_ask(from._internal_ask());
  }
  if (!(from.last() <= 0 && from.last() >= 0)) {
    _internal_set_last(from._internal_last());
  }
  if (!(from.volume() <= 0 && from.volume() >= 0)) {
    _internal_set_volume(from._internal_volume());
  }
  if (from.openinterest() != 0) {
    _internal_set_openinterest(from._internal_openinterest());
  }
  if (from.oichange() != 0) {
    _internal_set_oichange(from._internal_oichange());
  }
  if (!(from.previousprice() <= 0 && from.previousprice() >= 0)) {
    _internal_set_previousprice(from._internal_previousprice());
  }
}

void Option::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.Option)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Option::CopyFrom(const Option& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.Option)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Option::IsInitialized() const {
  return true;
}

void Option::InternalSwap(Option* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(contractid_, other->contractid_);
  swap(strike_, other->strike_);
  swap(bid_, other->bid_);
  swap(ask_, other->ask_);
  swap(last_, other->last_);
  swap(volume_, other->volume_);
  swap(openinterest_, other->openinterest_);
  swap(oichange_, other->oichange_);
  swap(previousprice_, other->previousprice_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Option::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OptionDay::InitAsDefaultInstance() {
}
class OptionDay::_Internal {
 public:
};

OptionDay::OptionDay()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.OptionDay)
}
OptionDay::OptionDay(const OptionDay& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&iscall_, &from.iscall_,
    static_cast<size_t>(reinterpret_cast<char*>(&expirationdays_) -
    reinterpret_cast<char*>(&iscall_)) + sizeof(expirationdays_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.OptionDay)
}

void OptionDay::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OptionDay_results_2eproto.base);
  ::memset(&iscall_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expirationdays_) -
      reinterpret_cast<char*>(&iscall_)) + sizeof(expirationdays_));
}

OptionDay::~OptionDay() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.OptionDay)
  SharedDtor();
}

void OptionDay::SharedDtor() {
}

void OptionDay::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OptionDay& OptionDay::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OptionDay_results_2eproto.base);
  return *internal_default_instance();
}


void OptionDay::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.OptionDay)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  ::memset(&iscall_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expirationdays_) -
      reinterpret_cast<char*>(&iscall_)) + sizeof(expirationdays_));
  _internal_metadata_.Clear();
}

const char* OptionDay::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool IsCall = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          iscall_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ExpirationDays = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          expirationdays_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.Results.Option Values = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OptionDay::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.OptionDay)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool IsCall = 1;
  if (this->iscall() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_iscall(), target);
  }

  // uint32 ExpirationDays = 2;
  if (this->expirationdays() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_expirationdays(), target);
  }

  // repeated .Jde.Markets.Proto.Results.Option Values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(3, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.OptionDay)
  return target;
}

size_t OptionDay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.OptionDay)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Results.Option Values = 3;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool IsCall = 1;
  if (this->iscall() != 0) {
    total_size += 1 + 1;
  }

  // uint32 ExpirationDays = 2;
  if (this->expirationdays() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_expirationdays());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptionDay::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.OptionDay)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionDay* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OptionDay>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.OptionDay)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.OptionDay)
    MergeFrom(*source);
  }
}

void OptionDay::MergeFrom(const OptionDay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.OptionDay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from.iscall() != 0) {
    _internal_set_iscall(from._internal_iscall());
  }
  if (from.expirationdays() != 0) {
    _internal_set_expirationdays(from._internal_expirationdays());
  }
}

void OptionDay::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.OptionDay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionDay::CopyFrom(const OptionDay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.OptionDay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionDay::IsInitialized() const {
  return true;
}

void OptionDay::InternalSwap(OptionDay* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
  swap(iscall_, other->iscall_);
  swap(expirationdays_, other->expirationdays_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OptionDay::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OptionValues::InitAsDefaultInstance() {
}
class OptionValues::_Internal {
 public:
};

OptionValues::OptionValues()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.OptionValues)
}
OptionValues::OptionValues(const OptionValues& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      optiondays_(from.optiondays_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.OptionValues)
}

void OptionValues::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OptionValues_results_2eproto.base);
  requestid_ = 0u;
}

OptionValues::~OptionValues() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.OptionValues)
  SharedDtor();
}

void OptionValues::SharedDtor() {
}

void OptionValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OptionValues& OptionValues::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OptionValues_results_2eproto.base);
  return *internal_default_instance();
}


void OptionValues::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.OptionValues)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  optiondays_.Clear();
  requestid_ = 0u;
  _internal_metadata_.Clear();
}

const char* OptionValues::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .Jde.Markets.Proto.Results.OptionDay OptionDays = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_optiondays(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OptionValues::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.OptionValues)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requestid(), target);
  }

  // repeated .Jde.Markets.Proto.Results.OptionDay OptionDays = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_optiondays_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_optiondays(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.OptionValues)
  return target;
}

size_t OptionValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.OptionValues)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Results.OptionDay OptionDays = 2;
  total_size += 1UL * this->_internal_optiondays_size();
  for (const auto& msg : this->optiondays_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_requestid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptionValues::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.OptionValues)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionValues* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OptionValues>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.OptionValues)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.OptionValues)
    MergeFrom(*source);
  }
}

void OptionValues::MergeFrom(const OptionValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.OptionValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  optiondays_.MergeFrom(from.optiondays_);
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
}

void OptionValues::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.OptionValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionValues::CopyFrom(const OptionValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.OptionValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionValues::IsInitialized() const {
  return true;
}

void OptionValues::InternalSwap(OptionValues* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  optiondays_.InternalSwap(&other->optiondays_);
  swap(requestid_, other->requestid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OptionValues::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageUnion::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.position_ = const_cast< ::Jde::Markets::Proto::Results::Position*>(
      ::Jde::Markets::Proto::Results::Position::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.contract_ = const_cast< ::Jde::Markets::Proto::Contract*>(
      ::Jde::Markets::Proto::Contract::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.message_ = const_cast< ::Jde::Markets::Proto::Results::MessageValue*>(
      ::Jde::Markets::Proto::Results::MessageValue::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.accountlist_ = const_cast< ::Jde::Markets::Proto::Results::AccountList*>(
      ::Jde::Markets::Proto::Results::AccountList::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.accountupdate_ = const_cast< ::Jde::Markets::Proto::Results::AccountUpdate*>(
      ::Jde::Markets::Proto::Results::AccountUpdate::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.accountupdatemulti_ = const_cast< ::Jde::Markets::Proto::Results::AccountUpdateMulti*>(
      ::Jde::Markets::Proto::Results::AccountUpdateMulti::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.portfolioupdate_ = const_cast< ::Jde::Markets::Proto::Results::PortfolioUpdate*>(
      ::Jde::Markets::Proto::Results::PortfolioUpdate::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.tickgeneric_ = const_cast< ::Jde::Markets::Proto::Results::TickGeneric*>(
      ::Jde::Markets::Proto::Results::TickGeneric::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.tickprice_ = const_cast< ::Jde::Markets::Proto::Results::TickPrice*>(
      ::Jde::Markets::Proto::Results::TickPrice::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.ticksize_ = const_cast< ::Jde::Markets::Proto::Results::TickSize*>(
      ::Jde::Markets::Proto::Results::TickSize::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.tickstring_ = const_cast< ::Jde::Markets::Proto::Results::TickString*>(
      ::Jde::Markets::Proto::Results::TickString::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.contractdetails_ = const_cast< ::Jde::Markets::Proto::Results::ContractDetails*>(
      ::Jde::Markets::Proto::Results::ContractDetails::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.error_ = const_cast< ::Jde::Markets::Proto::Results::Error*>(
      ::Jde::Markets::Proto::Results::Error::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.options_ = const_cast< ::Jde::Markets::Proto::Results::OptionValues*>(
      ::Jde::Markets::Proto::Results::OptionValues::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.historicaldata_ = const_cast< ::Jde::Markets::Proto::Results::HistoricalData*>(
      ::Jde::Markets::Proto::Results::HistoricalData::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.stringresult_ = const_cast< ::Jde::Markets::Proto::Results::StringResult*>(
      ::Jde::Markets::Proto::Results::StringResult::internal_default_instance());
  ::Jde::Markets::Proto::Results::_MessageUnion_default_instance_.flex_ = const_cast< ::Jde::Markets::Proto::Results::Flex*>(
      ::Jde::Markets::Proto::Results::Flex::internal_default_instance());
}
class MessageUnion::_Internal {
 public:
  static const ::Jde::Markets::Proto::Results::Position& position(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Contract& contract(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::MessageValue& message(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::AccountList& accountlist(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::AccountUpdate& accountupdate(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::AccountUpdateMulti& accountupdatemulti(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::PortfolioUpdate& portfolioupdate(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::TickGeneric& tickgeneric(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::TickPrice& tickprice(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::TickSize& ticksize(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::TickString& tickstring(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::ContractDetails& contractdetails(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::Error& error(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::OptionValues& options(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::HistoricalData& historicaldata(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::StringResult& stringresult(const MessageUnion* msg);
  static const ::Jde::Markets::Proto::Results::Flex& flex(const MessageUnion* msg);
};

const ::Jde::Markets::Proto::Results::Position&
MessageUnion::_Internal::position(const MessageUnion* msg) {
  return *msg->Value_.position_;
}
const ::Jde::Markets::Proto::Contract&
MessageUnion::_Internal::contract(const MessageUnion* msg) {
  return *msg->Value_.contract_;
}
const ::Jde::Markets::Proto::Results::MessageValue&
MessageUnion::_Internal::message(const MessageUnion* msg) {
  return *msg->Value_.message_;
}
const ::Jde::Markets::Proto::Results::AccountList&
MessageUnion::_Internal::accountlist(const MessageUnion* msg) {
  return *msg->Value_.accountlist_;
}
const ::Jde::Markets::Proto::Results::AccountUpdate&
MessageUnion::_Internal::accountupdate(const MessageUnion* msg) {
  return *msg->Value_.accountupdate_;
}
const ::Jde::Markets::Proto::Results::AccountUpdateMulti&
MessageUnion::_Internal::accountupdatemulti(const MessageUnion* msg) {
  return *msg->Value_.accountupdatemulti_;
}
const ::Jde::Markets::Proto::Results::PortfolioUpdate&
MessageUnion::_Internal::portfolioupdate(const MessageUnion* msg) {
  return *msg->Value_.portfolioupdate_;
}
const ::Jde::Markets::Proto::Results::TickGeneric&
MessageUnion::_Internal::tickgeneric(const MessageUnion* msg) {
  return *msg->Value_.tickgeneric_;
}
const ::Jde::Markets::Proto::Results::TickPrice&
MessageUnion::_Internal::tickprice(const MessageUnion* msg) {
  return *msg->Value_.tickprice_;
}
const ::Jde::Markets::Proto::Results::TickSize&
MessageUnion::_Internal::ticksize(const MessageUnion* msg) {
  return *msg->Value_.ticksize_;
}
const ::Jde::Markets::Proto::Results::TickString&
MessageUnion::_Internal::tickstring(const MessageUnion* msg) {
  return *msg->Value_.tickstring_;
}
const ::Jde::Markets::Proto::Results::ContractDetails&
MessageUnion::_Internal::contractdetails(const MessageUnion* msg) {
  return *msg->Value_.contractdetails_;
}
const ::Jde::Markets::Proto::Results::Error&
MessageUnion::_Internal::error(const MessageUnion* msg) {
  return *msg->Value_.error_;
}
const ::Jde::Markets::Proto::Results::OptionValues&
MessageUnion::_Internal::options(const MessageUnion* msg) {
  return *msg->Value_.options_;
}
const ::Jde::Markets::Proto::Results::HistoricalData&
MessageUnion::_Internal::historicaldata(const MessageUnion* msg) {
  return *msg->Value_.historicaldata_;
}
const ::Jde::Markets::Proto::Results::StringResult&
MessageUnion::_Internal::stringresult(const MessageUnion* msg) {
  return *msg->Value_.stringresult_;
}
const ::Jde::Markets::Proto::Results::Flex&
MessageUnion::_Internal::flex(const MessageUnion* msg) {
  return *msg->Value_.flex_;
}
void MessageUnion::set_allocated_position(::Jde::Markets::Proto::Results::Position* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    set_has_position();
    Value_.position_ = position;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.Position)
}
void MessageUnion::set_allocated_contract(::Jde::Markets::Proto::Contract* contract) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (contract) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      contract = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contract, submessage_arena);
    }
    set_has_contract();
    Value_.contract_ = contract;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.Contract)
}
void MessageUnion::clear_contract() {
  if (_internal_has_contract()) {
    delete Value_.contract_;
    clear_has_Value();
  }
}
void MessageUnion::set_allocated_message(::Jde::Markets::Proto::Results::MessageValue* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    set_has_message();
    Value_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.Message)
}
void MessageUnion::set_allocated_accountlist(::Jde::Markets::Proto::Results::AccountList* accountlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (accountlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      accountlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accountlist, submessage_arena);
    }
    set_has_accountlist();
    Value_.accountlist_ = accountlist;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.AccountList)
}
void MessageUnion::set_allocated_accountupdate(::Jde::Markets::Proto::Results::AccountUpdate* accountupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (accountupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      accountupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accountupdate, submessage_arena);
    }
    set_has_accountupdate();
    Value_.accountupdate_ = accountupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.AccountUpdate)
}
void MessageUnion::set_allocated_accountupdatemulti(::Jde::Markets::Proto::Results::AccountUpdateMulti* accountupdatemulti) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (accountupdatemulti) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      accountupdatemulti = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, accountupdatemulti, submessage_arena);
    }
    set_has_accountupdatemulti();
    Value_.accountupdatemulti_ = accountupdatemulti;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.AccountUpdateMulti)
}
void MessageUnion::set_allocated_portfolioupdate(::Jde::Markets::Proto::Results::PortfolioUpdate* portfolioupdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (portfolioupdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      portfolioupdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, portfolioupdate, submessage_arena);
    }
    set_has_portfolioupdate();
    Value_.portfolioupdate_ = portfolioupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.PortfolioUpdate)
}
void MessageUnion::set_allocated_tickgeneric(::Jde::Markets::Proto::Results::TickGeneric* tickgeneric) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (tickgeneric) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tickgeneric = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tickgeneric, submessage_arena);
    }
    set_has_tickgeneric();
    Value_.tickgeneric_ = tickgeneric;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.TickGeneric)
}
void MessageUnion::set_allocated_tickprice(::Jde::Markets::Proto::Results::TickPrice* tickprice) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (tickprice) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tickprice = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tickprice, submessage_arena);
    }
    set_has_tickprice();
    Value_.tickprice_ = tickprice;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.TickPrice)
}
void MessageUnion::set_allocated_ticksize(::Jde::Markets::Proto::Results::TickSize* ticksize) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (ticksize) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ticksize = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ticksize, submessage_arena);
    }
    set_has_ticksize();
    Value_.ticksize_ = ticksize;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.TickSize)
}
void MessageUnion::set_allocated_tickstring(::Jde::Markets::Proto::Results::TickString* tickstring) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (tickstring) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tickstring = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tickstring, submessage_arena);
    }
    set_has_tickstring();
    Value_.tickstring_ = tickstring;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.TickString)
}
void MessageUnion::set_allocated_contractdetails(::Jde::Markets::Proto::Results::ContractDetails* contractdetails) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (contractdetails) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      contractdetails = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contractdetails, submessage_arena);
    }
    set_has_contractdetails();
    Value_.contractdetails_ = contractdetails;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.ContractDetails)
}
void MessageUnion::set_allocated_error(::Jde::Markets::Proto::Results::Error* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    Value_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.Error)
}
void MessageUnion::set_allocated_options(::Jde::Markets::Proto::Results::OptionValues* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    set_has_options();
    Value_.options_ = options;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.Options)
}
void MessageUnion::set_allocated_historicaldata(::Jde::Markets::Proto::Results::HistoricalData* historicaldata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (historicaldata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      historicaldata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, historicaldata, submessage_arena);
    }
    set_has_historicaldata();
    Value_.historicaldata_ = historicaldata;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.HistoricalData)
}
void MessageUnion::set_allocated_stringresult(::Jde::Markets::Proto::Results::StringResult* stringresult) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (stringresult) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stringresult = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stringresult, submessage_arena);
    }
    set_has_stringresult();
    Value_.stringresult_ = stringresult;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.StringResult)
}
void MessageUnion::set_allocated_flex(::Jde::Markets::Proto::Results::Flex* flex) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_Value();
  if (flex) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      flex = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, flex, submessage_arena);
    }
    set_has_flex();
    Value_.flex_ = flex;
  }
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Results.MessageUnion.Flex)
}
MessageUnion::MessageUnion()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.MessageUnion)
}
MessageUnion::MessageUnion(const MessageUnion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_Value();
  switch (from.Value_case()) {
    case kPosition: {
      _internal_mutable_position()->::Jde::Markets::Proto::Results::Position::MergeFrom(from._internal_position());
      break;
    }
    case kContract: {
      _internal_mutable_contract()->::Jde::Markets::Proto::Contract::MergeFrom(from._internal_contract());
      break;
    }
    case kMessage: {
      _internal_mutable_message()->::Jde::Markets::Proto::Results::MessageValue::MergeFrom(from._internal_message());
      break;
    }
    case kAccountList: {
      _internal_mutable_accountlist()->::Jde::Markets::Proto::Results::AccountList::MergeFrom(from._internal_accountlist());
      break;
    }
    case kAccountUpdate: {
      _internal_mutable_accountupdate()->::Jde::Markets::Proto::Results::AccountUpdate::MergeFrom(from._internal_accountupdate());
      break;
    }
    case kAccountUpdateMulti: {
      _internal_mutable_accountupdatemulti()->::Jde::Markets::Proto::Results::AccountUpdateMulti::MergeFrom(from._internal_accountupdatemulti());
      break;
    }
    case kPortfolioUpdate: {
      _internal_mutable_portfolioupdate()->::Jde::Markets::Proto::Results::PortfolioUpdate::MergeFrom(from._internal_portfolioupdate());
      break;
    }
    case kTickGeneric: {
      _internal_mutable_tickgeneric()->::Jde::Markets::Proto::Results::TickGeneric::MergeFrom(from._internal_tickgeneric());
      break;
    }
    case kTickPrice: {
      _internal_mutable_tickprice()->::Jde::Markets::Proto::Results::TickPrice::MergeFrom(from._internal_tickprice());
      break;
    }
    case kTickSize: {
      _internal_mutable_ticksize()->::Jde::Markets::Proto::Results::TickSize::MergeFrom(from._internal_ticksize());
      break;
    }
    case kTickString: {
      _internal_mutable_tickstring()->::Jde::Markets::Proto::Results::TickString::MergeFrom(from._internal_tickstring());
      break;
    }
    case kContractDetails: {
      _internal_mutable_contractdetails()->::Jde::Markets::Proto::Results::ContractDetails::MergeFrom(from._internal_contractdetails());
      break;
    }
    case kError: {
      _internal_mutable_error()->::Jde::Markets::Proto::Results::Error::MergeFrom(from._internal_error());
      break;
    }
    case kOptions: {
      _internal_mutable_options()->::Jde::Markets::Proto::Results::OptionValues::MergeFrom(from._internal_options());
      break;
    }
    case kHistoricalData: {
      _internal_mutable_historicaldata()->::Jde::Markets::Proto::Results::HistoricalData::MergeFrom(from._internal_historicaldata());
      break;
    }
    case kStringResult: {
      _internal_mutable_stringresult()->::Jde::Markets::Proto::Results::StringResult::MergeFrom(from._internal_stringresult());
      break;
    }
    case kFlex: {
      _internal_mutable_flex()->::Jde::Markets::Proto::Results::Flex::MergeFrom(from._internal_flex());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.MessageUnion)
}

void MessageUnion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageUnion_results_2eproto.base);
  clear_has_Value();
}

MessageUnion::~MessageUnion() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.MessageUnion)
  SharedDtor();
}

void MessageUnion::SharedDtor() {
  if (has_Value()) {
    clear_Value();
  }
}

void MessageUnion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageUnion& MessageUnion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageUnion_results_2eproto.base);
  return *internal_default_instance();
}


void MessageUnion::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:Jde.Markets.Proto.Results.MessageUnion)
  switch (Value_case()) {
    case kPosition: {
      delete Value_.position_;
      break;
    }
    case kContract: {
      delete Value_.contract_;
      break;
    }
    case kMessage: {
      delete Value_.message_;
      break;
    }
    case kAccountList: {
      delete Value_.accountlist_;
      break;
    }
    case kAccountUpdate: {
      delete Value_.accountupdate_;
      break;
    }
    case kAccountUpdateMulti: {
      delete Value_.accountupdatemulti_;
      break;
    }
    case kPortfolioUpdate: {
      delete Value_.portfolioupdate_;
      break;
    }
    case kTickGeneric: {
      delete Value_.tickgeneric_;
      break;
    }
    case kTickPrice: {
      delete Value_.tickprice_;
      break;
    }
    case kTickSize: {
      delete Value_.ticksize_;
      break;
    }
    case kTickString: {
      delete Value_.tickstring_;
      break;
    }
    case kContractDetails: {
      delete Value_.contractdetails_;
      break;
    }
    case kError: {
      delete Value_.error_;
      break;
    }
    case kOptions: {
      delete Value_.options_;
      break;
    }
    case kHistoricalData: {
      delete Value_.historicaldata_;
      break;
    }
    case kStringResult: {
      delete Value_.stringresult_;
      break;
    }
    case kFlex: {
      delete Value_.flex_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void MessageUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.MessageUnion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Value();
  _internal_metadata_.Clear();
}

const char* MessageUnion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Jde.Markets.Proto.Results.Position Position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Contract Contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_contract(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.MessageValue Message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.AccountList AccountList = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_accountlist(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.AccountUpdate AccountUpdate = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_accountupdate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.AccountUpdateMulti AccountUpdateMulti = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_accountupdatemulti(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.PortfolioUpdate PortfolioUpdate = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_portfolioupdate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.TickGeneric TickGeneric = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_tickgeneric(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.TickPrice TickPrice = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_tickprice(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.TickSize TickSize = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_ticksize(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.TickString TickString = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_tickstring(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.ContractDetails ContractDetails = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_contractdetails(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.Error Error = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.OptionValues Options = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.HistoricalData HistoricalData = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_historicaldata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.StringResult StringResult = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_stringresult(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.Flex Flex = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_flex(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageUnion::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.MessageUnion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Results.Position Position = 1;
  if (_internal_has_position()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::position(this), target, stream);
  }

  // .Jde.Markets.Proto.Contract Contract = 2;
  if (_internal_has_contract()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::contract(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.MessageValue Message = 3;
  if (_internal_has_message()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::message(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.AccountList AccountList = 4;
  if (_internal_has_accountlist()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::accountlist(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.AccountUpdate AccountUpdate = 5;
  if (_internal_has_accountupdate()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::accountupdate(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.AccountUpdateMulti AccountUpdateMulti = 6;
  if (_internal_has_accountupdatemulti()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::accountupdatemulti(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.PortfolioUpdate PortfolioUpdate = 7;
  if (_internal_has_portfolioupdate()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::portfolioupdate(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.TickGeneric TickGeneric = 8;
  if (_internal_has_tickgeneric()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::tickgeneric(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.TickPrice TickPrice = 9;
  if (_internal_has_tickprice()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::tickprice(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.TickSize TickSize = 10;
  if (_internal_has_ticksize()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::ticksize(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.TickString TickString = 11;
  if (_internal_has_tickstring()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, _Internal::tickstring(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.ContractDetails ContractDetails = 12;
  if (_internal_has_contractdetails()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, _Internal::contractdetails(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.Error Error = 13;
  if (_internal_has_error()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, _Internal::error(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.OptionValues Options = 14;
  if (_internal_has_options()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, _Internal::options(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.HistoricalData HistoricalData = 15;
  if (_internal_has_historicaldata()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, _Internal::historicaldata(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.StringResult StringResult = 16;
  if (_internal_has_stringresult()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, _Internal::stringresult(this), target, stream);
  }

  // .Jde.Markets.Proto.Results.Flex Flex = 17;
  if (_internal_has_flex()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, _Internal::flex(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.MessageUnion)
  return target;
}

size_t MessageUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.MessageUnion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Value_case()) {
    // .Jde.Markets.Proto.Results.Position Position = 1;
    case kPosition: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.position_);
      break;
    }
    // .Jde.Markets.Proto.Contract Contract = 2;
    case kContract: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.contract_);
      break;
    }
    // .Jde.Markets.Proto.Results.MessageValue Message = 3;
    case kMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.message_);
      break;
    }
    // .Jde.Markets.Proto.Results.AccountList AccountList = 4;
    case kAccountList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.accountlist_);
      break;
    }
    // .Jde.Markets.Proto.Results.AccountUpdate AccountUpdate = 5;
    case kAccountUpdate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.accountupdate_);
      break;
    }
    // .Jde.Markets.Proto.Results.AccountUpdateMulti AccountUpdateMulti = 6;
    case kAccountUpdateMulti: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.accountupdatemulti_);
      break;
    }
    // .Jde.Markets.Proto.Results.PortfolioUpdate PortfolioUpdate = 7;
    case kPortfolioUpdate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.portfolioupdate_);
      break;
    }
    // .Jde.Markets.Proto.Results.TickGeneric TickGeneric = 8;
    case kTickGeneric: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.tickgeneric_);
      break;
    }
    // .Jde.Markets.Proto.Results.TickPrice TickPrice = 9;
    case kTickPrice: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.tickprice_);
      break;
    }
    // .Jde.Markets.Proto.Results.TickSize TickSize = 10;
    case kTickSize: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.ticksize_);
      break;
    }
    // .Jde.Markets.Proto.Results.TickString TickString = 11;
    case kTickString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.tickstring_);
      break;
    }
    // .Jde.Markets.Proto.Results.ContractDetails ContractDetails = 12;
    case kContractDetails: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.contractdetails_);
      break;
    }
    // .Jde.Markets.Proto.Results.Error Error = 13;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.error_);
      break;
    }
    // .Jde.Markets.Proto.Results.OptionValues Options = 14;
    case kOptions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.options_);
      break;
    }
    // .Jde.Markets.Proto.Results.HistoricalData HistoricalData = 15;
    case kHistoricalData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.historicaldata_);
      break;
    }
    // .Jde.Markets.Proto.Results.StringResult StringResult = 16;
    case kStringResult: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.stringresult_);
      break;
    }
    // .Jde.Markets.Proto.Results.Flex Flex = 17;
    case kFlex: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.flex_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageUnion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.MessageUnion)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageUnion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageUnion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.MessageUnion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.MessageUnion)
    MergeFrom(*source);
  }
}

void MessageUnion::MergeFrom(const MessageUnion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.MessageUnion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Value_case()) {
    case kPosition: {
      _internal_mutable_position()->::Jde::Markets::Proto::Results::Position::MergeFrom(from._internal_position());
      break;
    }
    case kContract: {
      _internal_mutable_contract()->::Jde::Markets::Proto::Contract::MergeFrom(from._internal_contract());
      break;
    }
    case kMessage: {
      _internal_mutable_message()->::Jde::Markets::Proto::Results::MessageValue::MergeFrom(from._internal_message());
      break;
    }
    case kAccountList: {
      _internal_mutable_accountlist()->::Jde::Markets::Proto::Results::AccountList::MergeFrom(from._internal_accountlist());
      break;
    }
    case kAccountUpdate: {
      _internal_mutable_accountupdate()->::Jde::Markets::Proto::Results::AccountUpdate::MergeFrom(from._internal_accountupdate());
      break;
    }
    case kAccountUpdateMulti: {
      _internal_mutable_accountupdatemulti()->::Jde::Markets::Proto::Results::AccountUpdateMulti::MergeFrom(from._internal_accountupdatemulti());
      break;
    }
    case kPortfolioUpdate: {
      _internal_mutable_portfolioupdate()->::Jde::Markets::Proto::Results::PortfolioUpdate::MergeFrom(from._internal_portfolioupdate());
      break;
    }
    case kTickGeneric: {
      _internal_mutable_tickgeneric()->::Jde::Markets::Proto::Results::TickGeneric::MergeFrom(from._internal_tickgeneric());
      break;
    }
    case kTickPrice: {
      _internal_mutable_tickprice()->::Jde::Markets::Proto::Results::TickPrice::MergeFrom(from._internal_tickprice());
      break;
    }
    case kTickSize: {
      _internal_mutable_ticksize()->::Jde::Markets::Proto::Results::TickSize::MergeFrom(from._internal_ticksize());
      break;
    }
    case kTickString: {
      _internal_mutable_tickstring()->::Jde::Markets::Proto::Results::TickString::MergeFrom(from._internal_tickstring());
      break;
    }
    case kContractDetails: {
      _internal_mutable_contractdetails()->::Jde::Markets::Proto::Results::ContractDetails::MergeFrom(from._internal_contractdetails());
      break;
    }
    case kError: {
      _internal_mutable_error()->::Jde::Markets::Proto::Results::Error::MergeFrom(from._internal_error());
      break;
    }
    case kOptions: {
      _internal_mutable_options()->::Jde::Markets::Proto::Results::OptionValues::MergeFrom(from._internal_options());
      break;
    }
    case kHistoricalData: {
      _internal_mutable_historicaldata()->::Jde::Markets::Proto::Results::HistoricalData::MergeFrom(from._internal_historicaldata());
      break;
    }
    case kStringResult: {
      _internal_mutable_stringresult()->::Jde::Markets::Proto::Results::StringResult::MergeFrom(from._internal_stringresult());
      break;
    }
    case kFlex: {
      _internal_mutable_flex()->::Jde::Markets::Proto::Results::Flex::MergeFrom(from._internal_flex());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void MessageUnion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.MessageUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageUnion::CopyFrom(const MessageUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.MessageUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageUnion::IsInitialized() const {
  return true;
}

void MessageUnion::InternalSwap(MessageUnion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(Value_, other->Value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageUnion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Transmission::InitAsDefaultInstance() {
}
class Transmission::_Internal {
 public:
};

Transmission::Transmission()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.Transmission)
}
Transmission::Transmission(const Transmission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.Transmission)
}

void Transmission::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Transmission_results_2eproto.base);
}

Transmission::~Transmission() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.Transmission)
  SharedDtor();
}

void Transmission::SharedDtor() {
}

void Transmission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Transmission& Transmission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Transmission_results_2eproto.base);
  return *internal_default_instance();
}


void Transmission::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.Transmission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

const char* Transmission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Jde.Markets.Proto.Results.MessageUnion Messages = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_messages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Transmission::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.Transmission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Results.MessageUnion Messages = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_messages_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(10, this->_internal_messages(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.Transmission)
  return target;
}

size_t Transmission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.Transmission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Jde.Markets.Proto.Results.MessageUnion Messages = 10;
  total_size += 1UL * this->_internal_messages_size();
  for (const auto& msg : this->messages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transmission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.Transmission)
  GOOGLE_DCHECK_NE(&from, this);
  const Transmission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Transmission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.Transmission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.Transmission)
    MergeFrom(*source);
  }
}

void Transmission::MergeFrom(const Transmission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.Transmission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void Transmission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.Transmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transmission::CopyFrom(const Transmission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.Transmission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transmission::IsInitialized() const {
  return true;
}

void Transmission::InternalSwap(Transmission* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  messages_.InternalSwap(&other->messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Transmission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TickGeneric::InitAsDefaultInstance() {
}
class TickGeneric::_Internal {
 public:
};

TickGeneric::TickGeneric()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.TickGeneric)
}
TickGeneric::TickGeneric(const TickGeneric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.TickGeneric)
}

void TickGeneric::SharedCtor() {
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(value_));
}

TickGeneric::~TickGeneric() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.TickGeneric)
  SharedDtor();
}

void TickGeneric::SharedDtor() {
}

void TickGeneric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TickGeneric& TickGeneric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TickGeneric_results_2eproto.base);
  return *internal_default_instance();
}


void TickGeneric::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.TickGeneric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* TickGeneric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.ETickType TickType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_ticktype(static_cast<::Jde::Markets::Proto::Results::ETickType>(val));
        } else goto handle_unusual;
        continue;
      // double Value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TickGeneric::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.TickGeneric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // .Jde.Markets.Proto.Results.ETickType TickType = 2;
  if (this->ticktype() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_ticktype(), target);
  }

  // double Value = 3;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.TickGeneric)
  return target;
}

size_t TickGeneric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.TickGeneric)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // .Jde.Markets.Proto.Results.ETickType TickType = 2;
  if (this->ticktype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ticktype());
  }

  // double Value = 3;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TickGeneric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.TickGeneric)
  GOOGLE_DCHECK_NE(&from, this);
  const TickGeneric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TickGeneric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.TickGeneric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.TickGeneric)
    MergeFrom(*source);
  }
}

void TickGeneric::MergeFrom(const TickGeneric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.TickGeneric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.ticktype() != 0) {
    _internal_set_ticktype(from._internal_ticktype());
  }
  if (!(from.value() <= 0 && from.value() >= 0)) {
    _internal_set_value(from._internal_value());
  }
}

void TickGeneric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.TickGeneric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TickGeneric::CopyFrom(const TickGeneric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.TickGeneric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TickGeneric::IsInitialized() const {
  return true;
}

void TickGeneric::InternalSwap(TickGeneric* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(requestid_, other->requestid_);
  swap(ticktype_, other->ticktype_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TickGeneric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TickAttrib::InitAsDefaultInstance() {
}
class TickAttrib::_Internal {
 public:
};

TickAttrib::TickAttrib()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.TickAttrib)
}
TickAttrib::TickAttrib(const TickAttrib& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&canautoexecute_, &from.canautoexecute_,
    static_cast<size_t>(reinterpret_cast<char*>(&preopen_) -
    reinterpret_cast<char*>(&canautoexecute_)) + sizeof(preopen_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.TickAttrib)
}

void TickAttrib::SharedCtor() {
  ::memset(&canautoexecute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preopen_) -
      reinterpret_cast<char*>(&canautoexecute_)) + sizeof(preopen_));
}

TickAttrib::~TickAttrib() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.TickAttrib)
  SharedDtor();
}

void TickAttrib::SharedDtor() {
}

void TickAttrib::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TickAttrib& TickAttrib::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TickAttrib_results_2eproto.base);
  return *internal_default_instance();
}


void TickAttrib::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.TickAttrib)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&canautoexecute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preopen_) -
      reinterpret_cast<char*>(&canautoexecute_)) + sizeof(preopen_));
  _internal_metadata_.Clear();
}

const char* TickAttrib::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool CanAutoExecute = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          canautoexecute_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool PastLimit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          pastlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool PreOpen = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          preopen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TickAttrib::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.TickAttrib)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool CanAutoExecute = 1;
  if (this->canautoexecute() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_canautoexecute(), target);
  }

  // bool PastLimit = 2;
  if (this->pastlimit() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_pastlimit(), target);
  }

  // bool PreOpen = 3;
  if (this->preopen() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_preopen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.TickAttrib)
  return target;
}

size_t TickAttrib::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.TickAttrib)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool CanAutoExecute = 1;
  if (this->canautoexecute() != 0) {
    total_size += 1 + 1;
  }

  // bool PastLimit = 2;
  if (this->pastlimit() != 0) {
    total_size += 1 + 1;
  }

  // bool PreOpen = 3;
  if (this->preopen() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TickAttrib::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.TickAttrib)
  GOOGLE_DCHECK_NE(&from, this);
  const TickAttrib* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TickAttrib>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.TickAttrib)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.TickAttrib)
    MergeFrom(*source);
  }
}

void TickAttrib::MergeFrom(const TickAttrib& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.TickAttrib)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.canautoexecute() != 0) {
    _internal_set_canautoexecute(from._internal_canautoexecute());
  }
  if (from.pastlimit() != 0) {
    _internal_set_pastlimit(from._internal_pastlimit());
  }
  if (from.preopen() != 0) {
    _internal_set_preopen(from._internal_preopen());
  }
}

void TickAttrib::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.TickAttrib)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TickAttrib::CopyFrom(const TickAttrib& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.TickAttrib)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TickAttrib::IsInitialized() const {
  return true;
}

void TickAttrib::InternalSwap(TickAttrib* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(canautoexecute_, other->canautoexecute_);
  swap(pastlimit_, other->pastlimit_);
  swap(preopen_, other->preopen_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TickAttrib::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TickPrice::InitAsDefaultInstance() {
  ::Jde::Markets::Proto::Results::_TickPrice_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::Jde::Markets::Proto::Results::TickAttrib*>(
      ::Jde::Markets::Proto::Results::TickAttrib::internal_default_instance());
}
class TickPrice::_Internal {
 public:
  static const ::Jde::Markets::Proto::Results::TickAttrib& attributes(const TickPrice* msg);
};

const ::Jde::Markets::Proto::Results::TickAttrib&
TickPrice::_Internal::attributes(const TickPrice* msg) {
  return *msg->attributes_;
}
TickPrice::TickPrice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.TickPrice)
}
TickPrice::TickPrice(const TickPrice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_attributes()) {
    attributes_ = new ::Jde::Markets::Proto::Results::TickAttrib(*from.attributes_);
  } else {
    attributes_ = nullptr;
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.TickPrice)
}

void TickPrice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TickPrice_results_2eproto.base);
  ::memset(&attributes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&attributes_)) + sizeof(price_));
}

TickPrice::~TickPrice() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.TickPrice)
  SharedDtor();
}

void TickPrice::SharedDtor() {
  if (this != internal_default_instance()) delete attributes_;
}

void TickPrice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TickPrice& TickPrice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TickPrice_results_2eproto.base);
  return *internal_default_instance();
}


void TickPrice::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.TickPrice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && attributes_ != nullptr) {
    delete attributes_;
  }
  attributes_ = nullptr;
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(price_));
  _internal_metadata_.Clear();
}

const char* TickPrice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.ETickType TickType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_ticktype(static_cast<::Jde::Markets::Proto::Results::ETickType>(val));
        } else goto handle_unusual;
        continue;
      // double Price = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.TickAttrib Attributes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_attributes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TickPrice::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.TickPrice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // .Jde.Markets.Proto.Results.ETickType TickType = 2;
  if (this->ticktype() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_ticktype(), target);
  }

  // double Price = 3;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_price(), target);
  }

  // .Jde.Markets.Proto.Results.TickAttrib Attributes = 4;
  if (this->has_attributes()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::attributes(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.TickPrice)
  return target;
}

size_t TickPrice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.TickPrice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Jde.Markets.Proto.Results.TickAttrib Attributes = 4;
  if (this->has_attributes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *attributes_);
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // .Jde.Markets.Proto.Results.ETickType TickType = 2;
  if (this->ticktype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ticktype());
  }

  // double Price = 3;
  if (!(this->price() <= 0 && this->price() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TickPrice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.TickPrice)
  GOOGLE_DCHECK_NE(&from, this);
  const TickPrice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TickPrice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.TickPrice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.TickPrice)
    MergeFrom(*source);
  }
}

void TickPrice::MergeFrom(const TickPrice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.TickPrice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_attributes()) {
    _internal_mutable_attributes()->::Jde::Markets::Proto::Results::TickAttrib::MergeFrom(from._internal_attributes());
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.ticktype() != 0) {
    _internal_set_ticktype(from._internal_ticktype());
  }
  if (!(from.price() <= 0 && from.price() >= 0)) {
    _internal_set_price(from._internal_price());
  }
}

void TickPrice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.TickPrice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TickPrice::CopyFrom(const TickPrice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.TickPrice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TickPrice::IsInitialized() const {
  return true;
}

void TickPrice::InternalSwap(TickPrice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(attributes_, other->attributes_);
  swap(requestid_, other->requestid_);
  swap(ticktype_, other->ticktype_);
  swap(price_, other->price_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TickPrice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TickSize::InitAsDefaultInstance() {
}
class TickSize::_Internal {
 public:
};

TickSize::TickSize()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.TickSize)
}
TickSize::TickSize(const TickSize& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.TickSize)
}

void TickSize::SharedCtor() {
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(size_));
}

TickSize::~TickSize() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.TickSize)
  SharedDtor();
}

void TickSize::SharedDtor() {
}

void TickSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TickSize& TickSize::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TickSize_results_2eproto.base);
  return *internal_default_instance();
}


void TickSize::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.TickSize)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(size_));
  _internal_metadata_.Clear();
}

const char* TickSize::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.ETickType TickType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_ticktype(static_cast<::Jde::Markets::Proto::Results::ETickType>(val));
        } else goto handle_unusual;
        continue;
      // int32 Size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TickSize::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.TickSize)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // .Jde.Markets.Proto.Results.ETickType TickType = 2;
  if (this->ticktype() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_ticktype(), target);
  }

  // int32 Size = 3;
  if (this->size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.TickSize)
  return target;
}

size_t TickSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.TickSize)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // .Jde.Markets.Proto.Results.ETickType TickType = 2;
  if (this->ticktype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ticktype());
  }

  // int32 Size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TickSize::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.TickSize)
  GOOGLE_DCHECK_NE(&from, this);
  const TickSize* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TickSize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.TickSize)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.TickSize)
    MergeFrom(*source);
  }
}

void TickSize::MergeFrom(const TickSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.TickSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.ticktype() != 0) {
    _internal_set_ticktype(from._internal_ticktype());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void TickSize::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.TickSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TickSize::CopyFrom(const TickSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.TickSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TickSize::IsInitialized() const {
  return true;
}

void TickSize::InternalSwap(TickSize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(requestid_, other->requestid_);
  swap(ticktype_, other->ticktype_);
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TickSize::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TickString::InitAsDefaultInstance() {
}
class TickString::_Internal {
 public:
};

TickString::TickString()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jde.Markets.Proto.Results.TickString)
}
TickString::TickString(const TickString& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ticktype_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(ticktype_));
  // @@protoc_insertion_point(copy_constructor:Jde.Markets.Proto.Results.TickString)
}

void TickString::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TickString_results_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ticktype_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(ticktype_));
}

TickString::~TickString() {
  // @@protoc_insertion_point(destructor:Jde.Markets.Proto.Results.TickString)
  SharedDtor();
}

void TickString::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TickString::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TickString& TickString::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TickString_results_2eproto.base);
  return *internal_default_instance();
}


void TickString::Clear() {
// @@protoc_insertion_point(message_clear_start:Jde.Markets.Proto.Results.TickString)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ticktype_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(ticktype_));
  _internal_metadata_.Clear();
}

const char* TickString::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 RequestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Jde.Markets.Proto.Results.ETickType TickType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_ticktype(static_cast<::Jde::Markets::Proto::Results::ETickType>(val));
        } else goto handle_unusual;
        continue;
      // string Value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_value(), ptr, ctx, "Jde.Markets.Proto.Results.TickString.Value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TickString::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jde.Markets.Proto.Results.TickString)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_requestid(), target);
  }

  // .Jde.Markets.Proto.Results.ETickType TickType = 2;
  if (this->ticktype() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_ticktype(), target);
  }

  // string Value = 3;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Jde.Markets.Proto.Results.TickString.Value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Jde.Markets.Proto.Results.TickString)
  return target;
}

size_t TickString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Jde.Markets.Proto.Results.TickString)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // int32 RequestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_requestid());
  }

  // .Jde.Markets.Proto.Results.ETickType TickType = 2;
  if (this->ticktype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ticktype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TickString::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jde.Markets.Proto.Results.TickString)
  GOOGLE_DCHECK_NE(&from, this);
  const TickString* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TickString>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jde.Markets.Proto.Results.TickString)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jde.Markets.Proto.Results.TickString)
    MergeFrom(*source);
  }
}

void TickString::MergeFrom(const TickString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jde.Markets.Proto.Results.TickString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.requestid() != 0) {
    _internal_set_requestid(from._internal_requestid());
  }
  if (from.ticktype() != 0) {
    _internal_set_ticktype(from._internal_ticktype());
  }
}

void TickString::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jde.Markets.Proto.Results.TickString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TickString::CopyFrom(const TickString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jde.Markets.Proto.Results.TickString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TickString::IsInitialized() const {
  return true;
}

void TickString::InternalSwap(TickString* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requestid_, other->requestid_);
  swap(ticktype_, other->ticktype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TickString::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Results
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::MessageValue* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::MessageValue >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::MessageValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::StringResult* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::StringResult >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::StringResult >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::TagValue* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::TagValue >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::TagValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::ContractDetails* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::ContractDetails >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::ContractDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::Position* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::Position >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::Position >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::AccountList* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::AccountList >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::AccountList >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::AccountUpdate* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::AccountUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::AccountUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::AccountUpdateMulti* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::AccountUpdateMulti >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::AccountUpdateMulti >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::Bar* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::Bar >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::Bar >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::HistoricalData* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::HistoricalData >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::HistoricalData >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::PortfolioUpdate* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::PortfolioUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::PortfolioUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::Order* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::Order >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::Order >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::Trade* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::Trade >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::Trade >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::Flex* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::Flex >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::Flex >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::Error* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::Error >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::Error >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::Option* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::Option >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::Option >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::OptionDay* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::OptionDay >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::OptionDay >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::OptionValues* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::OptionValues >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::OptionValues >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::MessageUnion* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::MessageUnion >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::MessageUnion >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::Transmission* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::Transmission >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::Transmission >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::TickGeneric* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::TickGeneric >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::TickGeneric >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::TickAttrib* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::TickAttrib >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::TickAttrib >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::TickPrice* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::TickPrice >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::TickPrice >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::TickSize* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::TickSize >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::TickSize >(arena);
}
template<> PROTOBUF_NOINLINE ::Jde::Markets::Proto::Results::TickString* Arena::CreateMaybeMessage< ::Jde::Markets::Proto::Results::TickString >(Arena* arena) {
  return Arena::CreateInternal< ::Jde::Markets::Proto::Results::TickString >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
